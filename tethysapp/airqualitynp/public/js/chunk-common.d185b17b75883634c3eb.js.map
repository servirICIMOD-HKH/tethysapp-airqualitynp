{"version":3,"sources":["webpack:///./src/components/mapComponentEmission.vue?9e39","webpack:///./src/components/chartComponent.vue?33cf","webpack:///./src/components/PrintMap.vue?9212","webpack:///./src/assets/nepalLogo.jpg","webpack:///./src/components/mapControlsEmission.vue?4a82","webpack:///./src/components/selectLocation.vue?cdb5","webpack:///./src/assets/layers.svg","webpack:///./src/assets/markers_default.png","webpack:///./src/views/airquality.vue","webpack:///./src/components/NavBar.vue","webpack:///./src/components/NavBar.vue?5ec4","webpack:///./src/components/emissionTabBody.vue","webpack:///./src/components/about.vue","webpack:///./src/components/about.vue?7ab6","webpack:///./src/components/chartComponent.vue","webpack:///./src/utils/utils.js","webpack:///./src/config.js","webpack:///./src/utils/data.js","webpack:///./src/components/chartComponent.vue?92a2","webpack:///./src/components/mapControlsEmission.vue","webpack:///./src/components/selectLocation.vue","webpack:///./src/components/selectLocation.vue?6ca2","webpack:///./src/utils/defaultParamter.js","webpack:///./src/components/mapControlsEmission.vue?a8ce","webpack:///./src/components/mapComponentEmission.vue","webpack:///./src/components/PrintMap.vue","webpack:///./src/components/mapLagend.vue","webpack:///./src/components/mapLagend.vue?2f76","webpack:///./src/store/actionType.js","webpack:///./src/components/PrintMap.vue?01eb","webpack:///./src/components/mapComponentEmission.vue?691a","webpack:///./src/components/emissionTabBody.vue?509d","webpack:///./src/views/airquality.vue?eb7f","webpack:///./src/store/api/api.js","webpack:///./src/store/api/airquality.js","webpack:///./src/store/modules/airquality.js","webpack:///./src/airqualitynp.js","webpack:///./src/components/NavBar.vue?03aa","webpack:///./src/components/mapLagend.vue?674b","webpack:///./src/components/emissionTabBody.vue?5eaf","webpack:///./src/assets/AODAeroNet.jpg","webpack:///./src/views/airquality.vue?fdb5","webpack:///./src/components/about.vue?50db","webpack:///./src/assets/usembassyPm2p5.jpg","webpack:///./src/assets/rgblegend.jpg"],"names":["module","exports","class","href","src","alt","name","__exports__","span","IndexValue","style","type","centerDialogVisible","height","title","width","center","footer","data","ref","visualizationIn","id","rows","animated","downloadImage","imageInfo","url","$on","emitter","on","$once","once","$off","off","$emit","emit","TethysAppName","TethysAPIAppName","threddDataSource","DefaultMaskWMS","DefaultPlotInfo","colorScheme","BBOX","tickSpan","Resolution","myApp","filterCoodrdinate","startDate","Date","setDate","getDate","endDate","startDateArchive","endDateArchive","forecastDate","IndexColors","APICollection","layerData","Aeronet","USEmbassyAOD","getGeoJSONofStations","getGeoJsonForOneSatation","getAllStationsID","api","commonAPI","RegionGeojson","AOIPolygon","GetMapImage","GetImage","SlicedFromCatalog","constants","recent","layerId","TerraModisTrueColor","PM_AeronetAOD","PM_usembassy","GEOS_PM2p5","TerraModisAOD","O3_GEOS","O3_usembassy","SO2_GEOS","NO2_GEOS","CO_GEOS","archive","O3_TROPOMI","SO2_TROPOMI","NO2_TROPOMI","CO_TROPOMI","forecast","AllBindedLayersList","OnlyOnce","getLayer","layer","i","length","getProperties","AeronetAODStyleFun","feature","resolution","get","AeronetStyle","Style","image","RegularShape","fill","Fill","color","stroke","Stroke","points","radius","rotation","angle","text","Text","font","offsetX","offsetY","USEmbassyPM25StyleFun","USEmbassyAODStyle","Math","PI","USEmbassyO3StyleFun","formatDate","date","d","month","getMonth","day","year","getFullYear","join","LayerCollectionObjet","Recent","catalog","useSLD","isTimeDimensionLayer","SLD","getStartDate","getEndDate","VisibleDivBind","threddLayerProp","visible","opacity","legendPath","ThreddsDataServerVersion","serverType","timeSeries","alignTimeSlider","timeSliderSize","showlegend","showControlPanel","zIndex","source","params","mask","CropOrMask","changeWMSProxy","Archive","RGBComposite","unit","aoi","createGIF","CreateGIFImage","plotInfo","Object","assign","TimeZone","chartDetail","SeriesName","Forecast","DefaultSations","aeronetAOD","pm2p5Embassy","o3Embassy","cascaderObject","label","value","children","otherval","stationData","styleFunction","NotificationWhenAdded","ModelClass","ModelClassDataList","typeName","defaultStation","chart","stationName","sd","subTitle","YaxisLabel","XaxisLabel","plotType","ed","makeRequest","method","Promise","resolve","reject","xhr","XMLHttpRequest","open","onload","this","status","response","statusText","onerror","send","getForecastWMSList","result","parser","DOMParser","xmlDoc","parseFromString","wmsList","interestedDate","replace","DimensionTag","getElementsByTagName","DateHavingCatalog","kk","getAttribute","result1","parser1","xmlDoc1","dataset","jj","slice","push","sort","datetimePointChartObj","SeriesData","plotColor","DataPeriod","marginLeft","backgroundColor","plotBorderColor","plotBorderWidth","fontSize","useHTML","subtitle","series","lineWidth","marker","enabled","symbol","xAxis","align","tickLength","lineColor","yAxis","offset","x","gridLineWidth","legend","credits","plotOptions","lang","noData","exporting","buttons","contextButton","menuItems","allowHTML","datetimeChartObj","forceDownload","fileName","responseType","urlCreator","window","URL","webkitURL","imageUrl","createObjectURL","tag","document","createElement","download","body","appendChild","click","removeChild","AirPollutionWatchApp","props","Number","required","downloadFileName","methods","renderVisualization","mapControlVariable","data_period","select_by","getCascaderInfoObject","parameter_by_pollutant_value","ObservationDatavisualization","console","log","TimeSeriesPlot","wktValue","geometryType","location_by_wktValue","location_by_geometryType","$notify","message","stationObjectValue","interestedObje","filter","obj1","obj2","stationId","getBindedLayer","setVisibleDivBind","param","stId","StartDate","EndDate","PostGetStationData","parsedData","stationObject","childrenData","stdata","folder_name","highchartsObj","WKT","WKTType","layerBind","SourceParam","SourceURL","layerProperties","getCurrentLayer","getParams","forEach","val","split","getUrls","DATADIR","LAYER","LAYERS","wkt","TimeSeriesRasterQuery","geom","computed","created","mounted","HcObject","updateChart","label-position","label-width","size","prop","placeholder","options","item","key","disabled","location_by","default_location","is_AOI_Feature_selected","location_by_pollutant_value1","cascaderData","location_by_pollutant_value2","location_by_pollutant_value3","location_by_pollutant_value4","radioValue","isDisable","Select_Option_Default_Location","is_parameter_by_pollutant_value_stationData","parameter_by_pollutant_value_stationData_val1","ObservationStationOptions","parameter_by_pollutant_value_stationData_val2","parameter_by_pollutant_value_stationData_val3","parameter_by_pollutant_value_stationData_val4","computeData","parameter_by_location","Boolean","Array","featureSelectorDeleteUpdate","wktfeaturegeom","featureExtent","selectInteraction","getFeatures","getLength","features","f","format","writeGeometry","getGeometry","dataProjection","featureProjection","getType","readFeature","getExtent","set","countSelectedFeature","WorkingVectorLayer","getSource","clear","watch","SelectDefaultLocation","newVal","oldVal","selNewValObj","Feature","geoJSON","addFeature","removeFeature","SelectLocationBy","toString","beforeCreate","elem","$refs","defaultLocation","$el","dispatchEvent","Event","defaultParamter","parameter_by_location__1","parameter_by_location__2","parameter_by_location__3","parameter_by_location__4","maskCoordinate","data__layer__initilize__Recent","data__layer__initilize__Archive","data__layer__initilize__Forecast","SelectDataPeriod","addLayersToMap","recentPollutant","getStationInfoObject","view","mapObject","getView","getResolutionForExtent","getSize","zoom","getZoomForResolution","setTimeout","animate","min","SelectByOption","SetLayerOfSelectByParameterLayer","ObservationStationOption","SelectByParameterPollutant","newPollutant","oldPollutant","keys","onChangePollutantsOnSelectByLocation","components","selectLocation","changeDataPeriod","Param","CatalogSlicingParam","data_ext","addRasterLayerToMap","catalogURl","slicingParam","PostSlicedFromCatalog","responseData","resPonseParsed","isTrue","LegendParameter","legendWMS","isArray","encodeURIComponent","timedimensionTilePara","SLD_BODY","Newlayer","TimeDimensionTile","init","then","addThreddsLayer","l5","LayerSwitcher","properties","setCrop","setMask","appendTimeSeriesLayerCollection","COLORSCALERANGE","STYLES","isDataThere","addVectorLayerToMap","regionOrCountry","GeoJSON","GeoJSONParse","objFeature","stationOnCascaderObject","isDatathere","legendPathImage","VectorLayer","selId","readFeatures","addLayer","l3","ClearWMSWithNoDataAndVectorDatawithNodata","reduce","total","currentValue","dd","currentValue1","currentIndex","arr","splice","enableTrueColorMap","TimeSeriesLayerCollection","toUpperCase","that","aa","loading","service","lock","background","PromiseListRasterData","al1","al2","all","close","IsViz","setLayerVisible","setVisible","count","getCityData","dataPeriod","deactivated","LayerSwitcherClick","drawer","custom-class","append-to-body","drawerAppendToBody","modal","modal-class","PrintMapComponentData","PrintMapDialogVisible","before-close","handleClose","top","model","MapPrintValidateForm","rules","autocomplete","AccordionActiveName","accordion","CheckSelectAll","legendInfos","Cancel","submitForm","itemVisible","checked1","calculateHeightWidth","img","Image","imgWidth","imgHeight","BaseUrl","Action","Base","CityData","PROXY_PREFIX","LegendUIList","mapLagend","formName","validate","valid","layout","getMapPDFLayout","outputfilename","mapSize","mapResolution","getResolution","canvas","mapFrameSizePxl","context","getContext","legendInfos1","curObje","item1","item2","copyOLMapTo","addLegendsTo","pos","legendBoxPxl","columnWidth","drawPolygon","northArrowCoordsPxl","drawScaleBar","y","strokeStyle","strokeRect","createMapPDF","setSize","setResolution","frameSize","scaling","resetForm","resetFields","backToNormal","done","target","querySelector","setTarget","deproxifyWMSLayers","DPI","mmToPixel","dim_mm","margin","topMargin","pageWidth","pageHeight","mapWidth","mapHeight","mapHeightPxl","legendHeightPercent","legendHeightPxl","legendPosPxl","arrowBaseWidth","arrowHeight","arrowTop","arrowCenterX","northArrowCoords","pageDim","mapFrameSize","map","pt","fillStyle","fillRect","querySelectorAll","mapCanvas","parentNode","globalAlpha","matrix","transform","match","setTransform","drawImage","maxHeight","labelHeight","getLegendBoxDimension","legendBoxWidth","legendBoxHeight","textBaseline","fillText","itemHeight","left","setAttribute","closePath","maxBoxHeight","bottomMostLegendItemY","lastLegendItemPos","prevSize","coords","beginPath","moveTo","lineTo","rightBottomPos","getScaleBarInfo","rightOffset","bottomOffset","textAlign","filename","pdf","undefined","setFont","setFontType","setFontSize","parseInt","addImage","toDataURL","save","error","scaleLine","clientWidth","innerText","proxifyWMSLayers","layerobj","AllLayersList","timeDimensionLayer","currUrl","includes","setUrls","updateSize","obj","Properties","objj","PrintMap","mapObj","HighLightedLayer","MajorBasin","AllLayers","selectedFilesOnAYear","mapInitilization","osm","Tile","OSM","attributions","View","extent","ScaleControl","ScaleLine","units","Map","layers","controls","attribution","extend","addControl","Control","element","getElementById","fit","setMapObject","changeInventory","addTimeDimensionLayer","addGeoCodingAndInteractionBar","search","SearchNominatim","polygon","reverse","position","className","GeoCodingAndDrawLayer","Vector","setWorkingVectorLayer","e","removePreviousSearchFeature","geojson","getProjection","setProperties","coordinate","max","getZoom","UpDateVectorLayerStyle","mainbar","Bar","setPosition","editbar","toggleOne","group","sbar","html","handleClick","selectCtrl","getInteraction","info","interaction","hitTolerance","Circle","bar","autoActivate","active","setSelectInteraction","setSelectedLayerObj","pedit","fedit","geometryFunction","coordinates","geometry","nbpts","setCoordinates","concat","removeLastPoint","finishDrawing","handleAddFeature","evt","coordi","getCoordinates","area","outputArea","round","li","LineString","outputLength","forEachFeature","StyleObj","osm_id","Icon","anchor","anchorXUnits","anchorYUnits","lineDash","setStyle","addPrintMapFunctionality","PrintButton","getInventory","Inventory","$store","state","inventory","beforeMount","about","chartComponent","mapControlsEmission","mapComponentEmission","NavBar","emissionTabBody","selectedTab","currentTab","getCurrentTab","render","actionBase","axios","create","baseURL","postApiWithoutToken","action","post","res","err","getApiWithoutToken","stringParam","PostGet2DImage","createStore","CascaderInventriesComparison","CascaderSectorContribution","CascaderSectorShare","CascaderTimeSeries","SelectedLayerObj","mutations","setCascaderInventriesComparison","payload","setCascaderSectorContribution","setCascaderSectorShare","setCascaderTimeSeries","actions","getters","modules","library","add","faHandPointer","faTimes","faMapMarkerAlt","faDrawPolygon","faPrint","dom","app","createApp","emission","use","store","ElementPlus","mount"],"mappings":"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","file":"static/airqualitynp/js/chunk-common.d185b17b75883634c3eb.js","sourcesContent":["export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./mapComponentEmission.vue?vue&type=style&index=0&id=adcdbffa&lang=css\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./chartComponent.vue?vue&type=style&index=0&id=2858a76c&scoped=true&lang=css\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./PrintMap.vue?vue&type=style&index=0&id=611c9b58&scoped=true&lang=css\"","module.exports = __webpack_public_path__ + \"static/airqualitynp/images/nepalLogo.jpg\";","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./mapControlsEmission.vue?vue&type=style&index=0&id=50ce8905&scoped=true&lang=css\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./selectLocation.vue?vue&type=style&index=0&id=abc3aec2&lang=scss\"","module.exports = __webpack_public_path__ + \"static/airqualitynp/images/layers.svg\";","module.exports = __webpack_public_path__ + \"static/airqualitynp/images/markers_default.png\";","<template>\n  <div class=\"all-conts\">\n    <el-container class=\"cont-outer\">\n      <el-header>\n        <NavBar></NavBar>\n      </el-header>\n      <!--      <el-container class=\"sidebar-main\">-->\n<!--      <Tabs :activeTab=\"currentTab\"></Tabs>-->\n      <emissionTabBody></emissionTabBody>\n      <!--      </el-container>-->\n    </el-container>\n  </div>\n</template>\n\n<script>\n\nimport NavBar from \"../components/NavBar\";\nimport emissionTabBody from \"../components/emissionTabBody\";\n\n// https://codepen.io/suman111/pen/ExmdwxP?editors=0010\n\nexport default {\n  name: \"current\",\n\n  components: {\n    NavBar,\n        emissionTabBody,\n\n  },\n\n  data() {\n    return {\n      selectedTab: 'emission',\n    };\n  },\n  computed: {\n    currentTab() {\n      return this.getCurrentTab()\n    },\n  },\n  methods: {\n    getCurrentTab() {\n      return this.selectedTab;\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\">\n@import \"../utils/main\";\n\n</style>\n","<template>\n  <nav class=\"navbar navbar-light template-nabar full-height\">\n    <a class=\"navbar-brand\" href=\"\">Air Quality Watch - Nepal</a>\n    <div class=\"nav-logo-image\">\n      <img class=\"logo-image-style\" src=\"@/assets/nepalLogo.jpg\" alt=\"\">\n    </div>\n  </nav>\n</template>\n\n<script>\nexport default {\n  name: \"NavBar\"\n}\n</script>\n\n<style scoped>\n.template-nabar {\n  background-color: rgb(0, 113, 150);\n  overflow: hidden;\n}\n\n.navbar {\n  position: relative;\n  display: -ms-flexbox;\n  display: flex;\n  -ms-flex-wrap: wrap;\n  flex-wrap: wrap;\n  -ms-flex-align: center;\n  align-items: center;\n  -ms-flex-pack: justify;\n  justify-content: space-between;\n}\n\n.full-height {\n  height: 100%;\n}\n\n.template-nabar .navbar-brand {\n  /* padding-bottom: .3125rem; */\n  /* margin-right: 1rem; */\n  font-size: 1.7rem;\n  /* line-height: inherit; */\n  /* white-space: nowrap; */\n}\n\n.template-nabar a {\n  color: white !important;\n}\n\n.navbar-brand {\n  display: inline-block;\n  padding-top: .3125rem;\n  padding-bottom: .3125rem;\n  margin-right: 1rem;\n  font-size: 1.25rem;\n  line-height: inherit;\n  white-space: nowrap;\n}\n\na {\n  color: #007bff;\n  text-decoration: none;\n  background-color: transparent;\n}\n\n.navbar-brand {\n  margin-left: 1rem;\n}\n\n.nav-logo-image {\n  margin-right: 15px;\n  margin-top: 0px;\n  height: inherit;\n}\n\n.logo-image-style {\n  height: 49px;\n}\n\n</style>","import { render } from \"./NavBar.vue?vue&type=template&id=084f5e1e&scoped=true\"\nimport script from \"./NavBar.vue?vue&type=script&lang=js\"\nexport * from \"./NavBar.vue?vue&type=script&lang=js\"\n\nimport \"./NavBar.vue?vue&type=style&index=0&id=084f5e1e&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/suman/tethys3Apps/tethysapp-airqualitynp/tethysapp/airqualitynp/vairqualitynp/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-084f5e1e\"]])\n\nexport default __exports__","<template>\n  <el-row class=\"airquality\">\n    <el-col :span=\"6\" class=\"full-height\">\n      <el-row class=\"first-row\">\n        <el-col :span=\"24\"\n                class=\"full-height full-width padding-left-10 padding-bottom-5 padding-top-10 padding-right-5\">\n          <mapControlsEmission></mapControlsEmission>\n        </el-col>\n      </el-row>\n      <el-row class=\"second-row\">\n        <el-col :span=\"24\"\n                class=\"full-height full-width padding-left-10 padding-bottom-10 padding-top-5 padding-right-5\">\n            <chartComponent  :IndexValue=\"1\"></chartComponent>\n        </el-col>\n      </el-row>\n    </el-col>\n    <el-col :span=\"12\" class=\"full-height\">\n      <el-row class=\"first-row\">\n        <el-col :span=\"24\"\n                class=\"full-height full-width padding-left-5 padding-bottom-5 padding-top-10 padding-right-5\">\n          <mapComponentEmission></mapComponentEmission>\n        </el-col>\n      </el-row>\n      <el-row class=\"second-row\">\n        <el-col :span=\"12\"\n                class=\"full-height full-width padding-left-5 padding-bottom-10 padding-top-5 padding-right-5\">\n          <chartComponent  :IndexValue=\"2\"></chartComponent>\n        </el-col>\n        <el-col :span=\"12\"\n                class=\"full-height full-width padding-left-5 padding-bottom-10 padding-top-5 padding-right-5\">\n          <chartComponent  :IndexValue=\"3\"></chartComponent>\n        </el-col>\n      </el-row>\n    </el-col>\n    <el-col :span=\"6\" class=\"full-height\">\n      <el-row class=\"first-row\">\n        <el-col :span=\"24\"\n                class=\"full-height full-width padding-left-5 padding-bottom-5 padding-top-10 padding-right-10\">\n                    <about></about>\n\n        </el-col>\n      </el-row>\n      <el-row class=\"second-row\">\n        <el-col :span=\"24\"\n                class=\"full-height full-width padding-left-5 padding-bottom-10 padding-top-5 padding-right-10\">\n          <chartComponent  :IndexValue=\"4\"></chartComponent>\n        </el-col>\n      </el-row>\n    </el-col>\n  </el-row>\n</template>\n\n<script>\nimport about from \"./about\";\nimport chartComponent from \"./chartComponent\";\nimport mapControlsEmission from \"./mapControlsEmission\";\nimport mapComponentEmission from \"./mapComponentEmission\";\n// import {mapActions} from \"vuex\";\n\nexport default {\n  name: \"emissionTabBody\",\n  components: {\n    about,\n    chartComponent,\n    mapControlsEmission,\n    mapComponentEmission,\n  },\n  methods: {\n    // ...mapActions([\"getCascaderOptions\"]),\n  },\n  async mounted() {\n    // let data = await this.getCascaderOptions();\n    // console.log(data);\n  }\n}\n</script>\n\n<style scoped>\n\n.bg-purple-dark {\n  background: #99a9bf;\n}\n\n.bg-purple {\n  background: #d3dce6;\n}\n\n.bg-purple-light {\n  background: #e5e9f2;\n}\n\n.grid-content {\n  min-height: 36px;\n}\n\n.row-bg {\n  padding: 10px 0;\n  background-color: #f9fafc;\n}\n\n.full-height {\n  height: 100%;\n}\n.second-row div{\n  /*height: calc(100% - 12.5px);*/\n}\n</style>\n","<template>\n  <div class=\"card-box full-height full-width about-div\">\n    <div class=\"pannel-title\">\n      <h6 class=\"title-heading\">About\n      </h6>\n      <el-button class=\"infoButton\" type=\"text\" @click=\"centerDialogVisible = true\"><i class=\"el-icon-info\"></i>\n      </el-button>\n    </div>\n    <div class=\"body-container\">\n      <el-scrollbar height=\"100%\">\n        <p style=\"text-align:justify;font-size:12px;\">\n          The application is dashboard for air quality monitoring of Nepal.\n          The system consists of different pollutant data like PM2.5, AOD, O3, SO2, NO2, CO for different openly\n          available data source.\n        </p>\n\n        <el-button type=\"text\" @click=\"centerDialogVisible = true\">View More ..</el-button>\n      </el-scrollbar>\n    </div>\n\n    <el-dialog\n        title=\"Air Quality Information System\"\n        v-model=\"centerDialogVisible\"\n        width=\"75%\"\n        center>\n      <span>\n        <div class=\"contributor\" style=\"text-align: center;\">\n<!--                    <img src=\"@/assets/USAIDlogo.png\" style=\"height:50px;\">-->\n          <!--                    <img src=\"@/assets/NASA_LOGO.png\" style=\"height:50px;\">-->\n          <!--                    <img src=\"@/assets/ICIMOD_Master_logo_Blue.png\" style=\"height: 50px;position: relative;top: 5px;\">-->\n          <!--                    <img src=\"@/assets/Servir_HKH_green.png\" style=\"height: 30px;position: relative;top: -4px;\">-->\n                </div>\n<div>\n\n        <p style=\"text-align:justify;font-size:12px;\">\n          The application is dashboard for air quality monitoring of Nepal.\n          The system consists of different pollutant data like PM2.5, AOD, O3, SO2, NO2, CO for different openly available data source.\n        </p>\n      <p style=\"text-align:justify;font-size:12px;\">\n          This application is supported by two initiative SERVIR-HKH and Atmospheric Watch Initiative (AWI) of ICIMOD.\n        </p>\n                        </div>\n      </span>\n      <template #footer>\n      <span class=\"dialog-footer\">\n        <el-button class=\"cancel-dialog\" @click=\"centerDialogVisible = false\">Cancel</el-button>\n      </span>\n      </template>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"about\",\n  data() {\n    return {\n      centerDialogVisible: false\n    };\n  }\n}\n</script>\n\n<style scoped>\n.body-container {\n  height: calc(100% - 54px);\n}\n\n.title-heading {\n  height: 30px;\n  display: inline-block;\n}\n\n.infoButton {\n  height: 30px;\n  min-height: 30px;\n  padding: 8px 20px;\n  float: right;\n  color: #d2dbe3;\n}\n\n.panel-title {\n  display: inline-block;\n  width: 100%;\n}\n\np {\n  font-family: \"Open Sans\", \"Segoe UI\", sans-serif, Verdana, Helvetica;\n  font-size: 1em;\n}\n\n.cancel-dialog {\n}\n\n\n</style>","import { render } from \"./about.vue?vue&type=template&id=7af73aff&scoped=true\"\nimport script from \"./about.vue?vue&type=script&lang=js\"\nexport * from \"./about.vue?vue&type=script&lang=js\"\n\nimport \"./about.vue?vue&type=style&index=0&id=7af73aff&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/suman/tethys3Apps/tethysapp-airqualitynp/tethysapp/airqualitynp/vairqualitynp/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-7af73aff\"]])\n\nexport default __exports__","<template>\n  <div class=\"card-box full-height full-width about-div\" ref=\"outerViz\">\n    <div v-if=\"visualizationIn =='chart'\" class=\"chart-div\" :id=\"'chart'+IndexValue\" ref=\"ChartDiv\">\n      <div class=\"flex-center-vertically\">\n        <!--        Please select a layer and draw a feature to view the chart-->\n        <el-skeleton :rows=\"5\" animated/>\n      </div>\n    </div>\n\n    <div v-if=\"visualizationIn =='2Dimage'\" class=\"position-relative  full-width full-height\" ref=\"Image2D\">\n      <div class=\"download-map-Image\" @click=\"downloadImage()\">\n        <i class=\"fas fa-download\"></i></div>\n      <div class=\"vertically-center\">\n        <img class=\"generated-image\" :width=\"imageInfo.width\" :src=\"imageInfo.url\">\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n\nimport eventHub from \"../utils/utils\"\n\nimport Highcharts from 'highcharts';\n// Alternatively, this is how to load Highstock. Highmaps is similar.\n// import Highcharts from 'highcharts/highstock';\n\n// Load the exporting module.\nimport Exporting from 'highcharts/modules/exporting';\nimport ExportData from 'highcharts/modules/export-data';\nimport NOdata from 'highcharts/modules/no-data-to-display'\nimport MoreHighcharts from 'highcharts/highcharts-more';\n\n// Initialize exporting module.\nExporting(Highcharts);\nNOdata(Highcharts);\nMoreHighcharts(Highcharts);\nExportData(Highcharts);\n\n// window.Highcharts = Highcharts;\nimport {AirPollutionWatchApp} from \"../utils/data\";\nimport {mapActions, mapState, mapGetters} from 'vuex';\n\n\nexport default {\n  name: \"chartComponent\",\n  props: {\n    IndexValue: {\n      type: Number,\n      required: true\n    }\n  },\n  data() {\n    return {\n      AirPollutionWatchApp: AirPollutionWatchApp,\n      visualizationIn: 'chart',\n      imageInfo: {\n        url: '',\n        downloadFileName: '',\n        width: ''\n      }\n    }\n  },\n  methods: {\n    ...mapActions([\"PostGetStationData\", \"PostGet2DImage\", \"TimeSeriesRasterQuery\"]),\n    async renderVisualization() {\n      if (this.mapControlVariable.data_period == \"Recent\") {\n\n        if (this.mapControlVariable.select_by == \"Parameter\") {\n          let kk = this.getCascaderInfoObject(this.mapControlVariable.parameter_by_pollutant_value[1]);\n          if (kk.stationData) {\n            this.ObservationDatavisualization(kk, this.mapControlVariable[\"parameter_by_pollutant_value_stationData_val\" + this.IndexValue]);\n          } else {\n            console.log(\"\");\n            // let Extent = [];\n            // this.mapControlVariable[\"parameter_by_location__\" + this.IndexValue].featureExtent.forEach(function (ext1) {\n            //   Extent.push(parseFloat(ext1.toFixed(6)))\n            // });\n            // console.log(Extent);\n            // let layer = await this.getBindedLayer(kk.layerId);\n            // layer.setVisibleDivBind(true);\n            // // let NewMapObj = myApp.CreateMapObject(WorkingIndex);\n            // let layerPropertiesObject = await this.getLayer(kk.layerId).getCurrentLayer().getProperties();\n            // let layerSourceParam = layerPropertiesObject.source.getParams();\n            // // let layerUrl = layerPropertiesObject.source.getUrls()[0].split('wms')[1];\n            // let plotProp = layerPropertiesObject.plotInfo();\n            // plotProp.wmsList = layerPropertiesObject.wmsList;\n            // plotProp.LAYER = layerSourceParam.LAYERS;\n            // plotProp.TIME = layerSourceParam.TIME;\n            // plotProp.COLORSCALERANGE = layerSourceParam.COLORSCALERANGE;\n            // plotProp.BBOX = Extent;\n            // let date = new Date(layerSourceParam.TIME);\n            // let dateTimeFormat = new Intl.DateTimeFormat('en', {year: 'numeric', month: 'short', day: '2-digit'});\n            // let [{value: month}, , {value: day}, , {value: year}] = dateTimeFormat.formatToParts(date)\n            // let completeDateLabel = `${day} ${month} ${year}`;\n            // plotProp.labelName = completeDateLabel + layerPropertiesObject.plotInfo().LabelTitleTime;\n            // this.visualizationIn = '2Dimage';\n            // let w = this.$refs.outerViz.clientWidth;\n            // let h = this.$refs.outerViz.clientHeight;\n            // let width = w / 96;\n            // let height = h / 96;\n            // plotProp.width = width.toFixed(3);\n            // plotProp.height = height.toFixed(3);\n            // plotProp.rid = 0;\n            // let ParseJson = await this.PostGet2DImage(plotProp);\n            // this.imageInfo.url = ParseJson.image;\n            // this.imageInfo.downloadFileName = plotProp.title + '.png';\n            // this.imageInfo.width = w;\n          }\n        } else {\n          //by location\n          let kk = this.getCascaderInfoObject(this.mapControlVariable[\"location_by_pollutant_value\" + this.IndexValue][1]);\n          if (kk.stationData) {\n            this.ObservationDatavisualization(kk, this.mapControlVariable[\"location_by_pollutant_value\" + this.IndexValue][2]);\n          }\n        }\n      } else if (this.mapControlVariable.data_period == \"Archive\") {\n\n        if (this.mapControlVariable.select_by == \"Parameter\") {\n          let kk = this.getCascaderInfoObject(this.mapControlVariable.parameter_by_pollutant_value[1]);\n          if (kk.stationData) {\n            this.ObservationDatavisualization(kk, this.mapControlVariable[\"parameter_by_pollutant_value_stationData_val\" + this.IndexValue]);\n          } else {\n            this.TimeSeriesPlot(kk, this.mapControlVariable[\"parameter_by_location__\" + this.IndexValue].wktValue, this.mapControlVariable[\"parameter_by_location__\" + this.IndexValue].geometryType);\n          }\n        } else {\n          //by location\n          let kk = this.getCascaderInfoObject(this.mapControlVariable[\"location_by_pollutant_value\" + this.IndexValue][1]);\n          if (kk.stationData) {\n            this.ObservationDatavisualization(kk, this.mapControlVariable[\"location_by_pollutant_value\" + this.IndexValue][2]);\n          } else {\n            if (this.mapControlVariable.location_by_wktValue) {\n              this.TimeSeriesPlot(kk, this.mapControlVariable.location_by_wktValue, this.mapControlVariable.location_by_geometryType);\n            } else {\n              this.$notify({\n                title: 'Warning',\n                message: 'Please select a location on map for time series visualization of ' + kk.label,\n                type: 'warning'\n              });\n            }\n\n          }\n        }\n      } else {\n        if (this.mapControlVariable.select_by == \"Parameter\") {\n          let kk = this.getCascaderInfoObject(this.mapControlVariable.parameter_by_pollutant_value[1]);\n          this.TimeSeriesPlot(kk, this.mapControlVariable[\"parameter_by_location__\" + this.IndexValue].wktValue, this.mapControlVariable[\"parameter_by_location__\" + this.IndexValue].geometryType);\n        } else {\n          //by location\n          let kk = this.getCascaderInfoObject(this.mapControlVariable[\"location_by_pollutant_value\" + this.IndexValue][1]);\n          this.TimeSeriesPlot(kk, this.mapControlVariable.location_by_wktValue, this.mapControlVariable.location_by_geometryType);\n        }\n      }\n\n      // else if (this.mapControlVariable.data_period == \"Archive\") {\n      //\n      // } else if (this.mapControlVariable.data_period == \"Forecast\") {\n      //\n      // }\n    },\n    getCascaderInfoObject(stationObjectValue) {\n      let interestedObje = {};\n      this.AirPollutionWatchApp.cascaderObject[this.mapControlVariable.data_period].data.filter((obj1) => {\n        return obj1.children.filter((obj2) => {\n          if (obj2.value == stationObjectValue) {\n            interestedObje = obj2;\n          }\n          return obj2.value == stationObjectValue\n        }).length > 0 ? true : false;\n      });\n      return interestedObje;\n    },\n    async ObservationDatavisualization(kk, stationId) {\n      let layer = this.getBindedLayer(kk.layerId);\n      layer.setVisibleDivBind(true);\n      let param = {\n        stId: stationId,\n        ModelClass: kk.ModelClass,\n        ModelClassDataList: kk.ModelClassDataList,\n        typeName: kk.typeName,\n        StartDate: this.AirPollutionWatchApp.formatDate(AirPollutionWatchApp.startDate),\n        EndDate: this.AirPollutionWatchApp.formatDate(AirPollutionWatchApp.endDate)\n      };\n      let parsedData = await this.PostGetStationData(param);\n      this.visualizationIn = 'chart'\n      var stationObject = kk.childrenData.filter((stdata) => {\n        return stdata.value == stationId\n      })[0]\n\n      let stationName = stationObject.folder_name;\n\n      let title;\n      if (this.mapControlVariable.data_period == \"Recent\") {\n        title = kk.chart.title(stationName, this.AirPollutionWatchApp.formatDate(AirPollutionWatchApp.startDate));\n      } else {\n        title = kk.chart.title(stationName, this.AirPollutionWatchApp.formatDate(AirPollutionWatchApp.startDate), this.AirPollutionWatchApp.formatDate(AirPollutionWatchApp.endDate));\n      }\n      // debugger;\n      let XaxisLabel = kk.chart.XaxisLabel();\n      let plotType = kk.chart.plotType;\n      let highchartsObj = null;\n      if (plotType === 'point') {\n        highchartsObj = this.AirPollutionWatchApp.datetimePointChartObj(title, kk.chart.subTitle, parsedData.SeriesData, kk.chart.SeriesName, kk.chart.YaxisLabel, XaxisLabel, this.AirPollutionWatchApp.IndexColors[this.IndexValue - 1], this.mapControlVariable.data_period + \" \")\n      } else {\n        highchartsObj = this.AirPollutionWatchApp.datetimeChartObj(title, kk.chart.subTitle, parsedData.SeriesData, kk.chart.SeriesName, kk.chart.YaxisLabel, XaxisLabel, this.AirPollutionWatchApp.IndexColors[this.IndexValue - 1], this.mapControlVariable.data_period + \" \")\n      }\n      Highcharts.chart('chart' + this.IndexValue, highchartsObj);\n\n    },\n    downloadImage() {\n      this.AirPollutionWatchApp.forceDownload(this.imageInfo.url, this.imageInfo.downloadFileName);\n    },\n    async TimeSeriesPlot(kk, WKT, WKTType) {\n\n      let layerBind = this.getBindedLayer(kk.layerId);\n      let layer = layerBind.getLayer();\n\n      let SourceParam = null;\n      let SourceURL = null;\n      let layerProperties = null;\n\n      if (layer.getProperties().ThreddsDataServerVersion) {\n        layerProperties = layer.getProperties();\n        SourceParam = layer.getCurrentLayer().getProperties().source.getParams();\n        SourceURL = [];\n        layerProperties.source.url.forEach(function (val) {\n          SourceURL.push(val.split('/wms/')[1]);\n        });\n\n      } else {\n        layerProperties = layer.getProperties();\n        SourceParam = layer.source.getParams();\n        SourceURL = layer.source.getUrls()[0].split('wms')[1];\n      }\n      let param = {\n        DATADIR: SourceURL,\n        LAYER: SourceParam.LAYERS,\n        wkt: WKT,\n        type: WKTType\n      };\n\n      let parsedData = await this.TimeSeriesRasterQuery(param);\n      if (parsedData.status === 200) {\n        let title = layerProperties.chartDetail.title + \" values\";\n        let subTitle = parsedData.geom;\n        let YaxisLabel = layerProperties.chartDetail.unit;\n        let SeriesName = layerProperties.chartDetail.SeriesName;\n        let highchartsObj = this.AirPollutionWatchApp.datetimeChartObj(title, subTitle, parsedData.SeriesData, SeriesName, YaxisLabel, parsedData.XaxisLabel, this.AirPollutionWatchApp.IndexColors[this.IndexValue - 1])\n        Highcharts.chart('chart' + this.IndexValue, highchartsObj);\n      }\n    }\n  },\n  computed: {\n    ...mapState([\"mapControlVariable\", \"TimeSeriesLayerCollection\"]),\n    ...mapGetters([\"getBindedLayer\", \"getLayer\"]),\n  },\n  created() {\n    eventHub.$on(\"getVisualization\", () => {\n      this.renderVisualization();\n    });\n  },\n  async mounted() {\n\n    // Generate the chart\n//     Highcharts.chart('chart', {\n//       credits: {\n//         enabled: false\n//       },\n//       title: {\n//         align: \"center\",\n//         text: \"Select Indices to Display Chart\",\n//       },\n//       series: [{\n//         data: [],\n//       }],\n//       chart: {\n//         backgroundColor: 'rgba(255,255,255,0)',\n//         style: {\n//           \"fontFamily\": \"Lato,\\\"Lucida Grande\\\", \\\"Lucida Sans Unicode\\\", Verdana, Arial, Helvetica, sans-serif\",\n//           \"fontSize\": \"12px\"\n//         },\n//\n//         animation: true,\n//         zoomType: 'x',\n// //        borderColor: '#000000',\n// //        borderWidth: 2,\n//         type: 'area',\n//       },\n//       noData: {\n//         style: {\n//           fontWeight: 'bold',\n//           fontSize: '15px',\n//           color: '#303030'\n//         }\n//       },\n//     });\n    eventHub.$on('UpdateChart', (HcObject) => {\n      this.updateChart(HcObject);\n    });\n  },\n};\n</script>\n\n<style scoped>\n\n.chart-option .el-row {\n  margin-left: 5px !important;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  margin-right: 8px !important;\n}\n\n.chart-option {\n  border-bottom: solid 1px #e2e2e2;\n}\n\n.chart-div {\n  height: 100%;\n  border-bottom-left-radius: 5px;\n  border-bottom-right-radius: 5px;\n}\n\n.center-content-parent {\n  position: relative;\n}\n\n.center-content-child {\n  width: 100%;\n  height: 100%;\n  padding: 20px;\n\n  position: absolute;\n  top: 50%;\n  left: 50%;\n\n  margin: -70px 0 0 -170px;\n}\n\n.flex-center-vertically {\n  padding: 20px;\n  justify-content: center;\n  display: flex;\n  text-align: center;\n  flex-direction: column;\n  height: 100%;\n}\n\n.plotSelection {\n  display: block;\n}\n\n.sync-chart .el-button {\n  width: 100%;\n}\n\n.position-relative {\n  position: relative !important;\n}\n\n.download-map-Image {\n  z-index: 1000;\n  position: absolute;\n  right: 10px;\n  top: 10px;\n  color: #afacac;\n  cursor: pointer;\n}\n\n.vertically-center {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}\n</style>\n","import emitter from 'tiny-emitter/instance';\n\nexport default {\n  $on: (...args) => emitter.on(...args),\n  $once: (...args) => emitter.once(...args),\n  $off: (...args) => emitter.off(...args),\n  $emit: (...args) => emitter.emit(...args),\n}","export var TethysAppName = \"airquality\";\n\nexport var TethysAPIAppName = \"airquality\";\n\nexport let threddDataSource = 'http://smog.icimod.org:8080/thredds/';\n\nexport var DefaultMaskWMS = false;\n\nexport var DefaultPlotInfo = {\n    colorScheme: 'jet',\n    BBOX: [60, 15, 110, 40],\n    tickSpan: 10,\n    Resolution: 600,\n    width: 12,\n    height: 9\n}","import Style from \"ol/style/Style\";\nimport RegularShape from \"ol/style/RegularShape\"\nimport Fill from \"ol/style/Fill\";\nimport Stroke from \"ol/style/Stroke\"\nimport Text from \"ol/style/Text\"\nimport {TethysAppName, DefaultMaskWMS, DefaultPlotInfo, TethysAPIAppName} from \"../config\";\n\n\nvar myApp = {};\n// First need to initilize\nvar filterCoodrdinate = {};\n\n\nmyApp.startDate = new Date();\nmyApp.startDate.setDate(myApp.startDate.getDate() - 1);\nmyApp.endDate = new Date();\n\nmyApp.startDateArchive = new Date();\nmyApp.startDateArchive.setDate(myApp.startDateArchive.getDate() - 1);\nmyApp.endDateArchive = new Date();\n\nmyApp.forecastDate = new Date();\nmyApp.forecastDate.setDate(myApp.forecastDate.getDate() - 1);\n\nmyApp.IndexColors = ['#0C6CE9', '#962422', '#1D5430', '#F76743'];\n\n\nmyApp.APICollection = {\n    layerData: {\n        Aeronet: '/apps/' + TethysAPIAppName + '/aeronetaodpm/',\n        USEmbassyAOD: '/apps/' + TethysAPIAppName + '/usembassypm/',\n        getGeoJSONofStations: '/apps/' + TethysAPIAppName + '/getGeoJSONofStations/',\n        getGeoJsonForOneSatation: '/apps/' + TethysAPIAppName + '/getGeoJsonForOneSatation/',\n        getAllStationsID: '/apps/' + TethysAPIAppName + '/getAllStationsID/',\n    },\n    api: {\n        commonAPI: '/apps/' + TethysAPIAppName + '/getData/',\n        RegionGeojson: '/apps/' + TethysAPIAppName + '/geojsonregion/',\n        AOIPolygon: '/apps/' + TethysAPIAppName + '/aoipolygon/',\n        GetMapImage: '/apps/' + TethysAPIAppName + '/getmapimage/',\n        GetImage: '/apps/' + TethysAPIAppName + '/downloadImage/',\n        SlicedFromCatalog: '/apps/' + TethysAPIAppName + '/slicedfromcatalog/'\n    }\n};\n\nmyApp.constants = {\n    recent: {\n        layerId: {\n            TerraModisTrueColor: 'Recent__TerraModisTrueColor',\n            PM_AeronetAOD: 'Recent__aeronet',\n            PM_usembassy: 'Recent__usembassy',\n            GEOS_PM2p5: 'Recent__GEOS_PM2p5',\n            TerraModisAOD: 'Recent__TerraModisAOD',\n            O3_GEOS: 'Recent__GEOS_O3',\n            O3_usembassy: 'Recent__usembassy_O3',\n            SO2_GEOS: 'Recent__GEOS_SO2',\n            NO2_GEOS: 'Recent__GEOS_NO2',\n            CO_GEOS: 'Recent__GEOS_CO',\n        }\n    },\n    archive: {\n        layerId: {\n            TerraModisTrueColor: 'Archive__TerraModisTrueColor',\n            GEOS_PM2p5: 'Archive__GEOS_PM2p5',\n            TerraModisAOD: 'Archive__TerraModisAOD',\n            PM_AeronetAOD: 'Archive__aeronet',\n            PM_usembassy: 'Archive__usembassy',\n            O3_usembassy: 'Archive__usembassy_O3',\n            O3_TROPOMI: 'Archive__TROPOMI_O3',\n            O3_GEOS: 'Archive__GEOS_O3',\n            SO2_TROPOMI: 'Archive__TROPOMI_SO2',\n            SO2_GEOS: 'Archive__GEOS_SO2',\n            NO2_TROPOMI: 'Archive__TROPOMI_NO2',\n            NO2_GEOS: 'Archive__GEOS_NO2',\n            CO_TROPOMI: 'Archive__TROPOMI_CO',\n            CO_GEOS: 'Archive__GEOS_CO',\n        }\n    },\n    forecast: {\n        layerId: {\n            GEOS_PM2p5: 'Forecast__GEOS_PM2p5',\n            O3_GEOS: 'Forecast__GEOS_O3',\n            SO2_GEOS: 'Forecast__GEOS_SO2',\n            NO2_GEOS: 'Forecast__GEOS_NO2',\n            CO_GEOS: 'Forecast__GEOS_CO'\n        }\n    }\n};\nmyApp.IndexColors = ['#0C6CE9', '#962422', '#1D5430', '#F76743'];\nmyApp.AllBindedLayersList = [];\nmyApp.OnlyOnce = true;\n\nmyApp.getLayer = function (id) {\n    // console.log(id)\n    var layer;\n    for (let i = 0; i < myApp.AllBindedLayersList.length; i++) {\n        // console.log(myApp.AllBindedLayersList[i].getProperties().id);\n        if (id == myApp.AllBindedLayersList[i].getProperties().id) { ///popDensityLayer.getProperties().id\n            layer = myApp.AllBindedLayersList[i].getLayer();\n            break;\n        }\n    }\n    return layer;\n};\n\nmyApp.AeronetAODStyleFun = function (feature, resolution) {\n    let name = feature.get('name');\n\n    if (resolution > 2445.98490512564) {\n        name = ''\n    }\n    let AeronetStyle = null;\n    AeronetStyle = new Style({\n        image: new RegularShape({\n            fill: new Fill({color: '#D5212E'}),\n            stroke: new Stroke({color: 'black', width: 1}),\n            points: 3,\n            radius: 10,\n            rotation: 0,\n            angle: 0\n        }),\n        text: new Text({\n            font: \"normal 12px Arial\",\n            text: name,\n            fill: new Fill({color: '#aa3300'}),\n            stroke: new Stroke({color: '#ffffff', width: 3}),\n            offsetX: 0,\n            offsetY: 15,\n        })\n    });\n    return AeronetStyle;\n};\nmyApp.USEmbassyPM25StyleFun = function (feature, resolution) {\n    let name = feature.get('name');\n\n    if (resolution > 2445.98490512564) {\n        name = ''\n    }\n    let USEmbassyAODStyle = null;\n    USEmbassyAODStyle = new Style({\n        image: new RegularShape({\n            fill: new Fill({color: '#CBCB59'}),\n            stroke: new Stroke({color: 'black', width: 1}),\n            points: 4,\n            radius: 10,\n            angle: Math.PI / 4\n        }),\n        text: new Text({\n            font: \"normal 12px Arial\",\n            text: name,\n            fill: new Fill({color: '#aa3300'}),\n            stroke: new Stroke({color: '#ffffff', width: 3}),\n            offsetX: 0,\n            offsetY: 15,\n        })\n    });\n    return USEmbassyAODStyle;\n};\nmyApp.USEmbassyO3StyleFun = function (feature, resolution) {\n    let name = feature.get('name');\n    if (resolution > 2445.98490512564) {\n        name = ''\n    }\n    let USEmbassyAODStyle = null;\n    USEmbassyAODStyle = new Style({\n        image: new RegularShape({\n            fill: new Fill({color: '#CBCB59'}),\n            stroke: new Stroke({color: 'black', width: 1}),\n            points: 4,\n            radius: 10,\n            angle: Math.PI / 4\n        }),\n        text: new Text({\n            font: \"normal 12px Arial\",\n            text: name,\n            fill: new Fill({color: '#aa3300'}),\n            stroke: new Stroke({color: '#ffffff', width: 3}),\n            offsetX: 0,\n            offsetY: 15,\n        })\n    });\n    return USEmbassyAODStyle;\n};\n\n\nmyApp.formatDate = function (date) {\n    var d = new Date(date),\n        month = '' + (d.getMonth() + 1),\n        day = '' + d.getDate(),\n        year = d.getFullYear();\n\n    if (month.length < 2)\n        month = '0' + month;\n    if (day.length < 2)\n        day = '0' + day;\n\n    return [year, month, day].join('-');\n};\n\nmyApp.LayerCollectionObjet = {\n    Recent: {\n        data: [\n            {\n                catalog: 'catalog/HKHAirQualityWatch/RecentAndArchive/TerraMODIS-TrueColor1km/catalog.xml',\n                useSLD: true,\n                isTimeDimensionLayer: true,\n                SLD: `<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<StyledLayerDescriptor version=\"1.1.0\" xsi:schemaLocation=\"http://www.opengis.net/sldStyledLayerDescriptor.xsd\"\n                       xmlns=\"http://www.opengis.net/sld\" xmlns:ogc=\"http://www.opengis.net/ogc\"\n                       xmlns:se=\"http://www.opengis.net/se\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n                       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:resc=\"http://www.resc.reading.ac.uk\">\n    <NamedLayer>\n     <se:Name>red</se:Name>\n        <UserStyle>\n            <se:Name>Thesholded colour scheme</se:Name>\n            <se:CoverageStyle>\n                <se:Rule>\n                    <resc:RasterRGBSymbolizer>\n                        <se:Opacity>1.0</se:Opacity>\n                        <se:ColorMap>\n                            <resc:RedBand>\n                                <resc:BandName>red</resc:BandName>\n                                <resc:Range>\n                                    <resc:Minimum>0</resc:Minimum>\n                                    <resc:Maximum>255</resc:Maximum>\n                                </resc:Range>\n                            </resc:RedBand>\n                            <resc:GreenBand>\n                                <resc:BandName>green</resc:BandName>\n                                <resc:Range>\n                                    <resc:Minimum>0</resc:Minimum>\n                                    <resc:Maximum>255</resc:Maximum>\n                                </resc:Range>\n                            </resc:GreenBand>\n                            <resc:BlueBand>\n                                <resc:BandName>blue</resc:BandName>\n                                <resc:Range>\n                                    <resc:Minimum>1</resc:Minimum>\n                                    <resc:Maximum>255</resc:Maximum>\n                                    <resc:Spacing>linear</resc:Spacing>\n                                </resc:Range>\n                            </resc:BlueBand>\n                        </se:ColorMap>\n                    </resc:RasterRGBSymbolizer>\n                </se:Rule>\n            </se:CoverageStyle>\n        </UserStyle>\n    </NamedLayer>\n</StyledLayerDescriptor>\n`,\n                getStartDate: function () {\n                    return myApp.formatDate(myApp.startDate)\n                },\n                getEndDate: function () {\n                    return myApp.formatDate(myApp.startDate)\n                },\n                VisibleDivBind: false,\n                threddLayerProp: {\n                    id: myApp.constants.recent.layerId.TerraModisTrueColor,\n                    title: 'TerraModis-TrueColor (' + myApp.formatDate(myApp.startDate) + ')',\n                    visible: true,\n                    opacity: 1,\n                    legendPath: '/static/' + TethysAppName + '/images/rgbLegend.png',\n                    ThreddsDataServerVersion: 5,\n                    serverType: 'TDS',\n                    timeSeries: false,\n                    alignTimeSlider: 'left',\n                    timeSliderSize: 'small',\n                    showlegend: false,\n                    showControlPanel: false,\n                    zIndex: 10,\n                    source: {\n                        url: [],\n                        params: {\n                            'LAYERS': 'red',\n                            'transparent': true\n                        }\n                    },\n                    mask: DefaultMaskWMS,\n                    CropOrMask: 'crop',\n                    changeWMSProxy: true,\n                }\n            },\n        ]\n    },\n    Archive: {\n        data: [\n            {\n                catalog: 'catalog/HKHAirQualityWatch/RecentAndArchive/TerraMODIS-TrueColor1km/catalog.xml',\n                useSLD: true,\n                isTimeDimensionLayer: true,\n                SLD: `<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<StyledLayerDescriptor version=\"1.1.0\" xsi:schemaLocation=\"http://www.opengis.net/sldStyledLayerDescriptor.xsd\"\n                       xmlns=\"http://www.opengis.net/sld\" xmlns:ogc=\"http://www.opengis.net/ogc\"\n                       xmlns:se=\"http://www.opengis.net/se\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n                       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:resc=\"http://www.resc.reading.ac.uk\">\n    <NamedLayer>\n     <se:Name>red</se:Name>\n        <UserStyle>\n            <se:Name>Thesholded colour scheme</se:Name>\n            <se:CoverageStyle>\n                <se:Rule>\n                    <resc:RasterRGBSymbolizer>\n                        <se:Opacity>1.0</se:Opacity>\n                        <se:ColorMap>\n                            <resc:RedBand>\n                                <resc:BandName>red</resc:BandName>\n                                <resc:Range>\n                                    <resc:Minimum>0</resc:Minimum>\n                                    <resc:Maximum>255</resc:Maximum>\n                                </resc:Range>\n                            </resc:RedBand>\n                            <resc:GreenBand>\n                                <resc:BandName>green</resc:BandName>\n                                <resc:Range>\n                                    <resc:Minimum>0</resc:Minimum>\n                                    <resc:Maximum>255</resc:Maximum>\n                                </resc:Range>\n                            </resc:GreenBand>\n                            <resc:BlueBand>\n                                <resc:BandName>blue</resc:BandName>\n                                <resc:Range>\n                                    <resc:Minimum>1</resc:Minimum>\n                                    <resc:Maximum>255</resc:Maximum>\n                                    <resc:Spacing>linear</resc:Spacing>\n                                </resc:Range>\n                            </resc:BlueBand>\n                        </se:ColorMap>\n                    </resc:RasterRGBSymbolizer>\n                </se:Rule>\n            </se:CoverageStyle>\n        </UserStyle>\n    </NamedLayer>\n</StyledLayerDescriptor>\n`,\n                getStartDate: function () {\n                    return myApp.formatDate(myApp.startDate)\n                },\n                getEndDate: function () {\n                    return myApp.formatDate(myApp.endDate)\n                },\n                VisibleDivBind: true,\n                threddLayerProp: {\n                    id: myApp.constants.archive.layerId.TerraModisTrueColor,\n                    title: 'TerraModis-TrueColor',\n                    visible: true,\n                    opacity: 1,\n                    legendPath: '/static/' + TethysAppName + '/images/rgbLegend.png',\n                    ThreddsDataServerVersion: 5,\n                    serverType: 'TDS',\n                    timeSeries: false,\n                    alignTimeSlider: 'left',\n                    timeSliderSize: 'small',\n                    showlegend: false,\n                    showControlPanel: true,\n                    zIndex: 10,\n                    filterCoodrdinate: filterCoodrdinate,\n                    RGBComposite: true,\n                    source: {\n                        url: [],\n                        params: {\n                            'LAYERS': 'red',\n                            'transparent': true\n                        }\n                    },\n                    mask: DefaultMaskWMS,\n                    CropOrMask: 'crop',\n                    changeWMSProxy: true,\n                }\n            }, {\n                catalog: 'catalog/HKHAirQualityWatch/RecentAndArchive/PM/GEOS-PM2p5/catalog.xml',\n                useSLD: false,\n                isTimeDimensionLayer: true,\n                getStartDate: function () {\n                    return myApp.formatDate(myApp.startDate)\n                },\n                getEndDate: function () {\n                    return myApp.formatDate(myApp.endDate)\n                },\n                VisibleDivBind: false,\n                threddLayerProp: {\n                    id: myApp.constants.archive.layerId.GEOS_PM2p5,\n                    title: 'GEOS PM2.5',\n                    visible: false,\n                    opacity: 0.6,\n                    ThreddsDataServerVersion: 5,\n                    serverType: 'TDS',\n                    timeSeries: false,\n                    alignTimeSlider: 'left',\n                    timeSliderSize: 'small',\n                    showlegend: false,\n                    showControlPanel: true,\n                    source: {\n                        url: [],\n                        params: {\n                            'LAYERS': 'PM2p5',\n                            'STYLES': 'default-scalar/x-Rainbow',\n                            'COLORSCALERANGE': \"0,100\",\n                            'transparent': true\n                        }\n                    },\n                    unit: 'µg/m<sup>3<sup>',\n                    mask: DefaultMaskWMS,\n                    CropOrMask: 'crop',\n                    changeWMSProxy: true,\n                    filterCoodrdinate: filterCoodrdinate,\n                    aoi: true,\n                    zIndex: 11,\n                    api: {\n                        createGIF: myApp.APICollection.api.CreateGIFImage,\n                        GetImage: myApp.APICollection.api.GetImage\n                    },\n                    plotInfo: function () {\n                        return Object.assign(DefaultPlotInfo, {\n                            title: 'GEOS $PM_{2.5}$(µg/$m^{3}$)',\n                            TimeZone: ' UTC'\n                        })\n                    }, chartDetail: {title: 'GEOS', unit: 'PM<sub>2.5</sub>(µg/m<sup>3</sup>)', SeriesName: \"value\"},\n                }\n            }, {\n                catalog: 'catalog/HKHAirQualityWatch/RecentAndArchive/PM/TerraModis-AOD/catalog.xml',\n                useSLD: false,\n                isTimeDimensionLayer: true,\n                getStartDate: function () {\n                    return myApp.formatDate(myApp.startDate)\n                },\n                getEndDate: function () {\n                    return myApp.formatDate(myApp.endDate)\n                },\n                VisibleDivBind: false,\n                threddLayerProp: {\n                    id: myApp.constants.archive.layerId.TerraModisAOD,\n                    title: 'TerraModis-AOD',\n                    visible: false,\n                    opacity: 0.6,\n                    ThreddsDataServerVersion: 5,\n                    serverType: 'TDS',\n                    timeSeries: false,\n                    alignTimeSlider: 'left',\n                    timeSliderSize: 'small',\n                    showlegend: false,\n                    showControlPanel: true,\n                    source: {\n                        url: [],\n                        params: {\n                            'LAYERS': 'aod_550',\n                            'STYLES': 'default-scalar/x-Rainbow',\n                            'COLORSCALERANGE': '0.01,1',\n                            'transparent': true\n                        }\n                    },\n                    unit: '',\n                    mask: DefaultMaskWMS,\n                    CropOrMask: 'crop',\n                    changeWMSProxy: true,\n                    filterCoodrdinate: filterCoodrdinate,\n                    aoi: true,\n                    zIndex: 12,\n                    api: {\n                        createGIF: myApp.APICollection.api.CreateGIFImage,\n                        GetImage: myApp.APICollection.api.GetImage,\n                        TimeZone: ' UTC'\n                    },\n                    plotInfo: function () {\n                        return Object.assign(DefaultPlotInfo, {\n                            title: 'TerraModis-AOD',\n                            TimeZone: ' UTC'\n                        })\n                    }, chartDetail: {title: 'TerraModis-AOD', unit: \"AOD\", SeriesName: \"value\"},\n                }\n            }\n\n\n            , {\n                catalog: 'catalog/HKHAirQualityWatch/RecentAndArchive/O3/TROPOMI-O3/catalog.xml',\n                useSLD: false,\n                isTimeDimensionLayer: true,\n                getStartDate: function () {\n                    return myApp.formatDate(myApp.startDate)\n                },\n                getEndDate: function () {\n                    return myApp.formatDate(myApp.endDate)\n                },\n                VisibleDivBind: false,\n                threddLayerProp: {\n                    id: myApp.constants.archive.layerId.O3_TROPOMI,\n                    title: 'TROPOMI O3',\n                    visible: false,\n                    opacity: 0.6,\n                    ThreddsDataServerVersion: 5,\n                    serverType: 'TDS',\n                    timeSeries: false,\n                    alignTimeSlider: 'left',\n                    timeSliderSize: 'small',\n                    showlegend: false,\n                    showControlPanel: true,\n                    source: {\n                        url: [],\n                        params: {\n                            'LAYERS': 'O3',\n                            'STYLES': 'default-scalar/x-Rainbow',\n                            'COLORSCALERANGE': '0,1',\n                            'transparent': true\n                        }\n                    },\n                    unit: '',\n                    mask: DefaultMaskWMS,\n                    CropOrMask: 'crop',\n                    changeWMSProxy: true,\n                    filterCoodrdinate: filterCoodrdinate,\n                    aoi: true,\n                    zIndex: 13,\n                    api: {\n                        createGIF: myApp.APICollection.api.CreateGIFImage,\n                        GetImage: myApp.APICollection.api.GetImage,\n                        TimeZone: ' UTC'\n                    },\n                    plotInfo: function () {\n                        return Object.assign(DefaultPlotInfo, {\n                            title: 'TROPOMI $O_{3}$($10^{19}$ molecules/$cm^{2}$)',\n                            TimeZone: ' UTC'\n                        })\n                    }, chartDetail: {\n                        title: 'TROPOMI',\n                        unit: \"O<sub>3</sub> (10<sup>19</sup> molecules/cm<sup>2</sup>)\",\n                        SeriesName: \"value\"\n                    },\n                }\n            }, {\n                catalog: 'catalog/HKHAirQualityWatch/RecentAndArchive/O3/GEOS-O3/catalog.xml',\n                useSLD: false,\n                isTimeDimensionLayer: true,\n                getStartDate: function () {\n                    return myApp.formatDate(myApp.startDate)\n                },\n                getEndDate: function () {\n                    return myApp.formatDate(myApp.endDate)\n                },\n                VisibleDivBind: false,\n                threddLayerProp: {\n                    id: myApp.constants.archive.layerId.O3_GEOS,\n                    title: 'GEOS O3',\n                    visible: false,\n                    opacity: 0.6,\n                    ThreddsDataServerVersion: 5,\n                    serverType: 'TDS',\n                    timeSeries: false,\n                    alignTimeSlider: 'left',\n                    timeSliderSize: 'small',\n                    showlegend: false,\n                    showControlPanel: true,\n                    source: {\n                        url: [],\n                        params: {\n                            'LAYERS': 'O3',\n                            'STYLES': 'default-scalar/x-Rainbow',\n                            'COLORSCALERANGE': '0,80',\n                            'transparent': true\n                        }\n                    },\n                    unit: 'ppb',\n                    mask: DefaultMaskWMS,\n                    CropOrMask: 'crop',\n                    changeWMSProxy: true,\n                    filterCoodrdinate: filterCoodrdinate,\n                    aoi: true,\n                    zIndex: 14,\n                    api: {\n                        createGIF: myApp.APICollection.api.CreateGIFImage,\n                        GetImage: myApp.APICollection.api.GetImage,\n                        TimeZone: ' UTC'\n                    },\n                    plotInfo: function () {\n                        return Object.assign(DefaultPlotInfo, {title: 'GEOS $O_{3}$(ppb)', TimeZone: ' UTC'})\n                    }, chartDetail: {title: 'GEOS', unit: \" O<sub>3</sub> (ppb)\", SeriesName: \"value\"},\n                }\n            },\n\n            {\n                catalog: 'catalog/HKHAirQualityWatch/RecentAndArchive/SO2/TROPOMI-SO2/catalog.xml',\n                useSLD: false,\n                isTimeDimensionLayer: true,\n                getStartDate: function () {\n                    return myApp.formatDate(myApp.startDate)\n                },\n                getEndDate: function () {\n                    return myApp.formatDate(myApp.endDate)\n                },\n                VisibleDivBind: false,\n                threddLayerProp: {\n                    id: myApp.constants.archive.layerId.SO2_TROPOMI,\n                    title: 'TROPOMI SO2',\n                    visible: false,\n                    opacity: 0.6,\n                    ThreddsDataServerVersion: 5,\n                    serverType: 'TDS',\n                    timeSeries: false,\n                    alignTimeSlider: 'left',\n                    timeSliderSize: 'small',\n                    showlegend: false,\n                    showControlPanel: true,\n                    source: {\n                        url: [],\n                        params: {\n                            'LAYERS': 'SO2',\n                            'STYLES': 'default-scalar/x-Rainbow',\n                            'COLORSCALERANGE': '0,1',\n                            'transparent': true\n                        }\n                    },\n                    unit: 'molecules / sq.cm',\n                    mask: DefaultMaskWMS,\n                    CropOrMask: 'crop',\n                    changeWMSProxy: true,\n                    filterCoodrdinate: filterCoodrdinate,\n                    aoi: true,\n                    zIndex: 15,\n                    api: {\n                        createGIF: myApp.APICollection.api.CreateGIFImage,\n                        GetImage: myApp.APICollection.api.GetImage,\n                        TimeZone: ' UTC'\n                    },\n                    plotInfo: function () {\n                        return Object.assign(DefaultPlotInfo, {\n                            title: 'TROPOMI $SO_{2}$($10^{17}$ molecules/$cm^{2}$)',\n                            TimeZone: ' UTC'\n                        })\n                    }, chartDetail: {\n                        title: 'TROPOMI',\n                        unit: \"SO<sub>2</sub> (10<sup>17</sup> molecules/cm<sup>2</sup>)\",\n                        SeriesName: \"value\"\n                    },\n                }\n            }, {\n                catalog: 'catalog/HKHAirQualityWatch/RecentAndArchive/SO2/GEOS-SO2/catalog.xml',\n                useSLD: false,\n                isTimeDimensionLayer: true,\n                getStartDate: function () {\n                    return myApp.formatDate(myApp.startDate)\n                },\n                getEndDate: function () {\n                    return myApp.formatDate(myApp.endDate)\n                },\n                VisibleDivBind: false,\n                threddLayerProp: {\n                    id: myApp.constants.archive.layerId.SO2_GEOS,\n                    title: 'GEOS SO2',\n                    visible: false,\n                    opacity: 0.6,\n                    ThreddsDataServerVersion: 5,\n                    serverType: 'TDS',\n                    timeSeries: false,\n                    alignTimeSlider: 'left',\n                    timeSliderSize: 'small',\n                    showlegend: false,\n                    showControlPanel: true,\n                    source: {\n                        url: [],\n                        params: {\n                            'LAYERS': 'SO2',\n                            'STYLES': 'default-scalar/x-Rainbow',\n                            'COLORSCALERANGE': '0,10',\n                            'transparent': true\n                        }\n                    },\n                    unit: 'ppb',\n                    mask: DefaultMaskWMS,\n                    CropOrMask: 'crop',\n                    changeWMSProxy: true,\n                    filterCoodrdinate: filterCoodrdinate,\n                    aoi: true,\n                    zIndex: 16,\n                    api: {\n                        createGIF: myApp.APICollection.api.CreateGIFImage,\n                        GetImage: myApp.APICollection.api.GetImage,\n                        TimeZone: ' UTC'\n                    },\n                    plotInfo: function () {\n                        return Object.assign(DefaultPlotInfo, {title: 'GEOS $SO_{2}$(ppb)', TimeZone: ' UTC'})\n                    }, chartDetail: {title: 'GEOS', unit: \"SO<sub>2</sub> (ppb)\", SeriesName: \"value\"},\n                }\n            },\n            {\n                catalog: 'catalog/HKHAirQualityWatch/RecentAndArchive/NO2/TROPOMI-NO2/catalog.xml',\n                useSLD: false,\n                isTimeDimensionLayer: true,\n                getStartDate: function () {\n                    return myApp.formatDate(myApp.startDate)\n                },\n                getEndDate: function () {\n                    return myApp.formatDate(myApp.endDate)\n                },\n                VisibleDivBind: false,\n                threddLayerProp: {\n                    id: myApp.constants.archive.layerId.NO2_TROPOMI,\n                    title: 'TROPOMI NO2',\n                    visible: false,\n                    opacity: 0.6,\n                    ThreddsDataServerVersion: 5,\n                    serverType: 'TDS',\n                    timeSeries: false,\n                    alignTimeSlider: 'left',\n                    timeSliderSize: 'small',\n                    showlegend: false,\n                    showControlPanel: true,\n                    source: {\n                        url: [],\n                        params: {\n                            'LAYERS': 'NO2',\n                            'STYLES': 'default-scalar/x-Rainbow',\n                            'COLORSCALERANGE': '0,10',\n                            'transparent': true\n                        }\n                    },\n                    unit: 'molecules / sq.cm',\n                    mask: DefaultMaskWMS,\n                    CropOrMask: 'crop',\n                    changeWMSProxy: true,\n                    filterCoodrdinate: filterCoodrdinate,\n                    aoi: true,\n                    zIndex: 17,\n                    api: {\n                        createGIF: myApp.APICollection.api.CreateGIFImage,\n                        GetImage: myApp.APICollection.api.GetImage,\n                        TimeZone: ' UTC'\n                    },\n                    plotInfo: function () {\n                        return Object.assign(DefaultPlotInfo, {\n                            title: 'TROPOMI $NO_{2}$($10^{15}$ molecules/$cm^{2}$)',\n                            TimeZone: ' UTC'\n                        })\n                    },\n                    chartDetail: {\n                        title: 'TROPOMI',\n                        unit: \"NO<sub>2</sub> (10<sup>15</sup> molecules/cm<sup>2</sup>)\",\n                        SeriesName: \"value\"\n                    },\n                }\n            }, {\n                catalog: 'catalog/HKHAirQualityWatch/RecentAndArchive/NO2/GEOS-NO2/catalog.xml',\n                useSLD: false,\n                isTimeDimensionLayer: true,\n                getStartDate: function () {\n                    return myApp.formatDate(myApp.startDate);\n                },\n                getEndDate: function () {\n                    return myApp.formatDate(myApp.endDate);\n                },\n                VisibleDivBind: false,\n                threddLayerProp: {\n                    id: myApp.constants.archive.layerId.NO2_GEOS,\n                    title: 'GEOS NO2',\n                    visible: false,\n                    opacity: 0.6,\n                    ThreddsDataServerVersion: 5,\n                    serverType: 'TDS',\n                    timeSeries: false,\n                    alignTimeSlider: 'left',\n                    timeSliderSize: 'small',\n                    showlegend: false,\n                    showControlPanel: true,\n                    source: {\n                        url: [],\n                        params: {\n                            'LAYERS': 'NO2',\n                            'STYLES': 'default-scalar/x-Rainbow',\n                            'COLORSCALERANGE': '0,10',\n                            'transparent': true\n                        }\n                    },\n                    unit: 'ppb',\n                    mask: DefaultMaskWMS,\n                    CropOrMask: 'crop',\n                    changeWMSProxy: true,\n                    filterCoodrdinate: filterCoodrdinate,\n                    aoi: true,\n                    zIndex: 18,\n                    api: {\n                        createGIF: myApp.APICollection.api.CreateGIFImage,\n                        GetImage: myApp.APICollection.api.GetImage,\n                        TimeZone: ' UTC'\n                    },\n                    plotInfo: function () {\n                        return Object.assign(DefaultPlotInfo, {title: 'GEOS $NO_{2}$(ppb)', TimeZone: ' UTC'})\n                    }, chartDetail: {title: 'GEOS', unit: \"NO<sub>2</sub> (ppb)\", SeriesName: \"value\"},\n                }\n            },\n\n            {\n                catalog: 'catalog/HKHAirQualityWatch/RecentAndArchive/CO/TROPOMI-CO/catalog.xml',\n                useSLD: false,\n                isTimeDimensionLayer: true,\n                getStartDate: function () {\n                    return myApp.formatDate(myApp.startDate);\n                },\n                getEndDate: function () {\n                    return myApp.formatDate(myApp.endDate);\n                },\n                VisibleDivBind: false,\n                threddLayerProp: {\n                    id: myApp.constants.archive.layerId.CO_TROPOMI,\n                    title: 'TROPOMI CO',\n                    visible: false,\n                    opacity: 0.6,\n                    ThreddsDataServerVersion: 5,\n                    serverType: 'TDS',\n                    timeSeries: false,\n                    alignTimeSlider: 'left',\n                    timeSliderSize: 'small',\n                    showlegend: false,\n                    showControlPanel: true,\n                    source: {\n                        url: [],\n                        params: {\n                            'LAYERS': 'CO',\n                            'STYLES': 'default-scalar/x-Rainbow',\n                            'COLORSCALERANGE': '1,4',\n                            'transparent': true\n                        }\n                    },\n                    unit: 'molecules / sq.cm',\n                    mask: DefaultMaskWMS,\n                    CropOrMask: 'crop',\n                    changeWMSProxy: true,\n                    filterCoodrdinate: filterCoodrdinate,\n                    aoi: true,\n                    zIndex: 19,\n                    api: {\n                        createGIF: myApp.APICollection.api.CreateGIFImage,\n                        GetImage: myApp.APICollection.api.GetImage,\n                        TimeZone: ' UTC'\n                    },\n                    plotInfo: function () {\n                        return Object.assign(DefaultPlotInfo, {\n                            title: 'TROPOMI CO($10^{18}$ molecules/$cm^{2}$)',\n                            TimeZone: ' UTC'\n                        })\n                    }, chartDetail: {\n                        title: 'TROPOMI',\n                        unit: \"CO (10<sup>18</sup> molecules/cm<sup>2</sup>)\",\n                        SeriesName: \"value\"\n                    },\n                }\n            }, {\n                catalog: 'catalog/HKHAirQualityWatch/RecentAndArchive/CO/GEOS-CO/catalog.xml',\n                useSLD: false,\n                isTimeDimensionLayer: true,\n                getStartDate: function () {\n                    return myApp.formatDate(myApp.startDate);\n                },\n                getEndDate: function () {\n                    return myApp.formatDate(myApp.endDate);\n                },\n                VisibleDivBind: false,\n                threddLayerProp: {\n                    id: myApp.constants.archive.layerId.CO_GEOS,\n                    title: 'GEOS CO',\n                    visible: false,\n                    opacity: 0.6,\n                    ThreddsDataServerVersion: 5,\n                    serverType: 'TDS',\n                    timeSeries: false,\n                    alignTimeSlider: 'left',\n                    timeSliderSize: 'small',\n                    showlegend: false,\n                    showControlPanel: true,\n                    source: {\n                        url: [],\n                        params: {\n                            'LAYERS': 'CO',\n                            'STYLES': 'default-scalar/x-Rainbow',\n                            'COLORSCALERANGE': '0,500',\n                            'transparent': true\n                        }\n                    },\n                    unit: 'ppb',\n                    mask: DefaultMaskWMS,\n                    CropOrMask: 'crop',\n                    changeWMSProxy: true,\n                    filterCoodrdinate: filterCoodrdinate,\n                    aoi: true,\n                    zIndex: 20,\n                    api: {\n                        createGIF: myApp.APICollection.api.CreateGIFImage,\n                        GetImage: myApp.APICollection.api.GetImage,\n                        TimeZone: ' UTC'\n                    },\n                    plotInfo: function () {\n                        return Object.assign(DefaultPlotInfo, {title: 'GEOS CO(ppb)'})\n                    }, chartDetail: {title: 'GEOS', unit: \"CO (ppb)\", SeriesName: \"value\"},\n                }\n            },]\n    },\n    Forecast: {\n        data: [\n            {\n                catalog: 'catalog/HKHAirQualityWatch/Forecast/PM/GEOS-PM2p5/catalog.xml',\n                useSLD: false,\n                isTimeDimensionLayer: true,\n                VisibleDivBind: false,\n                threddLayerProp: {\n                    id: myApp.constants.forecast.layerId.GEOS_PM2p5,\n                    title: 'GEOS PM2.5',\n                    visible: false,\n                    opacity: 0.6,\n                    ThreddsDataServerVersion: 5,\n                    serverType: 'TDS',\n                    timeSeries: false,\n                    alignTimeSlider: 'left',\n                    timeSliderSize: 'small',\n                    showlegend: false,\n                    showControlPanel: true,\n                    source: {\n                        url: [],\n                        params: {\n                            'LAYERS': 'PM2p5',\n                            'STYLES': 'default-scalar/x-Rainbow',\n                            'COLORSCALERANGE': \"0,100\",\n                            'transparent': true\n                        }\n                    },\n                    unit: 'µg/m<sup>3<sup>',\n                    mask: DefaultMaskWMS,\n                    CropOrMask: 'crop',\n                    changeWMSProxy: true,\n                    filterCoodrdinate: filterCoodrdinate,\n                    aoi: true,\n                    zIndex: 20,\n                    api: {\n                        createGIF: myApp.APICollection.api.CreateGIFImage,\n                        GetImage: myApp.APICollection.api.GetImage\n                    },\n                    plotInfo: function () {\n                        return Object.assign(DefaultPlotInfo, {title: 'GEOS $PM_{2.5}$(µg/$m^{3}$)', TimeZone: ' UTC'})\n                    },\n                    chartDetail: {title: 'GEOS', unit: 'PM<sub>2.5</sub>(µg/m<sup>3</sup>)', SeriesName: \"value\"},\n\n                }\n            }, {\n                catalog: 'catalog/HKHAirQualityWatch/Forecast/CO/GEOS-CO/catalog.xml',\n                useSLD: false,\n                isTimeDimensionLayer: true,\n                VisibleDivBind: false,\n                threddLayerProp: {\n                    id: myApp.constants.forecast.layerId.CO_GEOS,\n                    title: 'GEOS CO',\n                    visible: false,\n                    opacity: 0.6,\n                    ThreddsDataServerVersion: 5,\n                    serverType: 'TDS',\n                    timeSeries: false,\n                    alignTimeSlider: 'left',\n                    timeSliderSize: 'small',\n                    showlegend: false,\n                    showControlPanel: true,\n                    source: {\n                        url: [],\n                        params: {\n                            'LAYERS': 'CO',\n                            'STYLES': 'default-scalar/x-Rainbow',\n                            'COLORSCALERANGE': \"0,500\",\n                            'transparent': true\n                        }\n                    },\n                    unit: '',\n                    mask: DefaultMaskWMS,\n                    CropOrMask: 'crop',\n                    changeWMSProxy: true,\n                    filterCoodrdinate: filterCoodrdinate,\n                    aoi: true,\n                    zIndex: 21,\n                    api: {\n                        createGIF: myApp.APICollection.api.CreateGIFImage,\n                        GetImage: myApp.APICollection.api.GetImage,\n                        TimeZone: ' UTC'\n                    },\n                    plotInfo: function () {\n                        return Object.assign(DefaultPlotInfo, {title: 'GEOS CO(ppb)'})\n                    },\n                    chartDetail: {title: 'GEOS', unit: \"CO (ppb)\", SeriesName: \"value\"},\n\n                }\n            }, {\n                catalog: 'catalog/HKHAirQualityWatch/Forecast/NO2/GEOS-NO2/catalog.xml',\n                useSLD: false,\n                isTimeDimensionLayer: true,\n                VisibleDivBind: false,\n                threddLayerProp: {\n                    id: myApp.constants.forecast.layerId.NO2_GEOS,\n                    title: 'GEOS NO2',\n                    visible: false,\n                    opacity: 0.6,\n                    ThreddsDataServerVersion: 5,\n                    serverType: 'TDS',\n                    timeSeries: false,\n                    alignTimeSlider: 'left',\n                    timeSliderSize: 'small',\n                    showlegend: false,\n                    showControlPanel: true,\n                    source: {\n                        url: [],\n                        params: {\n                            'LAYERS': 'NO2',\n                            'STYLES': 'default-scalar/x-Rainbow',\n                            'COLORSCALERANGE': \"0,10\",\n                            'transparent': true\n                        }\n                    },\n                    unit: '',\n                    mask: DefaultMaskWMS,\n                    CropOrMask: 'crop',\n                    changeWMSProxy: true,\n                    filterCoodrdinate: filterCoodrdinate,\n                    aoi: true,\n                    zIndex: 22,\n                    api: {\n                        createGIF: myApp.APICollection.api.CreateGIFImage,\n                        GetImage: myApp.APICollection.api.GetImage,\n                        TimeZone: ' UTC'\n                    },\n                    plotInfo: function () {\n                        return Object.assign(DefaultPlotInfo, {title: 'TROPOMI $NO_{2}$($10^{15}$ molecules/$cm^{2}$)'})\n                    },\n                    chartDetail: {title: 'GEOS', unit: \"NO<sub>2</sub> (ppb)\", SeriesName: \"value\"},\n                }\n            }, {\n                catalog: 'catalog/HKHAirQualityWatch/Forecast/O3/GEOS-O3/catalog.xml',\n                useSLD: false,\n                isTimeDimensionLayer: true,\n                VisibleDivBind: false,\n                threddLayerProp: {\n                    id: myApp.constants.forecast.layerId.O3_GEOS,\n                    title: 'GEOS O3',\n                    visible: false,\n                    opacity: 0.6,\n                    ThreddsDataServerVersion: 5,\n                    serverType: 'TDS',\n                    timeSeries: false,\n                    alignTimeSlider: 'left',\n                    timeSliderSize: 'small',\n                    showlegend: false,\n                    showControlPanel: true,\n                    source: {\n                        url: [],\n                        params: {\n                            'LAYERS': 'O3',\n                            'STYLES': 'default-scalar/x-Rainbow',\n                            'COLORSCALERANGE': \"0,80\",\n                            'transparent': true\n                        }\n                    },\n                    unit: '',\n                    mask: DefaultMaskWMS,\n                    CropOrMask: 'crop',\n                    changeWMSProxy: true,\n                    filterCoodrdinate: filterCoodrdinate,\n                    aoi: true,\n                    zIndex: 23,\n                    api: {\n                        createGIF: myApp.APICollection.api.CreateGIFImage,\n                        GetImage: myApp.APICollection.api.GetImage,\n                        TimeZone: ' UTC'\n                    },\n                    plotInfo: function () {\n                        return Object.assign(DefaultPlotInfo, {title: 'GEOS $O_{3}$(ppb)'})\n                    },\n                    chartDetail: {title: 'GEOS', unit: \" O<sub>3</sub> (ppb)\", SeriesName: \"value\"},\n                }\n            }, {\n                catalog: 'catalog/HKHAirQualityWatch/Forecast/SO2/GEOS-SO2/catalog.xml',\n                useSLD: false,\n                isTimeDimensionLayer: true,\n                VisibleDivBind: false,\n                threddLayerProp: {\n                    id: myApp.constants.forecast.layerId.SO2_GEOS,\n                    title: 'GEOS SO2',\n                    visible: false,\n                    opacity: 0.6,\n                    ThreddsDataServerVersion: 5,\n                    serverType: 'TDS',\n                    timeSeries: false,\n                    alignTimeSlider: 'left',\n                    timeSliderSize: 'small',\n                    showlegend: false,\n                    showControlPanel: true,\n                    source: {\n                        url: [],\n                        params: {\n                            'LAYERS': 'SO2',\n                            'STYLES': 'default-scalar/x-Rainbow',\n                            'COLORSCALERANGE': \"0,10\",\n                            'transparent': true\n                        }\n                    },\n                    unit: '',\n                    mask: DefaultMaskWMS,\n                    CropOrMask: 'crop',\n                    changeWMSProxy: true,\n                    filterCoodrdinate: filterCoodrdinate,\n                    aoi: true,\n                    zIndex: 24,\n                    api: {\n                        createGIF: myApp.APICollection.api.CreateGIFImage,\n                        GetImage: myApp.APICollection.api.GetImage,\n                        TimeZone: ' UTC'\n                    },\n                    plotInfo: function () {\n                        return Object.assign(DefaultPlotInfo, {title: 'TROPOMI $SO_{2}$($10^{17}$ molecules/$cm^{2}$)'})\n                    },\n                    chartDetail: {title: 'GEOS', unit: \"SO<sub>2</sub> (ppb)\", SeriesName: \"value\"},\n                }\n            }\n        ]\n    }\n};\n\nmyApp.DefaultSations = {\n    aeronetAOD: [9, 14, 9, 14],\n    pm2p5Embassy: [6, 7, 6, 7],\n    o3Embassy: [6, 7, 6, 7]\n}\n\nmyApp.cascaderObject = {\n    Recent: {\n        data: [\n            {\n                label: 'PM',\n                value: 1,\n                children: [\n                    {\n                        label: 'Surface Observation-AOD (AERONET)',\n                        value: 11,\n                        layerId: myApp.constants.recent.layerId.PM_AeronetAOD,\n                        otherval: \"test\",\n                        stationData: true,\n                        styleFunction: myApp.AeronetAODStyleFun,\n                        NotificationWhenAdded: \"Please Select AERONET AOD Station on map\",\n                        ModelClass: 'AeronetAod',\n                        ModelClassDataList: 'AeronetDataList',\n                        typeName: 'aod',\n                        defaultStation: myApp.DefaultSations.aeronetAOD,\n                        chart: {\n                            title: function (stationName, sd) {\n                                return 'AERONET AOD at ' + stationName + ' (' + sd + ')';\n                            },\n                            subTitle: 'AERONET level 1.5 data measured at 500nm',\n                            SeriesName: 'SeriesName',\n                            YaxisLabel: 'AOD (500nm)',\n                            XaxisLabel: function () {\n                                return 'Time (UTC)'\n                            },\n                            plotType: 'point'\n                        }\n                    },\n                    {\n                        label: 'Ground Observation-PM2.5',\n                        layerId: myApp.constants.recent.layerId.PM_usembassy,\n                        value: 12,\n                        stationData: true,\n                        styleFunction: myApp.USEmbassyPM25StyleFun,\n                        NotificationWhenAdded: \"Please Select US Embassy 2.5 Station on map\",\n                        ModelClass: 'UsEmbassyPm',\n                        ModelClassDataList: 'UsEmbassyDataList',\n                        typeName: 'pm',\n                        defaultStation: myApp.DefaultSations.pm2p5Embassy,\n                        chart: {\n                            title: function (stationName, sd) {\n                                return stationName + ' (' + sd + ')'\n                            },\n                            subTitle: 'source: AirNow',\n                            SeriesName: 'PM2.5',\n                            YaxisLabel: 'PM<sub>2.5</sub>(μg/m<sup>3</sup>)',\n                            XaxisLabel: function () {\n                                return 'Time (UTC)'\n                            }\n                        }\n                    },\n                ]\n            }, {\n                label: 'O3',\n                value: 2,\n                children: [\n                    {\n                        label: 'Surface Observation-O3',\n                        layerId: myApp.constants.recent.layerId.O3_usembassy,\n                        value: 23,\n                        stationData: true,\n                        styleFunction: myApp.USEmbassyO3StyleFun,\n                        NotificationWhenAdded: \"Please Select US Embassy O3 Station on map\",\n                        ModelClass: 'UsEmbassyPm',\n                        ModelClassDataList: 'UsEmbassyDataList',\n                        typeName: 'O3',\n                        defaultStation: myApp.DefaultSations.o3Embassy,\n                        chart: {\n                            title: function (stationName, sd) {\n                                return stationName + ' (' + sd + ')'\n                            },\n                            subTitle: 'source: AirNow',\n                            SeriesName: 'O3',\n                            YaxisLabel: 'O<sub>3</sub>(ppb)',\n                            XaxisLabel: function () {\n                                return 'Time (UTC)'\n                            }\n                        }\n                    },\n                ]\n            }]\n    },\n    Archive: {\n        data: [\n            {\n                label: 'PM',\n                value: 1,\n                children: [\n                    {\n                        label: 'Surface Observation-AOD (AERONET)',\n                        value: 11,\n                        layerId: myApp.constants.archive.layerId.PM_AeronetAOD,\n                        stationData: true,\n                        styleFunction: myApp.AeronetAODStyleFun,\n                        NotificationWhenAdded: \"Please Select AERONET AOD Station on map\",\n                        ModelClass: 'AeronetAod',\n                        ModelClassDataList: 'AeronetDataList',\n                        typeName: 'aod',\n                        defaultStation: myApp.DefaultSations.aeronetAOD,\n                        chart: {\n                            title: function (stationName, sd, ed) {\n                                return `${stationName} (${sd} - ${ed})`\n                            },\n                            subTitle: 'AERONET level 1.5 data measured at 500nm',\n                            SeriesName: 'SeriesName',\n                            YaxisLabel: 'AOD',\n                            XaxisLabel: function () {\n                                return 'Time (UTC)'\n                            },\n                            plotType: 'point'\n\n                        }\n                    },\n                    {\n                        label: 'Ground Observation-PM2.5',\n                        layerId: myApp.constants.archive.layerId.PM_usembassy,\n                        value: 12,\n                        stationData: true,\n                        styleFunction: myApp.USEmbassyPM25StyleFun,\n                        NotificationWhenAdded: \"Please Select US Embassy 2.5 Station on map\",\n                        ModelClass: 'UsEmbassyPm',\n                        ModelClassDataList: 'UsEmbassyDataList',\n                        typeName: 'pm',\n                        defaultStation: myApp.DefaultSations.pm2p5Embassy,\n                        chart: {\n                            title: function (stationName, sd, ed) {\n                                return `${stationName} (${sd} - ${ed})`\n                            },\n                            subTitle: 'source: AirNow',\n                            SeriesName: 'PM2.5',\n                            YaxisLabel: 'PM<sub>2.5</sub>(μg/m<sup>3</sup>)',\n                            XaxisLabel: function () {\n                                return 'Time (UTC)'\n                            }\n                        }\n                    },\n                    {\n                        label: 'Model-PM2.5 (GEOS)',\n                        layerId: myApp.constants.archive.layerId.GEOS_PM2p5,\n                        value: 13,\n                    },\n                    {\n                        label: 'Satellite-AOD (Terra-MODIS)',\n                        layerId: myApp.constants.archive.layerId.TerraModisAOD,\n                        value: 14,\n                    }\n                ]\n            }, {\n                label: 'O3',\n                value: 2,\n                children: [\n                    // {\n                    //     label: 'Satellite-O3 (TROPOMI)',\n                    //     layerId: myApp.constants.archive.layerId.O3_TROPOMI,\n                    //     value: 21,\n                    // },\n                    {\n                        label: 'Model-O3 (GEOS)',\n                        layerId: myApp.constants.archive.layerId.O3_GEOS,\n                        value: 22,\n                    }, {\n                        label: 'Surface Observation-O3',\n                        layerId: myApp.constants.archive.layerId.O3_usembassy,\n                        value: 23,\n                        stationData: true,\n                        styleFunction: myApp.USEmbassyO3StyleFun,\n                        NotificationWhenAdded: \"Please Select US Embassy O3 Station on map\",\n                        ModelClass: 'UsEmbassyPm',\n                        ModelClassDataList: 'UsEmbassyDataList',\n                        typeName: 'O3',\n                        defaultStation: myApp.DefaultSations.o3Embassy,\n                        chart: {\n                            title: function (stationName, sd, ed) {\n                                return `${stationName} (${sd} - ${ed})`\n                            },\n                            subTitle: 'source: AirNow',\n                            SeriesName: 'O3',\n                            YaxisLabel: 'O<sub>3</sub>(ppb)',\n                            XaxisLabel: function () {\n                                return 'Time (UTC)'\n                            }\n                        }\n                    },\n                ]\n            },\n            {\n                label: 'SO2',\n                value: 3,\n                children: [\n                    {\n                        label: 'Satellite-SO2 (TROPOMI)',\n                        layerId: myApp.constants.archive.layerId.SO2_TROPOMI,\n                        value: 31,\n                    },\n                    {\n                        label: 'Model-SO2 (GEOS)',\n                        layerId: myApp.constants.archive.layerId.SO2_GEOS,\n                        value: 32,\n                    }\n                ]\n            },\n            {\n                label: 'NO2',\n                value: 4,\n                children: [\n                    {\n                        label: 'Satellite-NO2 (TROPOMI)',\n                        layerId: myApp.constants.archive.layerId.NO2_TROPOMI,\n                        value: 41,\n                    },\n                    {\n                        label: 'Model-NO2 (GEOS)',\n                        layerId: myApp.constants.archive.layerId.NO2_GEOS,\n                        value: 42,\n                    }\n                ]\n            },\n            {\n                label: 'CO',\n                value: 5,\n                children: [\n                    {\n                        label: 'Satellite-CO (TROPOMI)',\n                        layerId: myApp.constants.archive.layerId.CO_TROPOMI,\n                        value: 51,\n                    },\n                    {\n                        label: 'Model-CO (GEOS)',\n                        layerId: myApp.constants.archive.layerId.CO_GEOS,\n                        value: 52,\n                    }\n                ]\n            }]\n    },\n    Forecast: {\n        data: [\n            {\n                label: 'PM',\n                value: 1,\n                children: [\n                    {\n                        label: 'Model-PM2.5 (GEOS)',\n                        layerId: myApp.constants.forecast.layerId.GEOS_PM2p5,\n                        value: 13,\n                    }\n                ]\n            }, {\n                label: 'O3',\n                value: 2,\n                children: [\n                    {\n                        label: 'Model-O3 (GEOS)',\n                        layerId: myApp.constants.forecast.layerId.O3_GEOS,\n                        value: 22,\n                    }\n                ]\n            },\n            {\n                label: 'SO2',\n                value: 3,\n                children: [\n                    {\n                        label: 'Model-SO2 (GEOS)',\n                        layerId: myApp.constants.forecast.layerId.SO2_GEOS,\n                        value: 32,\n                    }\n                ]\n            },\n            {\n                label: 'NO2',\n                value: 4,\n                children: [\n                    {\n                        label: 'Model-NO2 (GEOS)',\n                        layerId: myApp.constants.forecast.layerId.NO2_GEOS,\n                        value: 42,\n                    }\n                ]\n            },\n            {\n                label: 'CO',\n                value: 5,\n                children: [\n                    {\n                        label: 'Model-CO (GEOS)',\n                        layerId: myApp.constants.forecast.layerId.CO_GEOS,\n                        value: 52,\n                    }\n                ]\n            }]\n    }\n};\n\n\nmyApp.formatDate = function (date) {\n    var d = new Date(date),\n        month = '' + (d.getMonth() + 1),\n        day = '' + d.getDate(),\n        year = d.getFullYear();\n\n    if (month.length < 2)\n        month = '0' + month;\n    if (day.length < 2)\n        day = '0' + day;\n\n    return [year, month, day].join('-');\n};\n\nmyApp.makeRequest = function (method, url) {\n    return new Promise(function (resolve, reject) {\n        let xhr = new XMLHttpRequest();\n        xhr.open(method, url);\n        xhr.onload = function () {\n            if (this.status >= 200 && this.status < 300) {\n                resolve(xhr.response);\n            } else {\n                reject({\n                    status: this.status,\n                    statusText: xhr.statusText\n                });\n            }\n        };\n        xhr.onerror = function () {\n            reject({\n                status: this.status,\n                statusText: xhr.statusText\n            });\n        };\n        xhr.send();\n    });\n};\n\n\nmyApp.getForecastWMSList = async function (url) {\n    let result = await myApp.makeRequest(\"GET\", url);\n    let parser = new DOMParser();\n    let xmlDoc = parser.parseFromString(result, \"text/xml\");\n    let wmsList = [];\n    let interestedDate = myApp.formatDate(myApp.forecastDate).replace(/-/g, '');\n    let DimensionTag = xmlDoc.getElementsByTagName(\"catalogRef\");\n    let DateHavingCatalog = null;\n    for (let kk of DimensionTag) {\n        if (interestedDate == kk.getAttribute('xlink:title')) {\n            DateHavingCatalog = url.replace('catalog.xml', kk.getAttribute('xlink:href'));\n            break;\n        }\n    }\n    if (DateHavingCatalog) {\n        let result1 = await this.makeRequest(\"GET\", DateHavingCatalog);\n        let parser1 = new DOMParser();\n        let xmlDoc1 = parser1.parseFromString(result1, \"text/xml\");\n        let dataset = xmlDoc1.getElementsByTagName(\"dataset\");\n        for (let jj of dataset) {\n            let name = jj.getAttribute('name');\n            if (name.slice(-3) == '.nc') {\n                wmsList.push(DateHavingCatalog.replace('/catalog/', '/wms/').replace('catalog.xml', name));\n            }\n        }\n    }\n    return wmsList.sort()\n};\n\nmyApp.datetimePointChartObj = function (title, subTitle, SeriesData, SeriesName, YaxisLabel, XaxisLabel, plotColor, DataPeriod) {\n    let data = {\n            chart: {\n                marginLeft: 65,\n                /* marginRight: 0, */\n                /* spacingLeft: 0, */\n                /* spacingRight: 0 */\n                backgroundColor: 'transparent',\n                plotBorderColor: '#afafaf',\n                plotBorderWidth: 1,\n            },\n            title: {\n                text: title,\n                fontSize: '10px',\n                useHTML: true\n            },\n            subtitle: {\n                text: subTitle,\n                fontSize: '8px'\n            },\n            series: [{\n                name: SeriesName,\n                data: SeriesData,\n                lineWidth: 0,\n                marker: {\n                    enabled: true,\n                    symbol: 'diamond',\n                    radius: 2\n                },\n            }],\n            xAxis: {\n                type: 'datetime',\n                title: {\n                    text: XaxisLabel,\n                    align: 'high',\n                },\n                tickLength: 0,\n                lineColor: 0,\n                lineWidth: 0\n            },\n            yAxis: {\n                title: {\n                    text: `<span style=\"display:inline-block; -webkit-transform: rotate(270deg); -moz-transform: rotate(270deg); -ms-transform: rotate(270deg); -o-transform: rotate(270deg); filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=3);\">${YaxisLabel}</span>`,\n                    useHTML: true,\n                    rotation: 0,\n                    // align: 'high',\n                    offset: 0,\n                    x: -50\n                },\n                tickLength: 0,\n                lineColor: 0,\n                lineWidth: 0,\n                gridLineWidth: 0\n            },\n            legend: {\n                enabled: false\n            },\n            credits: {\n                enabled: false\n            },\n            plotOptions: {\n                series: {\n                    color: plotColor\n                }\n            },\n            lang: {\n                noData: DataPeriod + 'data not available for this station.'\n            },\n            exporting: {\n                buttons: {\n                    contextButton: {\n                        menuItems: [\"printChart\",\n                            \"separator\",\n                            \"downloadPNG\",\n                            \"downloadJPEG\",\n                            \"downloadPDF\",\n                            \"downloadSVG\",\n                            \"separator\",\n                            \"downloadCSV\",\n                            \"downloadXLS\",\n                            //\"viewData\",\n                            \"openInCloud\"]\n                    }\n                },\n                // chartOptions: {\n                //     title: {\n                //         text: title,\n                //         fontSize: '10px',\n                //         useHTML: true\n                //     }, yAxis: {\n                //         title: {\n                //             text: `<span style=\"display:inline-block; -webkit-transform: rotate(90deg); -moz-transform: rotate(90deg); -ms-transform: rotate(90deg); -o-transform: rotate(90deg); filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=3);\">${YaxisLabel}</span>`,\n                //             useHTML: true,\n                //             rotation: 250\n                //         }\n                //     },\n                // },\n                allowHTML: true,\n                // fallbackToExportServer: false,\n                // libURL: 'http://localhost:8000/static/airqualitywatch/js/Highcharts/lib/'\n            }\n        }\n    ;\n    return data\n};\n\nmyApp.datetimeChartObj = function (title, subTitle, SeriesData, SeriesName, YaxisLabel, XaxisLabel, plotColor, DataPeriod) {\n    let data = {\n        chart: {\n            marginLeft: 65,\n            /* marginRight: 0, */\n            /* spacingLeft: 0, */\n            /* spacingRight: 0 */\n            backgroundColor: 'transparent',\n            plotBorderColor: '#afafaf',\n            plotBorderWidth: 1,\n        },\n        title: {\n            text: title,\n            fontSize: '10px',\n            useHTML: true\n        },\n        subtitle: {\n            text: subTitle,\n            fontSize: '8px'\n        },\n        series: [{\n            name: SeriesName,\n            data: SeriesData,\n            // marker: {\n            //     enabled: true,\n            //     symbol: 'diamond',\n            //     radius: 3\n            // },\n        }],\n        xAxis: {\n            type: 'datetime',\n            title: {\n                text: XaxisLabel,\n                align: 'high',\n            },\n            tickLength: 0,\n            lineColor: 0,\n            lineWidth: 0\n        },\n        lang: {\n            noData: DataPeriod + 'data not available for this station.'\n        },\n        yAxis: {\n            title: {\n                text: `<span style=\"display:inline-block; -webkit-transform: rotate(270deg); -moz-transform: rotate(270deg); -ms-transform: rotate(270deg); -o-transform: rotate(270deg); filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=3);\">${YaxisLabel}</span>`,\n                useHTML: true,\n                rotation: 0,\n                // align: 'high',\n                offset: 0,\n                x: -50\n            },\n            tickLength: 0,\n            lineColor: 0,\n            lineWidth: 0,\n            gridLineWidth: 0\n        },\n        legend: {\n            enabled: false\n        },\n        credits: {\n            enabled: false\n        },\n        plotOptions: {\n            series: {\n                color: plotColor\n            }\n        },\n        exporting: {\n            buttons: {\n                contextButton: {\n                    menuItems: [\"printChart\",\n                        \"separator\",\n                        \"downloadPNG\",\n                        \"downloadJPEG\",\n                        \"downloadPDF\",\n                        \"downloadSVG\",\n                        \"separator\",\n                        \"downloadCSV\",\n                        \"downloadXLS\",\n                        //\"viewData\",\n                        \"openInCloud\"]\n                }\n            },\n            // chartOptions: {\n            //     title: {\n            //         text: title,\n            //         fontSize: '10px',\n            //         useHTML: true\n            //     }, yAxis: {\n            //         title: {\n            //             text: `<span style=\"display:inline-block; -webkit-transform: rotate(90deg); -moz-transform: rotate(90deg); -ms-transform: rotate(90deg); -o-transform: rotate(90deg); filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=3);\">${YaxisLabel}</span>`,\n            //             useHTML: true,\n            //             rotation: 250\n            //         }\n            //     },\n            // },\n            allowHTML: true,\n            // fallbackToExportServer: false,\n            // libURL: 'http://localhost:8000/static/airqualitywatch/js/Highcharts/lib/'\n        }\n    };\n    return data\n};\n\nmyApp.forceDownload = function (url, fileName) {\n    var xhr = new XMLHttpRequest();\n    xhr.open(\"GET\", url, true);\n    xhr.responseType = \"blob\";\n    xhr.onload = function () {\n        var urlCreator = window.URL || window.webkitURL;\n        var imageUrl = urlCreator.createObjectURL(this.response);\n        var tag = document.createElement('a');\n        tag.href = imageUrl;\n        tag.download = fileName;\n        document.body.appendChild(tag);\n        tag.click();\n        document.body.removeChild(tag);\n    }\n    xhr.send();\n}\n\n// myApp.datetimeChartObj = function (title, subTitle, SeriesData, SeriesName, YaxisLabel, XaxisLabel, plotColor) {\n//     let data = {\n//             chart: {\n//                 marginLeft: 65,\n//                 /* marginRight: 0, */\n//                 /* spacingLeft: 0, */\n//                 /* spacingRight: 0 */\n//                 backgroundColor: 'transparent',\n//                 plotBorderColor: '#afafaf',\n//                 plotBorderWidth: 1,\n//             },\n//             title: {\n//                 text: title,\n//                 fontSize: '10px',\n//                 useHTML: true\n//             },\n//             subtitle: {\n//                 text: subTitle,\n//                 fontSize: '8px'\n//             },\n//             series: [{\n//                 name: SeriesName,\n//                 data: SeriesData,\n//                 // marker: {\n//                 //     enabled: true,\n//                 //     symbol: 'diamond',\n//                 //     radius: 3\n//                 // },\n//             }],\n//             xAxis: {\n//                 type: 'datetime',\n//                 title: {\n//                     text: XaxisLabel,\n//                     align: 'high',\n//                 },\n//                 tickLength: 0,\n//                 lineColor: 0,\n//                 lineWidth: 0\n//             },\n//             yAxis: {\n//                 title: {\n//                     text: `<span style=\"display:inline-block; -webkit-transform: rotate(270deg); -moz-transform: rotate(270deg); -ms-transform: rotate(270deg); -o-transform: rotate(270deg); filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=3);\">${YaxisLabel}</span>`,\n//                     useHTML: true,\n//                     rotation: 0,\n//                     // align: 'high',\n//                     offset: 0,\n//                     x: -50\n//                 },\n//                 tickLength: 0,\n//                 lineColor: 0,\n//                 lineWidth: 0,\n//                 gridLineWidth: 0\n//             },\n//             legend: {\n//                 enabled: false\n//             },\n//             credits: {\n//                 enabled: false\n//             },\n//             plotOptions: {\n//                 series: {\n//                     color: plotColor\n//                 }\n//             },\n//             exporting: {\n//                 buttons: {\n//                     contextButton: {\n//                         menuItems: [\"printChart\",\n//                             \"separator\",\n//                             \"downloadPNG\",\n//                             \"downloadJPEG\",\n//                             \"downloadPDF\",\n//                             \"downloadSVG\",\n//                             \"separator\",\n//                             \"downloadCSV\",\n//                             \"downloadXLS\",\n//                             //\"viewData\",\n//                             \"openInCloud\"]\n//                     }\n//                 },\n//                 // chartOptions: {\n//                 //     title: {\n//                 //         text: title,\n//                 //         fontSize: '10px',\n//                 //         useHTML: true\n//                 //     }, yAxis: {\n//                 //         title: {\n//                 //             text: `<span style=\"display:inline-block; -webkit-transform: rotate(90deg); -moz-transform: rotate(90deg); -ms-transform: rotate(90deg); -o-transform: rotate(90deg); filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=3);\">${YaxisLabel}</span>`,\n//                 //             useHTML: true,\n//                 //             rotation: 250\n//                 //         }\n//                 //     },\n//                 // },\n//                 allowHTML: true,\n//                 // fallbackToExportServer: false,\n//                 // libURL: 'http://localhost:8000/static/airqualitywatch/js/Highcharts/lib/'\n//             }\n//         }\n//     ;\n//     console.log(JSON.stringify(data));\n//     return data\n// };\n\nexport var AirPollutionWatchApp = myApp;","import { render } from \"./chartComponent.vue?vue&type=template&id=2858a76c&scoped=true\"\nimport script from \"./chartComponent.vue?vue&type=script&lang=js\"\nexport * from \"./chartComponent.vue?vue&type=script&lang=js\"\n\nimport \"./chartComponent.vue?vue&type=style&index=0&id=2858a76c&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/suman/tethys3Apps/tethysapp-airqualitynp/tethysapp/airqualitynp/vairqualitynp/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-2858a76c\"]])\n\nexport default __exports__","<template>\n  <div class=\"card-box full-height full-width about-div\">\n    <div class=\"pannel-title\">\n      <h6 class=\"title-heading\">Map Controls\n      </h6>\n    </div>\n    <div class=\"body-container\">\n      <el-scrollbar height=\"100%\">\n\n        <el-form\n            label-position=\"left\"\n            label-width=\"120px\"\n            class=\"demo-ruleForm\"\n            size=\"mini\"\n        >\n          <el-form-item label=\"Data Period\" prop=\"data_period\">\n            <el-select v-model=\"mapControlVariable.data_period\" placeholder=\"Data Period\"\n                       style=\"width: 100%\">\n              <el-option\n                  v-for=\"item in options.data_period\"\n                  :key=\"item.value\"\n                  :label=\"item.label\"\n                  :value=\"item.value\"\n                  :disabled=\"item.disabled\"\n              >\n              </el-option>\n            </el-select>\n          </el-form-item>\n\n          <el-form-item label=\"Select By\" prop=\"select_by\">\n            <el-select v-model=\"mapControlVariable.select_by\" placeholder=\"Select By\" style=\"width: 100%\">\n\n              <el-option\n                  v-for=\"item in options.select_by\"\n                  :key=\"item.value\"\n                  :label=\"item.label\"\n                  :value=\"item.value\"\n                  :disabled=\"item.disabled\"\n              >\n              </el-option>\n\n            </el-select>\n          </el-form-item>\n\n        </el-form>\n\n        <el-form\n            label-position=\"top\"\n            label-width=\"120px\"\n            class=\"demo-ruleForm\"\n            size=\"mini\"\n            v-if=\"mapControlVariable.select_by ==='Location'\"\n        >\n\n          <el-form-item v-show=\"mapControlVariable.data_period !=='Recent'\" label=\"Select Location\"\n                        prop=\"Select Location\">\n\n            <el-col :span=\"11\" style=\"width: 100%\">\n              <el-select v-model=\"mapControlVariable.location_by\" placeholder=\"Select Location\" style=\"width: 100%\">\n                <el-option\n                    v-for=\"item in options.location_by\"\n                    :key=\"item.value\"\n                    :label=\"item.label\"\n                    :value=\"item.value\"\n                    :disabled=\"item.disabled\"\n                >\n                </el-option>\n\n              </el-select>\n            </el-col>\n            <el-col :span=\"2\" style=\"width: 100%\">\n              <div class=\"\" style=\"width: 100%;text-align: center;\">\n                -\n              </div>\n            </el-col>\n            <el-col :span=\"11\" style=\"width: 100%\">\n              <el-select v-show=\"mapControlVariable.location_by ==='default_locations'\"\n                         v-model=\"mapControlVariable.default_location\"\n                         placeholder=\"Select Location\" style=\"width: 100%\">\n\n                <el-option\n                    v-for=\"item in options.default_location\"\n                    :key=\"item.value\"\n                    :label=\"item.label\"\n                    :value=\"item.value\"\n                    :disabled=\"item.disabled\"\n                >\n                </el-option>\n              </el-select>\n              <div class=\"\" v-show=\"mapControlVariable.location_by ==='AOI'\">\n                <div class=\"feature-selected\" v-show=\"mapControlVariable.is_AOI_Feature_selected ===true\">Feature\n                  selected\n                </div>\n                <div class=\"no-feature-selected\" v-show=\"mapControlVariable.is_AOI_Feature_selected ===false\">No Feature\n                  selected\n                </div>\n              </div>\n            </el-col>\n\n          </el-form-item>\n\n          <el-form-item label=\"Pollutants\" prop=\"Pollutants\">\n            <div class=\"pollutant-cascader\">\n              <el-cascader\n                  v-model=\"mapControlVariable.location_by_pollutant_value1\"\n                  :options=\"cascaderData\"\n                  style=\"width: 100%\"\n              ></el-cascader>\n            </div>\n            <div class=\"pollutant-cascader\">\n              <el-cascader\n                  v-model=\"mapControlVariable.location_by_pollutant_value2\"\n                  :options=\"cascaderData\"\n                  style=\"width: 100%\"\n              ></el-cascader>\n            </div>\n            <div class=\"pollutant-cascader\">\n              <el-cascader\n                  v-model=\"mapControlVariable.location_by_pollutant_value3\"\n                  :options=\"cascaderData\"\n                  style=\"width: 100%\"\n              ></el-cascader>\n            </div>\n\n            <div class=\"pollutant-cascader\">\n              <el-cascader\n                  v-model=\"mapControlVariable.location_by_pollutant_value4\"\n                  :options=\"cascaderData\"\n                  style=\"width: 100%\"\n              ></el-cascader>\n            </div>\n\n          </el-form-item>\n\n        </el-form>\n\n        <el-form\n            label-position=\"top\"\n            label-width=\"120px\"\n            class=\"demo-ruleForm\"\n            size=\"mini\"\n\n        >\n          <el-form-item v-show=\"mapControlVariable.select_by ==='Parameter'\" label=\"Pollutants\" prop=\"Pollutants\">\n            <div class=\"pollutant-cascader\">\n\n              <el-cascader\n                  v-model=\"mapControlVariable.parameter_by_pollutant_value\"\n                  :options=\"cascaderData\"\n                  style=\"width: 100%\"\n              ></el-cascader>\n\n            </div>\n          </el-form-item>\n\n          <el-form-item\n              v-show=\"mapControlVariable.select_by ==='Parameter' && mapControlVariable.is_parameter_by_pollutant_value_stationData===false\"\n              label=\"Select Locations\" prop=\"Locations\">\n\n            <!--            <el-radio-group v-model=\"radio4\" size=\"mini\" disabled>-->\n            <!--              <el-radio label=\"1\" border>Option A</el-radio>-->\n            <!--              <el-radio label=\"2\" border>Option B</el-radio>-->\n            <!--              -->\n            <!--            </el-radio-group>-->\n\n            <el-radio-group v-model=\"mapControlVariable.radioValue\">\n              <el-radio :label=\"1\" name=\"radio1\" style=\"width: 100%\">\n                <selectLocation :isDisable=\"mapControlVariable.radioValue=='1'?false:true\"\n\n                                :IndexValue=\"1\"\n                                :Select_Option_Default_Location=\"options.default_location\">\n                </selectLocation>\n              </el-radio>\n              <el-radio :label=\"2\" name=\"radio1\" style=\"width: 100%\">\n                <selectLocation :isDisable=\"mapControlVariable.radioValue=='2'?false:true\"\n                                :IndexValue=\"2\"\n                                :Select_Option_Default_Location=\"options.default_location\">\n                </selectLocation>\n              </el-radio>\n              <el-radio :label=\"3\" name=\"radio1\" style=\"width: 100%\">\n                <selectLocation :isDisable=\"mapControlVariable.radioValue=='3'?false:true\"\n                                :IndexValue=\"3\"\n                                :Select_Option_Default_Location=\"options.default_location\">\n                </selectLocation>\n              </el-radio>\n              <el-radio :label=\"4\" name=\"radio1\" style=\"width: 100%\">\n                <selectLocation :isDisable=\"mapControlVariable.radioValue=='4'?false:true\"\n                                :IndexValue=\"4\"\n                                :Select_Option_Default_Location=\"options.default_location\">\n                </selectLocation>\n              </el-radio>\n            </el-radio-group>\n\n\n          </el-form-item>\n\n          <el-form-item\n              v-show=\"mapControlVariable.select_by ==='Parameter' && mapControlVariable.is_parameter_by_pollutant_value_stationData===true\"\n              label=\"Select Stations\" prop=\"station\">\n\n            <!--            <el-radio-group v-model=\"radio4\" size=\"mini\" disabled>-->\n            <!--              <el-radio label=\"1\" border>Option A</el-radio>-->\n            <!--              <el-radio label=\"2\" border>Option B</el-radio>-->\n            <!--              -->\n            <!--            </el-radio-group>-->\n\n            <div class=\"pollutant-cascader\">\n              <el-select v-model=\"mapControlVariable.parameter_by_pollutant_value_stationData_val1\"\n                         placeholder=\"Select station\"\n                         style=\"width: 100%\">\n\n                <el-option\n                    v-for=\"item in options.ObservationStationOptions\"\n                    :key=\"item.value\"\n                    :label=\"item.label\"\n                    :value=\"item.value\"\n                    :disabled=\"item.disabled\"\n                >\n                </el-option>\n              </el-select>\n\n            </div>\n            <div class=\"pollutant-cascader\">\n              <el-select v-model=\"mapControlVariable.parameter_by_pollutant_value_stationData_val2\"\n                         placeholder=\"Select station\"\n                         style=\"width: 100%\">\n\n                <el-option\n                    v-for=\"item in options.ObservationStationOptions\"\n                    :key=\"item.value\"\n                    :label=\"item.label\"\n                    :value=\"item.value\"\n                    :disabled=\"item.disabled\"\n                >\n                </el-option>\n              </el-select>\n            </div>\n            <div class=\"pollutant-cascader\">\n              <el-select v-model=\"mapControlVariable.parameter_by_pollutant_value_stationData_val3\"\n                         placeholder=\"Select station\"\n                         style=\"width: 100%\">\n\n                <el-option\n                    v-for=\"item in options.ObservationStationOptions\"\n                    :key=\"item.value\"\n                    :label=\"item.label\"\n                    :value=\"item.value\"\n                    :disabled=\"item.disabled\"\n                >\n                </el-option>\n              </el-select>\n\n            </div>\n            <div class=\"pollutant-cascader\">\n              <el-select v-model=\"mapControlVariable.parameter_by_pollutant_value_stationData_val4\"\n                         placeholder=\"Select station\"\n                         style=\"width: 100%\">\n\n                <el-option\n                    v-for=\"item in options.ObservationStationOptions\"\n                    :key=\"item.value\"\n                    :label=\"item.label\"\n                    :value=\"item.value\"\n                    :disabled=\"item.disabled\"\n                >\n                </el-option>\n              </el-select>\n\n            </div>\n\n          </el-form-item>\n\n        </el-form>\n\n        <el-button type=\"primary\" size=\"mini\" style=\"width: 100%\" @click=\"computeData\">compute</el-button>\n\n      </el-scrollbar>\n    </div>\n  </div>\n</template>\n\n<script>\nimport {mapActions, mapGetters, mapMutations, mapState} from \"vuex\";\nimport OLWKT from \"ol/format/WKT\";\nimport selectLocation from \"./selectLocation\";\nimport {threddDataSource} from \"../config\"\nimport TimeDimensionTile from \"ol-plus/layer/TimeDimensionTile\";\nimport LayerSwitcher from 'ol-plus/ui/LayerSwitcher';\nimport {AirPollutionWatchApp} from \"../utils/data\";\nimport OlVectorLayer from \"ol/layer/Vector\";\nimport OlVectorSource from \"ol/source/Vector\";\nimport OlGeoJSON from \"ol/format/GeoJSON\";\nimport {getCenter as ol_extent_getCenter} from \"ol/extent\";\nimport eventHub from \"../utils/utils\";\n\nimport {defaultParamter} from \"../utils/defaultParamter\"\nimport {ElLoading} from 'element-plus';\nimport rgbLegend from '../assets/rgblegend.jpg';\nimport usembassyPm2p5 from '../assets/usembassyPm2p5.jpg';\nimport AODAeroNet from '../assets/AODAeroNet.jpg';\n\nexport default {\n  name: \"mapControlsEmission\",\n  data() {\n    return {\n      maskCoordinate: null,\n      data__layer__initilize__Recent: false,\n      data__layer__initilize__Archive: false,\n      data__layer__initilize__Forecast: false,\n      AirPollutionWatchApp: AirPollutionWatchApp,\n      options: {\n        data_period: [\n          {\n            value: 'Recent',\n            label: 'Recent',\n          },\n          {\n            value: 'Archive',\n            label: 'Archive',\n          },\n          {\n            value: 'Forecast',\n            label: 'Forecast',\n          }\n        ], select_by: [\n          {\n            value: 'Location',\n            label: 'Location',\n          },\n          {\n            value: 'Parameter',\n            label: 'Parameter',\n          }\n        ], location_by: [\n          {\n            value: 'default_locations',\n            label: 'Major Cities',\n          },\n          {\n            value: 'AOI',\n            label: 'Select on map',\n          }\n        ],\n        default_location: [],\n        ObservationStationOptions: []\n      },\n    }\n  },\n  watch: {\n    async SelectDataPeriod() {\n      if (this.mapControlVariable.data_period == \"Recent\") {\n        this.AirPollutionWatchApp.startDate = new Date();\n        this.AirPollutionWatchApp.startDate.setDate(this.AirPollutionWatchApp.startDate.getDate() - 1);\n        this.AirPollutionWatchApp.endDate = new Date();\n\n      } else if (this.mapControlVariable.data_period == \"Archive\") {\n\n        this.AirPollutionWatchApp.startDate = new Date();\n        this.AirPollutionWatchApp.startDate.setDate(this.AirPollutionWatchApp.startDate.getDate() - 8);\n        this.AirPollutionWatchApp.endDate = new Date();\n        this.AirPollutionWatchApp.endDate.setDate(this.AirPollutionWatchApp.endDate.getDate() - 1);\n\n      } else {\n        this.AirPollutionWatchApp.forecastDate = new Date();\n        this.AirPollutionWatchApp.forecastDate.setDate(this.AirPollutionWatchApp.forecastDate.getDate() - 1);\n\n      }\n      await this.addLayersToMap();\n      console.log(\"-----------------kkkk-------------------------\");\n      if (this.mapControlVariable.data_period == \"Recent\") {\n        //  set defaults\n        this.mapControlVariable.select_by = \"Parameter\";\n        let recentPollutant = [1, 12];\n        this.mapControlVariable.parameter_by_pollutant_value = recentPollutant;\n        let kk = this.getStationInfoObject(recentPollutant[1]);\n        this.mapControlVariable.parameter_by_pollutant_value_stationData_val1 = kk.defaultStation[0];\n        this.mapControlVariable.parameter_by_pollutant_value_stationData_val2 = kk.defaultStation[1];\n        this.mapControlVariable.parameter_by_pollutant_value_stationData_val3 = kk.defaultStation[2];\n        this.mapControlVariable.parameter_by_pollutant_value_stationData_val4 = kk.defaultStation[3];\n        // this.setLayerVisible(kk.layerId, true);\n\n      } else if (this.mapControlVariable.data_period == \"Archive\") {\n        //  set defaults\n        this.mapControlVariable.select_by = \"Parameter\";\n        let recentPollutant = [1, 12]\n        this.mapControlVariable.parameter_by_pollutant_value = recentPollutant;\n        let kk = this.getStationInfoObject(recentPollutant[1]);\n        this.mapControlVariable.parameter_by_pollutant_value_stationData_val1 = kk.defaultStation[0];\n        this.mapControlVariable.parameter_by_pollutant_value_stationData_val2 = kk.defaultStation[1];\n        this.mapControlVariable.parameter_by_pollutant_value_stationData_val3 = kk.defaultStation[2];\n        this.mapControlVariable.parameter_by_pollutant_value_stationData_val4 = kk.defaultStation[3];\n        // this.setLayerVisible(kk.layerId, true);\n      } else {\n        //  set defaults\n        this.mapControlVariable.select_by = \"Parameter\";\n        let recentPollutant = [1, 13];\n        this.mapControlVariable.parameter_by_pollutant_value = recentPollutant;\n        // let kk = this.getStationInfoObject(recentPollutant[1]);\n        // this.setLayerVisible(kk.layerId, true);\n\n      }\n\n\n    },\n    SelectDefaultLocation(newVal, oldVal) {\n      if (newVal) {\n        // add it to vectorLayer\n        let selNewValObj = this.options.default_location.filter(function (x) {\n          return newVal == x.value\n        })[0];\n\n        let Feature = (new OlGeoJSON()).readFeature(selNewValObj.geoJSON.features[0]);\n        Feature.set(\"SelectBy\", \"Location\");\n        Feature.set(\"LocationBy\", \"default_location\");\n        this.WorkingVectorLayer.getSource().addFeature(Feature);\n\n        var view = this.mapObject.getView();\n        var resolution = view.getResolutionForExtent(Feature.getGeometry().getExtent(), this.mapObject.getSize());\n        var zoom = view.getZoomForResolution(resolution);\n        var center = ol_extent_getCenter(Feature.getGeometry().getExtent());\n        // redraw before zoom\n        setTimeout(function () {\n          view.animate({\n            center: center,\n            zoom: Math.min(zoom, 11)\n          });\n        }, 100);\n\n        var format = new OLWKT();\n        var wktfeaturegeom = format.writeGeometry(Feature.getGeometry(), {\n          dataProjection: 'EPSG:4326',\n          featureProjection: 'EPSG:3857'\n        });\n        var geometryType = Feature.getGeometry().getType();\n\n        // let featureExtent = (new OLWKT()).readFeature(wktfeaturegeom);\n\n        // let featureForExtent = (new OlGeoJSON()).readFeature(selNewValObj.geoJSON.features[0]);\n        // featureExtent = featureExtent.getGeometry().getExtent();\n\n        this.mapControlVariable.location_by_wktValue = wktfeaturegeom;\n        this.mapControlVariable.location_by_geometryType = geometryType;\n\n      } else {\n        this.mapControlVariable.location_by_wktValue = '';\n        this.mapControlVariable.location_by_geometryType = '';\n      }\n\n      if (oldVal) {\n        // remove it from vector layer\n        this.WorkingVectorLayer.getSource().getFeatures().forEach((f) => {\n          if (f.get(\"SelectBy\") == \"Location\" && f.get(\"LocationBy\") == \"default_location\" && f.get(\"id\") == oldVal) {\n            this.WorkingVectorLayer.getSource().removeFeature(f);\n          }\n        });\n      }\n    },\n    SelectLocationBy() {\n      this.mapControlVariable.default_location = '';\n    },\n    SelectByOption() {\n\n      if (this.mapControlVariable.select_by == \"Location\") {\n        this.WorkingVectorLayer.getSource().getFeatures().forEach((f) => {\n          if (f.get(\"SelectBy\") == \"Parameter\" && f.get(\"LocationBy\") == \"default_location\") {\n            this.WorkingVectorLayer.getSource().removeFeature(f);\n          }\n        });\n\n        // this.mapControlVariable.parameter_by_pollutant_value = '';\n\n        //remove the layers which are on select by parameter\n        this.SetLayerOfSelectByParameterLayer(false);\n\n        if (this.mapControlVariable.data_period == \"Recent\") {\n          this.mapControlVariable.location_by_pollutant_value1 = [1, 12, 6];\n          this.mapControlVariable.location_by_pollutant_value2 = [1, 12, 7];\n          this.mapControlVariable.location_by_pollutant_value3 = [1, 11, 9];\n          this.mapControlVariable.location_by_pollutant_value4 = [1, 11, 14];\n        } else if (this.mapControlVariable.data_period == \"Archive\") {\n\n\n          this.mapControlVariable.location_by = 'default_locations';\n          this.mapControlVariable.default_location = 1;\n          this.mapControlVariable.location_by_pollutant_value1 = [1, 12, 6];\n          this.mapControlVariable.location_by_pollutant_value2 = [1, 12, 7];\n          this.mapControlVariable.location_by_pollutant_value3 = [1, 11, 9];\n          this.mapControlVariable.location_by_pollutant_value4 = [1, 11, 14];\n        } else {\n          this.mapControlVariable.location_by = 'default_locations';\n          this.mapControlVariable.default_location = 1;\n          this.mapControlVariable.location_by_pollutant_value1 = [1, 13];\n          this.mapControlVariable.location_by_pollutant_value2 = [2, 22];\n          this.mapControlVariable.location_by_pollutant_value3 = [3, 32];\n          this.mapControlVariable.location_by_pollutant_value4 = [4, 42];\n        }\n      } else {\n\n        if (this.mapControlVariable.data_period == \"Recent\") {\n          this.mapControlVariable.parameter_by_pollutant_value = [1, 12];\n        } else if (this.mapControlVariable.data_period == \"Archive\") {\n          this.mapControlVariable.parameter_by_pollutant_value = [1, 12];\n        } else {\n          this.mapControlVariable.parameter_by_pollutant_value = [1, 13];\n        }\n\n        // no single default location on parameter\n        this.mapControlVariable.default_location = '';\n\n        this.SetLayerOfSelectByParameterLayer(true);\n      }\n\n      this.ObservationStationOption();\n\n    },\n    async SelectByParameterPollutant(newPollutant, oldPollutant) {\n\n      if (oldPollutant) {\n        if (oldPollutant.length) {\n          let kk = this.getStationInfoObject(oldPollutant[1]);\n          if (Object.keys(kk).length != 0) {\n            let layer = this.getBindedLayer(kk.layerId);\n            layer.setVisibleDivBind(false);\n          }\n        }\n      }\n      let kk = this.getStationInfoObject(newPollutant[1]);\n      if (this.mapControlVariable.parameter_by_pollutant_value.length) {\n        let layer = this.getBindedLayer(kk.layerId);\n        console.log(\"newPollutant\");\n        console.log(newPollutant);\n        layer.setVisibleDivBind(true);\n        if (kk.stationData) {\n          this.mapControlVariable.is_parameter_by_pollutant_value_stationData = true;\n          this.options.ObservationStationOptions = kk.childrenData;\n        } else {\n          this.mapControlVariable.is_parameter_by_pollutant_value_stationData = false;\n          this.options.ObservationStationOptions = [];\n        }\n      }\n      if (kk.stationData) {\n        this.mapControlVariable.parameter_by_pollutant_value_stationData_val1 = kk.defaultStation[0];\n        this.mapControlVariable.parameter_by_pollutant_value_stationData_val2 = kk.defaultStation[1];\n        this.mapControlVariable.parameter_by_pollutant_value_stationData_val3 = kk.defaultStation[2];\n        this.mapControlVariable.parameter_by_pollutant_value_stationData_val4 = kk.defaultStation[3];\n      } else {\n        //  forecast\n        this.mapControlVariable.is_parameter_by_pollutant_value_stationData = false;\n        this.mapControlVariable.parameter_by_location__1.location_by = 'default_locations';\n        this.mapControlVariable.parameter_by_location__2.location_by = 'default_locations';\n        this.mapControlVariable.parameter_by_location__3.location_by = 'default_locations';\n        this.mapControlVariable.parameter_by_location__4.location_by = 'default_locations';\n\n        this.mapControlVariable.parameter_by_location__1.default_location = 1;\n        this.mapControlVariable.parameter_by_location__2.default_location = 2;\n        this.mapControlVariable.parameter_by_location__3.default_location = 3;\n        this.mapControlVariable.parameter_by_location__4.default_location = 4;\n\n        eventHub.$emit('SelectByParameterDefaultLocation');\n      }\n\n\n    },\n    location_by_pollutant_value1(newVal, oldVal) {\n      this.onChangePollutantsOnSelectByLocation(newVal, oldVal);\n    }, location_by_pollutant_value2(newVal, oldVal) {\n      this.onChangePollutantsOnSelectByLocation(newVal, oldVal);\n    }, location_by_pollutant_value3(newVal, oldVal) {\n      this.onChangePollutantsOnSelectByLocation(newVal, oldVal);\n    }, location_by_pollutant_value4(newVal, oldVal) {\n      this.onChangePollutantsOnSelectByLocation(newVal, oldVal);\n    },\n  },\n  components: {selectLocation},\n  methods: {\n    ...mapActions([\"getCityData\", \"PostSlicedFromCatalog\", \"getGeoJsonForOneSatation\"]),\n    ...mapMutations([\"appendTimeSeriesLayerCollection\"]),\n    changeDataPeriod() {\n\n\n    },\n    featureSelectorDeleteUpdate() {\n      var wktfeaturegeom, geometryType;\n      if (this.selectInteraction) {\n        if (this.selectInteraction.getFeatures().getLength()) {\n          var features = this.selectInteraction.getFeatures();\n          features.forEach(function (f) {\n            var format = new OLWKT();\n            wktfeaturegeom = format.writeGeometry(f.getGeometry(), {\n              dataProjection: 'EPSG:4326',\n              featureProjection: 'EPSG:3857'\n            });\n            geometryType = f.getGeometry().getType();\n          });\n          let Param = {\n            geometryType: geometryType,\n            wkt: wktfeaturegeom,\n          };\n          console.log(Param);\n          if (this.mapControlVariable.location_by == 'AOI') {\n            this.mapControlVariable.is_AOI_Feature_selected = true;\n            this.parameter_by_location.wktValue = wktfeaturegeom;\n            this.parameter_by_location.geometryType = geometryType;\n          }\n\n        } else {\n          if (this.mapControlVariable.location_by == 'AOI') {\n            this.mapControlVariable.is_AOI_Feature_selected = false;\n            this.parameter_by_location.wktValue = '';\n            this.parameter_by_location.geometryType = '';\n          }\n        }\n      }\n    },\n    CatalogSlicingParam(url, startDate, endDate) {\n      let param = {\n        url: url,\n        data_ext: '.nc',\n        startDate: startDate,\n        endDate: endDate,\n      }\n      return param\n    },\n    async addRasterLayerToMap(kk, resolve) {\n      let slicingParam, responseData, resPonseParsed, wmsList = [], isTrue;\n      let catalogURl = threddDataSource + kk.catalog;\n      if (this.mapControlVariable.data_period != \"Forecast\") {\n        slicingParam = this.CatalogSlicingParam(catalogURl, kk.getStartDate(), kk.getEndDate());\n        responseData = await this.PostSlicedFromCatalog(slicingParam);\n        resPonseParsed = responseData;\n        isTrue = resPonseParsed.data.length;\n        if (isTrue) {\n          resPonseParsed.data.forEach(function (fileName) {\n            let url = catalogURl.replace(\"/catalog/\", \"/wms/\").replace(\"catalog.xml\", fileName);\n            wmsList.push(url)\n          });\n        }\n      } else {\n        wmsList = await this.AirPollutionWatchApp.getForecastWMSList(catalogURl);\n        isTrue = wmsList.length;\n        console.log(isTrue)\n      }\n      if (isTrue) {\n        var Newlayer;\n        if (kk.isTimeDimensionLayer) {\n          if (kk.useSLD) {\n            let SLD = kk.SLD.replace(/(\\r\\n|\\n|\\r)/gm, \"\");\n            let LegendParameter = '?SERVICE=WMS&VERSION=1.1.1&REQUEST=GetLegendGraphic&WIDTH=10&HEIGHT=230&SLD_BODY=';\n            let legendWMS = '';\n            if (!kk.legendPath) {\n              if (Array.isArray(wmsList)) {\n                legendWMS = wmsList[0] + LegendParameter + encodeURIComponent(SLD).toString();\n              } else {\n                legendWMS = wmsList + LegendParameter + encodeURIComponent(SLD).toString();\n              }\n            } else {\n              legendWMS = kk.legendPath\n            }\n            console.log(legendWMS);\n            let timedimensionTilePara = kk.threddLayerProp;\n            timedimensionTilePara.source.params.SLD_BODY = SLD;\n            timedimensionTilePara.source.url = wmsList;\n            timedimensionTilePara.legendPath = rgbLegend;\n            timedimensionTilePara.wmsList = wmsList;\n            timedimensionTilePara.changeWMSProxy = true;\n            // timedimensionTilePara.showAnimationButton = true;\n            // timedimensionTilePara.animationGIFFunction = this.downloadAnimation;\n            Newlayer = new TimeDimensionTile(timedimensionTilePara);\n            await Newlayer.init().then((val) => {\n              this.mapObject.addThreddsLayer(val);\n              let l5 = new LayerSwitcher(\".layerCollection\", Newlayer, true, 'withOpacityChange');\n              l5.setVisibleDivBind(kk.VisibleDivBind);\n              let properties = Newlayer.getProperties()\n              if (properties.mask) {\n                console.log(properties)\n                if (properties.CropOrMask == 'crop') {\n                  Newlayer.setCrop(this.maskCoordinate);\n                } else {\n                  Newlayer.setMask(this.maskCoordinate);\n                }\n              }\n              this.appendTimeSeriesLayerCollection(l5);\n              // myApp.AllBindedLayersList.push(l5);\n              resolve();\n            });\n          } else {\n            let timedimensionTilePara = kk.threddLayerProp;\n            let LegendParameter = '?SERVICE=WMS&VERSION=1.1.1&REQUEST=GetLegendGraphic&WIDTH=10&HEIGHT=230&LAYERS=' + timedimensionTilePara.source.params.LAYERS + '&COLORSCALERANGE=' + timedimensionTilePara.source.params.COLORSCALERANGE + '&STYLES=' + timedimensionTilePara.source.params.STYLES;\n            let legendWMS = '';\n            if (!kk.legendPath) {\n              if (Array.isArray(wmsList)) {\n                legendWMS = wmsList[0] + LegendParameter;\n              } else {\n                legendWMS = wmsList + LegendParameter;\n              }\n            } else {\n              legendWMS = kk.legendPath\n            }\n            timedimensionTilePara.source.url = wmsList;\n            timedimensionTilePara.legendPath = legendWMS;\n            timedimensionTilePara.wmsList = wmsList;\n            timedimensionTilePara.changeWMSProxy = true;\n            // timedimensionTilePara.showAnimationButton = true;\n            // timedimensionTilePara.animationGIFFunction = this.downloadAnimation;\n            Newlayer = new TimeDimensionTile(timedimensionTilePara);\n            await Newlayer.init().then((val) => {\n              this.mapObject.addThreddsLayer(val);\n              // myApp.map.addThreddsLayer(val);\n              let l5 = new LayerSwitcher(\".layerCollection\", Newlayer, true);\n              l5.setVisibleDivBind(kk.VisibleDivBind);\n              let properties = Newlayer.getProperties()\n              if (properties.mask) {\n                if (properties.CropOrMask == 'crop') {\n                  Newlayer.setCrop(this.maskCoordinate);\n                } else {\n                  Newlayer.setMask(this.maskCoordinate);\n                }\n              }\n              this.appendTimeSeriesLayerCollection(l5);\n              // myApp.AllBindedLayersList.push(l5);\n              resolve();\n            });\n          }\n        }\n        kk.isDataThere = true;\n      } else {\n        kk.isDataThere = false;\n      }\n    },\n\n    async addVectorLayerToMap(obj1, obj2, resolve) {\n      let sd = this.AirPollutionWatchApp.formatDate(this.AirPollutionWatchApp.startDate);\n      let ed = this.AirPollutionWatchApp.formatDate(this.AirPollutionWatchApp.endDate);\n      let regionOrCountry = 0;\n      let Param = '?ModelClass=' + obj2.ModelClass + \"&ModelClassDataList=\" + obj2.ModelClassDataList + '&typeName=' + obj2.typeName + '&StartDate=' + sd + '&EndDate=' + ed + '&rid=' + regionOrCountry\n      let GeoJSON = await this.getGeoJsonForOneSatation(Param);\n      let GeoJSONParse = GeoJSON;\n      obj2.childrenData = [];\n      GeoJSONParse.features.forEach(function (objFeature) {\n        let stationOnCascaderObject = {\n          label: objFeature.properties.name,\n          value: objFeature.properties.id, folder_name: objFeature.properties.folder_name\n        };\n        obj2.childrenData.push(stationOnCascaderObject);\n      });\n      if (GeoJSONParse.features.length) {\n        obj2.isDatathere = true;\n        let legendPathImage = obj2.value == 11 ? AODAeroNet : usembassyPm2p5;\n        var VectorLayer = new OlVectorLayer({\n          id: obj2.layerId,\n          title: obj2.label,\n          visible: false,\n          legendPath: legendPathImage,\n          selId: [],\n          source: new OlVectorSource({\n            features: (new OlGeoJSON()).readFeatures(GeoJSONParse),\n          }),\n          style: obj2.styleFunction,\n          zIndex: 22\n        });\n        this.mapObject.addLayer(VectorLayer);\n        let l3 = new LayerSwitcher(\".layerCollection\", VectorLayer, false);\n        l3.setVisibleDivBind(false);\n        this.appendTimeSeriesLayerCollection(l3);\n      } else {\n        obj2.isDatathere = false;\n      }\n      resolve();\n    },\n    ClearWMSWithNoDataAndVectorDatawithNodata() {\n      // for clearing wms with no data on data base\n      this.AirPollutionWatchApp.LayerCollectionObjet[this.mapControlVariable.data_period].data.forEach((value) => {\n        let id = value.threddLayerProp.id;\n        let isDatathere = value.isDataThere;\n        this.AirPollutionWatchApp.cascaderObject[this.mapControlVariable.data_period].data.reduce(function (total, currentValue) {\n          let dd = currentValue.children.filter(function (currentValue1) {\n            if (currentValue1.layerId === id) {\n              if (isDatathere === false) {\n                return false\n              } else {\n                return true\n              }\n            } else {\n              return true\n            }\n          });\n          currentValue.children = dd;\n        }, 0)\n        this.AirPollutionWatchApp.cascaderObject[this.mapControlVariable.data_period].data.reduce(function (total, currentValue, currentIndex, arr) {\n          if (!currentValue.children.length) {\n            arr.splice(currentIndex, 1);\n          }\n        }, 0);\n      });\n\n      // for clearing vector data with no data\n      this.AirPollutionWatchApp.cascaderObject[this.mapControlVariable.data_period].data.reduce(function (total, currentValue, currentIndex, arr) {\n        let dd = currentValue.children.filter(function (currentValue1) {\n          if (currentValue1.stationData === true && currentValue1.isDatathere === false) {\n            return false\n          } else {\n            return true\n          }\n        });\n        currentValue.children = dd;\n        if (!currentValue.children.length) {\n          arr.splice(currentIndex, 1);\n        }\n      }, 0);\n\n    },\n    enableTrueColorMap() {\n      this.TimeSeriesLayerCollection.forEach((val) => {\n        let id = val.getProperties().id;\n        if (id.split(\"__\")[0].toUpperCase() == this.mapControlVariable.data_period.toUpperCase()) {\n          if (id == this.mapControlVariable.data_period + \"__TerraModisTrueColor\") {\n            val.setVisibleDivBind(true);\n          } else {\n            val.setVisibleDivBind(false);\n          }\n        } else {\n          val.setVisibleDivBind(false);\n        }\n      });\n    },\n    async addLayersToMap() {\n      var that = this;\n      let aa = \"data__layer__initilize__\" + that.mapControlVariable.data_period;\n\n      if (that[aa] == false) {\n        const loading = ElLoading.service({\n          lock: true,\n          text: 'Loading ' + that.mapControlVariable.data_period + \" data.....\",\n          background: 'rgba(0, 0, 0, 0.7)',\n        });\n        var PromiseListRasterData = [];\n        for (let kk of this.AirPollutionWatchApp.LayerCollectionObjet[this.mapControlVariable.data_period].data) {\n          let al1 = new Promise((resolve) => {\n            setTimeout(this.addRasterLayerToMap, 1, kk, resolve);\n          });\n          PromiseListRasterData.push(al1);\n        }\n        // var PromiseListVectorData = [];\n        for (let obj1 of this.AirPollutionWatchApp.cascaderObject[this.mapControlVariable.data_period].data) {\n          for (let obj2 of obj1.children) {\n            if (obj2.stationData == true) {\n              let al2 = new Promise((resolve) => {\n                setTimeout(this.addVectorLayerToMap, 1, obj1, obj2, resolve);\n              });\n              // PromiseListVectorData.push(al2);\n              PromiseListRasterData.push(al2);\n            }\n          }\n        }\n        console.log(\"------------------Before promise-----------------\");\n        await Promise.all(PromiseListRasterData).then(() => {\n          this.enableTrueColorMap();\n          this.ClearWMSWithNoDataAndVectorDatawithNodata();\n          that[aa] = true;\n          this.ObservationStationOption();\n          console.log(\"------------------Inside promise-----------------\");\n          loading.close();\n        });\n      } else {\n        this.enableTrueColorMap();\n      }\n    },\n    computeData() {\n      if (this.mapControlVariable.data_period === \"Recent\") {\n        if (this.mapControlVariable.select_by == \"Parameter\") {\n          if (this.mapControlVariable.parameter_by_pollutant_value.length) {\n            let kk = this.getStationInfoObject(this.mapControlVariable.parameter_by_pollutant_value[1]);\n            if (kk.stationData) {\n              if (this.mapControlVariable.parameter_by_pollutant_value_stationData_val1 && this.mapControlVariable.parameter_by_pollutant_value_stationData_val2 && this.mapControlVariable.parameter_by_pollutant_value_stationData_val3 && this.mapControlVariable.parameter_by_pollutant_value_stationData_val4) {\n                eventHub.$emit('getVisualization');\n              } else {\n                this.$notify({\n                  title: 'Warning',\n                  message: 'Please select station on all dropdown menu.',\n                  type: 'warning'\n                });\n              }\n            } else {\n              if (this.mapControlVariable.parameter_by_location__1.wktValue && this.mapControlVariable.parameter_by_location__2.wktValue && this.mapControlVariable.parameter_by_location__3.wktValue && this.mapControlVariable.parameter_by_location__4.wktValue) {\n                eventHub.$emit('getVisualization');\n              } else {\n                this.$notify({\n                  title: 'Warning',\n                  message: 'Please select locations on all dropdown menu.',\n                  type: 'warning'\n                });\n              }\n            }\n          } else {\n            this.$notify({\n              title: 'Warning',\n              message: 'Please Select a pollutant',\n              type: 'warning'\n            });\n          }\n        } else {\n          if (this.location_by_pollutant_value1.length > 0 && this.location_by_pollutant_value2.length > 0 && this.location_by_pollutant_value3.length > 0 && this.location_by_pollutant_value4.length > 0) {\n            eventHub.$emit('getVisualization');\n          } else {\n            this.$notify({\n              title: 'Warning',\n              message: 'Please select pollutants on all dropdown menu.',\n              type: 'warning'\n            });\n          }\n        }\n      } else if (this.mapControlVariable.data_period === \"Archive\") {\n\n        if (this.mapControlVariable.select_by == \"Parameter\") {\n          if (this.mapControlVariable.parameter_by_pollutant_value.length) {\n            let kk = this.getStationInfoObject(this.mapControlVariable.parameter_by_pollutant_value[1]);\n            if (kk.stationData) {\n              if (this.mapControlVariable.parameter_by_pollutant_value_stationData_val1 && this.mapControlVariable.parameter_by_pollutant_value_stationData_val2 && this.mapControlVariable.parameter_by_pollutant_value_stationData_val3 && this.mapControlVariable.parameter_by_pollutant_value_stationData_val4) {\n                eventHub.$emit('getVisualization');\n              } else {\n                this.$notify({\n                  title: 'Warning',\n                  message: 'Please select station on all dropdown menu.',\n                  type: 'warning'\n                });\n              }\n            } else {\n              if (this.mapControlVariable.parameter_by_location__1.wktValue && this.mapControlVariable.parameter_by_location__2.wktValue && this.mapControlVariable.parameter_by_location__3.wktValue && this.mapControlVariable.parameter_by_location__4.wktValue) {\n                eventHub.$emit('getVisualization');\n              } else {\n                this.$notify({\n                  title: 'Warning',\n                  message: 'Please select locations on all dropdown menu.',\n                  type: 'warning'\n                });\n              }\n            }\n          } else {\n            this.$notify({\n              title: 'Warning',\n              message: 'Please Select a pollutant',\n              type: 'warning'\n            });\n          }\n        } else {\n          if (this.location_by_pollutant_value1.length > 0 && this.location_by_pollutant_value2.length > 0 && this.location_by_pollutant_value3.length > 0 && this.location_by_pollutant_value4.length > 0) {\n            eventHub.$emit('getVisualization');\n          } else {\n            this.$notify({\n              title: 'Warning',\n              message: 'Please select pollutants on all dropdown menu.',\n              type: 'warning'\n            });\n          }\n        }\n\n      } else {\n\n        if (this.mapControlVariable.select_by == \"Parameter\") {\n          if (this.mapControlVariable.parameter_by_pollutant_value.length) {\n            if (this.mapControlVariable.parameter_by_location__1.wktValue && this.mapControlVariable.parameter_by_location__2.wktValue && this.mapControlVariable.parameter_by_location__3.wktValue && this.mapControlVariable.parameter_by_location__4.wktValue) {\n              eventHub.$emit('getVisualization');\n            } else {\n              this.$notify({\n                title: 'Warning',\n                message: 'Please select locations on all dropdown menu.',\n                type: 'warning'\n              });\n            }\n\n          } else {\n            this.$notify({\n              title: 'Warning',\n              message: 'Please Select a pollutant',\n              type: 'warning'\n            });\n          }\n        } else {\n          if (this.location_by_pollutant_value1.length > 0 && this.location_by_pollutant_value2.length > 0 && this.location_by_pollutant_value3.length > 0 && this.location_by_pollutant_value4.length > 0 && this.mapControlVariable.location_by_wktValue) {\n            eventHub.$emit('getVisualization');\n          } else {\n\n\n            this.$notify({\n              title: 'Warning',\n              message: 'Please select pollutants on all dropdown menu.',\n              type: 'warning'\n            });\n          }\n        }\n\n      }\n\n\n    },\n    ObservationStationOption() {\n      if (this.mapControlVariable.select_by == \"Parameter\") {\n        this.AirPollutionWatchApp.cascaderObject[this.mapControlVariable.data_period].data.forEach((obj1) => {\n          obj1.children.forEach((obj2) => {\n            if (obj2.children) {\n              delete obj2.children;\n            }\n          });\n        });\n      } else {\n        this.AirPollutionWatchApp.cascaderObject[this.mapControlVariable.data_period].data.forEach((obj1) => {\n          obj1.children.forEach((obj2) => {\n            if (obj2.childrenData) {\n              obj2.children = obj2.childrenData;\n            }\n          });\n        });\n      }\n    },\n    getStationInfoObject(stationObjectValue) {\n      let interestedObje = {};\n      this.AirPollutionWatchApp.cascaderObject[this.mapControlVariable.data_period].data.filter((obj1) => {\n        return obj1.children.filter((obj2) => {\n          if (obj2.value == stationObjectValue) {\n            interestedObje = obj2;\n          }\n          return obj2.value == stationObjectValue\n        }).length > 0 ? true : false;\n      });\n      return interestedObje;\n    },\n    SetLayerOfSelectByParameterLayer(IsViz) {\n      if (this.mapControlVariable.parameter_by_pollutant_value.length) {\n        let kk = this.getStationInfoObject(this.mapControlVariable.parameter_by_pollutant_value[1]);\n        let layer = this.getBindedLayer(kk.layerId);\n        if (IsViz) {\n          layer.setVisibleDivBind(IsViz);\n        } else {\n          layer.setVisibleDivBind(IsViz);\n        }\n      }\n    },\n    setLayerVisible(layerId, IsViz) {\n      let layer = this.getBindedLayer(layerId);\n      if (IsViz) {\n        layer.setVisible(IsViz);\n      } else {\n        layer.setVisibleDivBind(IsViz);\n      }\n    },\n    onChangePollutantsOnSelectByLocation(newVal, oldVal) {\n      if (newVal.length) {\n        let kk = this.getStationInfoObject(newVal[1]);\n        if (Object.keys(kk).length != 0) {\n          let layer = this.getBindedLayer(kk.layerId);\n          layer.setVisibleDivBind(true);\n        }\n      }\n      if (oldVal.length) {\n        let count = 0;\n        if (this.location_by_pollutant_value1.length) {\n          if (this.location_by_pollutant_value1[1] == oldVal[1]) {\n            count = count + 1\n          }\n        }\n        if (this.location_by_pollutant_value2.length) {\n          if (this.location_by_pollutant_value2[1] == oldVal[1]) {\n            count = count + 1\n          }\n        }\n        if (this.location_by_pollutant_value3.length) {\n          if (this.location_by_pollutant_value3[1] == oldVal[1]) {\n            count = count + 1\n          }\n        }\n        if (this.location_by_pollutant_value4.length) {\n          if (this.location_by_pollutant_value4[1] == oldVal[1]) {\n            count = count + 1\n          }\n        }\n        if (count === 0) {\n          let kk = this.getStationInfoObject(oldVal[1]);\n          if (Object.keys(kk).length != 0) {\n            let layer = this.getBindedLayer(kk.layerId);\n            layer.setVisibleDivBind(false);\n          }\n        }\n      }\n      console.log(newVal)\n      console.log(oldVal)\n    },\n  },\n  computed: {\n    ...mapState([\"selectInteraction\", \"mapObject\", \"TimeSeriesLayerCollection\", \"WorkingVectorLayer\", \"mapControlVariable\"]),\n    ...mapGetters([\"getBindedLayer\", \"getLayer\"]),\n    cascaderData() {\n      return this.AirPollutionWatchApp.cascaderObject[this.mapControlVariable.data_period].data;\n    },\n    SelectDefaultLocation() {\n      return this.mapControlVariable.default_location;\n    },\n    SelectLocationBy() {\n      return this.mapControlVariable.location_by;\n    },\n    SelectByOption() {\n      return this.mapControlVariable.select_by;\n    },\n    SelectDataPeriod() {\n      return this.mapControlVariable.data_period;\n    },\n    SelectByParameterPollutant() {\n      return this.mapControlVariable.parameter_by_pollutant_value;\n    },\n    location_by_pollutant_value1() {\n      return this.mapControlVariable.location_by_pollutant_value1;\n    },\n    location_by_pollutant_value2() {\n      return this.mapControlVariable.location_by_pollutant_value2;\n    },\n    location_by_pollutant_value3() {\n      return this.mapControlVariable.location_by_pollutant_value3;\n    },\n    location_by_pollutant_value4() {\n      return this.mapControlVariable.location_by_pollutant_value4;\n    },\n\n\n  },\n  async mounted() {\n    let defaultLocation = await this.getCityData();\n    this.options.default_location = defaultLocation.data;\n\n    this.selectInteraction.on('select', () => {\n      this.featureSelectorDeleteUpdate();\n    });\n    await this.addLayersToMap();\n\n    console.log(\"all complete\");\n\n    this.mapControlVariable.select_by = defaultParamter[this.mapControlVariable.data_period].select_by;\n    this.mapControlVariable.parameter_by_pollutant_value = defaultParamter[this.mapControlVariable.data_period].parameter_by_pollutant_value;\n    setTimeout(() => {\n      //   this.mapControlVariable.parameter_by_pollutant_value_stationData_val1 = defaultParamter[this.mapControlVariable.data_period].parameter_by_pollutant_value_stationData_val1;\n      //   this.mapControlVariable.parameter_by_pollutant_value_stationData_val2 = defaultParamter[this.mapControlVariable.data_period].parameter_by_pollutant_value_stationData_val2;\n      //   this.mapControlVariable.parameter_by_pollutant_value_stationData_val3 = defaultParamter[this.mapControlVariable.data_period].parameter_by_pollutant_value_stationData_val3;\n      //   this.mapControlVariable.parameter_by_pollutant_value_stationData_val4 = defaultParamter[this.mapControlVariable.data_period].parameter_by_pollutant_value_stationData_val4;\n      this.computeData();\n    }, 100);\n  },\n  created() {\n    if (this.mapControlVariable.data_period === 'Recent') {\n      console.log(\"Recent\");\n    } else if (this.dataPeriod === 'Archive') {\n      console.log(\"Archive\");\n    } else {\n      console.log(\"Forecast\");\n    }\n  },\n  deactivated() {\n\n  }\n}\n</script>\n\n<style scoped>\n.feature-selected {\n  color: #67C23A;\n  border: 1px solid #67C23A5C;\n  border-radius: 5px;\n  padding: 0px 5px;\n  text-align: center;\n}\n\n.no-feature-selected {\n  color: #E6A23C;\n  border: 1px solid #e6a23c5c;\n  border-radius: 5px;\n  padding: 0px 5px;\n  text-align: center;\n}\n\n.pollutant-cascader:not(:last-child) {\n  padding-bottom: 10px;\n}\n\n.body-container {\n  height: calc(100% - 50px);\n}\n</style>","<template>\n  <el-row style=\"width: 100%\">\n    <el-col :span=\"11\" style=\"width: 100%\">\n      <el-select :disabled=\"isDisable\" v-model=\"parameter_by_location.location_by\" placeholder=\"Select Location\"\n                 style=\"width: 100%\">\n        <el-option\n            v-for=\"item in options.location_by\"\n            :key=\"item.value\"\n            :label=\"item.label\"\n            :value=\"item.value\"\n            :disabled=\"item.disabled\"\n        >\n        </el-option>\n\n      </el-select>\n    </el-col>\n    <el-col :span=\"2\" style=\"width: 100%\">\n      <div class=\"\" style=\"width: 100%;text-align: center;\">\n        -\n      </div>\n    </el-col>\n    <el-col :span=\"11\" style=\"width: 100%\">\n      <el-select :disabled=\"isDisable\" v-show=\"parameter_by_location.location_by ==='default_locations'\"\n                 v-model=\"parameter_by_location.default_location\"\n                 placeholder=\"Select Location\" style=\"width: 100%\" ref=\"defaultLocation\">\n        <el-option\n            v-for=\"item in Select_Option_Default_Location\"\n            :key=\"item.value\"\n            :label=\"item.label\"\n            :value=\"item.value\"\n        >\n        </el-option>\n      </el-select>\n\n      <div class=\"\" v-show=\"parameter_by_location.location_by ==='AOI'\">\n\n        <div class=\"feature-selected\" v-show=\"parameter_by_location.is_AOI_Feature_selected ===true\">Feature selected\n        </div>\n        <div class=\"no-feature-selected\" v-show=\"parameter_by_location.is_AOI_Feature_selected ===false\">No Feature\n          selected\n        </div>\n      </div>\n    </el-col>\n  </el-row>\n</template>\n\n<script>\n\nimport {mapActions, mapState} from \"vuex\";\nimport OLWKT from \"ol/format/WKT\";\nimport OlGeoJSON from \"ol/format/GeoJSON\";\nimport eventHub from \"../utils/utils\";\n\nexport default {\n  name: 'selectLocation',\n  props: {\n    isDisable: {\n      type: Boolean,\n      required: true\n    }, IndexValue: {\n      type: Number,\n      required: true\n    }, Select_Option_Default_Location: {\n      type: Array,\n      required: true\n    },\n  },\n  data() {\n    return {\n      options: {\n        location_by: [\n          {\n            value: 'default_locations',\n            label: 'Major Cities',\n          },\n          {\n            value: 'AOI',\n            label: 'Select on map',\n          }\n        ],\n      }\n    }\n  },\n  mounted() {\n  },\n  methods: {\n    ...mapActions([\"getCityData\"]),\n    featureSelectorDeleteUpdate() {\n\n      var wktfeaturegeom, geometryType, featureExtent;\n\n\n      if (this.selectInteraction) {\n        if (this.parameter_by_location.location_by == \"AOI\") {\n          if (this.selectInteraction.getFeatures().getLength()) {\n            var features = this.selectInteraction.getFeatures();\n            features.forEach((f) => {\n              var format = new OLWKT();\n              wktfeaturegeom = format.writeGeometry(f.getGeometry(), {\n                dataProjection: 'EPSG:4326',\n                featureProjection: 'EPSG:3857'\n              });\n              geometryType = f.getGeometry().getType();\n\n              featureExtent = (new OLWKT()).readFeature(wktfeaturegeom);\n              featureExtent = featureExtent.getGeometry().getExtent();\n              f.set(\"SelectBy\", \"Parameter\");\n              f.set(\"LocationBy\", \"AOI\");\n              f.set(\"IndexValue\", this.radioValue);\n            });\n          }\n\n          let countSelectedFeature = 0;\n          this.WorkingVectorLayer.getSource().getFeatures().forEach((f) => {\n            if (f.get(\"SelectBy\") == \"Parameter\" && f.get(\"LocationBy\") == \"AOI\" && f.get(\"IndexValue\") == this.IndexValue) {\n              countSelectedFeature += 1;\n            }\n          });\n          console.log(countSelectedFeature + \" | \" + this.radioValue + \" | \" + this.IndexValue);\n\n          if (this.IndexValue == this.radioValue) {\n            if (countSelectedFeature) {\n              this.parameter_by_location.is_AOI_Feature_selected = true;\n              this.parameter_by_location.wktValue = wktfeaturegeom;\n              this.parameter_by_location.geometryType = geometryType;\n              this.parameter_by_location.featureExtent = featureExtent;\n            } else {\n              this.parameter_by_location.is_AOI_Feature_selected = false;\n              this.parameter_by_location.wktValue = '';\n              this.parameter_by_location.geometryType = '';\n              this.parameter_by_location.featureExtent = '';\n            }\n          }\n        } else {\n          if (this.radioValue == this.IndexValue) {\n            this.selectInteraction.getFeatures().clear();\n          }\n        }\n      }\n    }\n  },\n  watch: {\n    SelectDefaultLocation(newVal, oldVal) {\n      if (newVal) {\n        // add it to vectorLayer\n        let selNewValObj = this.Select_Option_Default_Location.filter(function (x) {\n          return newVal == x.value\n        })[0];\n\n        let Feature = (new OlGeoJSON()).readFeature(selNewValObj.geoJSON.features[0]);\n        Feature.set(\"SelectBy\", \"Parameter\");\n        Feature.set(\"LocationBy\", \"default_location\");\n        Feature.set(\"IndexValue\", this.IndexValue);\n        this.WorkingVectorLayer.getSource().addFeature(Feature);\n\n        var format = new OLWKT();\n        var wktfeaturegeom = format.writeGeometry(Feature.getGeometry(), {\n          dataProjection: 'EPSG:4326',\n          featureProjection: 'EPSG:3857'\n        });\n        var geometryType = Feature.getGeometry().getType();\n\n        let featureExtent = (new OLWKT()).readFeature(wktfeaturegeom);\n\n        // let featureForExtent = (new OlGeoJSON()).readFeature(selNewValObj.geoJSON.features[0]);\n        featureExtent = featureExtent.getGeometry().getExtent();\n        this.parameter_by_location.wktValue = wktfeaturegeom;\n        this.parameter_by_location.geometryType = geometryType;\n        this.parameter_by_location.featureExtent = [featureExtent[0] - 5, featureExtent[1] - 3, featureExtent[2] + 5, featureExtent[3] + 3]\n\n      } else {\n        this.parameter_by_location.wktValue = '';\n        this.parameter_by_location.geometryType = '';\n        this.parameter_by_location.featureExtent = '';\n      }\n      if (oldVal) {\n        // remove it from vector layer\n        this.WorkingVectorLayer.getSource().getFeatures().forEach((f) => {\n          if (f.get(\"SelectBy\") == \"Parameter\" && f.get(\"LocationBy\") == \"default_location\" && f.get(\"id\") == oldVal && f.get(\"IndexValue\") == this.IndexValue) {\n            this.WorkingVectorLayer.getSource().removeFeature(f);\n          }\n        });\n      }\n    },\n    SelectLocationBy() {\n      this.parameter_by_location.default_location = '';\n    }\n  },\n  computed: {\n    ...mapState([\"selectInteraction\", \"mapObject\", \"WorkingVectorLayer\", \"mapControlVariable\"]),\n    SelectDefaultLocation() {\n      return this.parameter_by_location.default_location\n    }, SelectLocationBy() {\n      return this.parameter_by_location.location_by\n    },\n    parameter_by_location() {\n      return this.mapControlVariable[\"parameter_by_location__\" + this.IndexValue.toString()];\n    }, radioValue() {\n      return this.mapControlVariable.radioValue;\n    }\n  },\n  beforeCreate() {\n    eventHub.$once(\"runFeatureInteractionCode\", () => {\n\n      this.selectInteraction.on('select', () => {\n        this.featureSelectorDeleteUpdate();\n      });\n    });\n\n    eventHub.$on(\"SelectByParameterDefaultLocation\", () => {\n      console.log(\"okok\")\n      var elem =this.$refs.defaultLocation.$el // Element to fire on\n      // debugger;\n      elem.dispatchEvent(new Event(\"change\")); // Fire event\n    });\n\n  }\n};\n</script>\n\n<style lang=\"scss\">\n.feature-selected {\n  color: #67C23A;\n  border: 1px solid #67C23A5C;\n  border-radius: 5px;\n  padding: 0px 5px;\n  text-align: center;\n}\n\n.no-feature-selected {\n  color: #E6A23C;\n  border: 1px solid #e6a23c5c;\n  border-radius: 5px;\n  padding: 0px 5px;\n  text-align: center;\n}\n</style>","import { render } from \"./selectLocation.vue?vue&type=template&id=abc3aec2\"\nimport script from \"./selectLocation.vue?vue&type=script&lang=js\"\nexport * from \"./selectLocation.vue?vue&type=script&lang=js\"\n\nimport \"./selectLocation.vue?vue&type=style&index=0&id=abc3aec2&lang=scss\"\n\nimport exportComponent from \"/home/suman/tethys3Apps/tethysapp-airqualitynp/tethysapp/airqualitynp/vairqualitynp/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","\nexport var defaultParamter= {\n    Recent:{\n                select_by:'Parameter',\n                // Location parameter\n                location_by: 'default_locations',\n                default_location: '',\n                is_AOI_Feature_selected: false,\n                location_by_wktValue: '',\n                location_by_geometryType: '',\n\n                location_by_pollutant_value1: [],\n                location_by_pollutant_value2: [],\n                location_by_pollutant_value3: [],\n                location_by_pollutant_value4: [],\n\n                //parameter parameter\n                radioValue: 1,\n                parameter_by_pollutant_value: [1,12],\n                is_parameter_by_pollutant_value_stationData: true,\n\n                parameter_by_pollutant_value_stationData_val1: 6,\n                parameter_by_pollutant_value_stationData_val2: 4,\n                parameter_by_pollutant_value_stationData_val3: 2,\n                parameter_by_pollutant_value_stationData_val4: 8,\n                parameter_by_location__1: {\n                    location_by: 'default_locations',\n                    default_location: '',\n                    is_AOI_Feature_selected: false,\n                    wktValue: '',\n                    geometryType: '',\n                    featureExtent: '',\n                },\n                parameter_by_location__2: {\n                    location_by: 'default_locations',\n                    default_location: '',\n                    is_AOI_Feature_selected: false,\n                    wktValue: '',\n                    geometryType: '',\n                    featureExtent: '',\n                },\n                parameter_by_location__3: {\n                    location_by: 'default_locations',\n                    default_location: '',\n                    is_AOI_Feature_selected: false,\n                    wktValue: '',\n                    geometryType: '',\n                    featureExtent: '',\n                },\n                parameter_by_location__4: {\n                    location_by: 'default_locations',\n                    default_location: '',\n                    is_AOI_Feature_selected: false,\n                    wktValue: '',\n                    geometryType: '',\n                    featureExtent: '',\n                },\n            },\n    Archive:{\n                // Location parameter\n                location_by: 'default_locations',\n                default_location: '',\n                is_AOI_Feature_selected: false,\n                location_by_wktValue: '',\n                location_by_geometryType: '',\n\n                location_by_pollutant_value1: [],\n                location_by_pollutant_value2: [],\n                location_by_pollutant_value3: [],\n                location_by_pollutant_value4: [],\n\n                //parameter parameter\n                radioValue: 1,\n                parameter_by_pollutant_value: [],\n                is_parameter_by_pollutant_value_stationData: true,\n\n                parameter_by_pollutant_value_stationData_val1: '',\n                parameter_by_pollutant_value_stationData_val2: '',\n                parameter_by_pollutant_value_stationData_val3: '',\n                parameter_by_pollutant_value_stationData_val4: '',\n                parameter_by_location__1: {\n                    location_by: 'default_locations',\n                    default_location: '',\n                    is_AOI_Feature_selected: false,\n                    wktValue: '',\n                    geometryType: '',\n                    featureExtent: '',\n                },\n                parameter_by_location__2: {\n                    location_by: 'default_locations',\n                    default_location: '',\n                    is_AOI_Feature_selected: false,\n                    wktValue: '',\n                    geometryType: '',\n                    featureExtent: '',\n                },\n                parameter_by_location__3: {\n                    location_by: 'default_locations',\n                    default_location: '',\n                    is_AOI_Feature_selected: false,\n                    wktValue: '',\n                    geometryType: '',\n                    featureExtent: '',\n                },\n                parameter_by_location__4: {\n                    location_by: 'default_locations',\n                    default_location: '',\n                    is_AOI_Feature_selected: false,\n                    wktValue: '',\n                    geometryType: '',\n                    featureExtent: '',\n                },\n            },\n    Forecast:{\n                // Location parameter\n                location_by: 'default_locations',\n                default_location: '',\n                is_AOI_Feature_selected: false,\n                location_by_wktValue: '',\n                location_by_geometryType: '',\n\n                location_by_pollutant_value1: [],\n                location_by_pollutant_value2: [],\n                location_by_pollutant_value3: [],\n                location_by_pollutant_value4: [],\n\n                //parameter parameter\n                radioValue: 1,\n                parameter_by_pollutant_value: [],\n                is_parameter_by_pollutant_value_stationData: true,\n\n                parameter_by_pollutant_value_stationData_val1: '',\n                parameter_by_pollutant_value_stationData_val2: '',\n                parameter_by_pollutant_value_stationData_val3: '',\n                parameter_by_pollutant_value_stationData_val4: '',\n                parameter_by_location__1: {\n                    location_by: 'default_locations',\n                    default_location: '',\n                    is_AOI_Feature_selected: false,\n                    wktValue: '',\n                    geometryType: '',\n                    featureExtent: '',\n                },\n                parameter_by_location__2: {\n                    location_by: 'default_locations',\n                    default_location: '',\n                    is_AOI_Feature_selected: false,\n                    wktValue: '',\n                    geometryType: '',\n                    featureExtent: '',\n                },\n                parameter_by_location__3: {\n                    location_by: 'default_locations',\n                    default_location: '',\n                    is_AOI_Feature_selected: false,\n                    wktValue: '',\n                    geometryType: '',\n                    featureExtent: '',\n                },\n                parameter_by_location__4: {\n                    location_by: 'default_locations',\n                    default_location: '',\n                    is_AOI_Feature_selected: false,\n                    wktValue: '',\n                    geometryType: '',\n                    featureExtent: '',\n                },\n            }\n}","import { render } from \"./mapControlsEmission.vue?vue&type=template&id=50ce8905&scoped=true\"\nimport script from \"./mapControlsEmission.vue?vue&type=script&lang=js\"\nexport * from \"./mapControlsEmission.vue?vue&type=script&lang=js\"\n\nimport \"./mapControlsEmission.vue?vue&type=style&index=0&id=50ce8905&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/suman/tethys3Apps/tethysapp-airqualitynp/tethysapp/airqualitynp/vairqualitynp/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-50ce8905\"]])\n\nexport default __exports__","<template>\n  <div class=\"card-box full-height full-width about-div\">\n    <div id=\"map-container2\" ref=\"LayerSelectorDropdown\">\n    </div>\n    <div id=\"layerSwitcherDiv\" class=\"ol-unselectable ol-control\" @click=\"LayerSwitcherClick()\">\n      <button>\n        <img src=\"@/assets/layers.svg\" style=\"height: 20px;width: 20px;\">\n      </button>\n    </div>\n\n    <el-drawer\n        title=\"Layers\"\n        v-model=\"drawer\"\n        custom-class=\"drawerCustomCSS\"\n        :append-to-body=\"drawerAppendToBody\"\n        :modal=\"false\"\n        :modal-class=\"'drawerForLayersList'\"\n    >\n      <span>\n        <div class=\"layerCollection\"></div>\n          </span>\n    </el-drawer>\n\n    <PrintMap></PrintMap>\n  </div>\n</template>\n\n<script>\nimport \"ol/ol.css\";\nimport Map from \"ol/Map\";\nimport Control from \"ol/control/Control\"\nimport OSM from \"ol/source/OSM\";\nimport TileLayer from \"ol/layer/Tile\";\n// import TileWMS from \"ol/source/TileWMS\";\nimport View from \"ol/View\";\nimport {dataSelect} from \"../utils/data\";\nimport eventHub from \"../utils/utils\";\n// import TimeDimensionTile from \"ol-plus/layer/TimeDimensionTile\";\n// import EDALSLD from 'ol-plus/sld/EDALSLD';\n// import {ThreddsServer} from '../config';\n// import LayerSwitcher from 'ol-plus/ui/LayerSwitcher';\n// import {lineString, lineDistance, area as turfArea,polygon as turfPolygon, length as turfLength} from '@turf/turf';\nimport {getArea, getLength,} from 'ol/sphere';\nimport LineString from 'ol/geom/LineString';\n\n// import {MajorBasinExtent, BasinExtent, mbasin, dataSelect, WMSSLD, legendImage} from \"../utils/data\";\n// import TimeDimensionTile from \"ol-plus/layer/TimeDimensionTile\";\n// import {ThreddsServer} from \"../utils/config\";\n\n\nimport 'ol-ext/control/Search.css';\nimport SearchNominatim from 'ol-ext/control/SearchNominatim';\nimport VectorLayer from \"ol/layer/Vector\";\nimport VectorSource from \"ol/source/Vector\";\nimport Style from \"ol/style/Style\";\nimport Stroke from \"ol/style/Stroke\";\nimport Fill from \"ol/style/Fill\";\nimport {Icon} from 'ol/style';\nimport {toSize} from 'ol/size';\nimport ImageIcon from '../assets/markers_default.png';\nimport {getCenter as ol_extent_getCenter} from 'ol/extent';\nimport GeoJSON from \"ol/format/GeoJSON\";\n\n\nimport OLPolygon from 'ol/geom/Polygon'\nimport OlSelect from 'ol/interaction/Select'\nimport OlDraw from 'ol/interaction/Draw'\nimport OlExtTextButton from 'ol-ext/control/TextButton'\nimport Bar from 'ol-ext/control/Bar'\nimport OlExtButton from 'ol-ext/control/Button'\nimport OlExtToggle from 'ol-ext/control/Toggle';\nimport 'ol-ext/control/Bar.css'\nimport CircleStyle from \"ol/style/Circle\";\nimport ScaleLine from \"ol/control/ScaleLine\";\nimport {defaults} from \"ol/control\";\n\nimport {mapMutations, mapState} from 'vuex';\n\nimport PrintMap from \"./PrintMap\";\n\nexport default {\n  name: \"mapComponentEmission\",\n  components: {PrintMap},\n  data() {\n    return {\n      drawerAppendToBody: true,\n      mapObj: '',\n      HighLightedLayer: '',\n      view: '',\n      mapObject: '',\n      MajorBasin: '',\n      AllLayers: '',\n      selectedFilesOnAYear: [],\n      drawer: true,\n    }\n  },\n  methods: {\n    ...mapMutations([\"setSelectedLayerObj\", \"appendTimeSeriesLayerCollection\", \"setSelectInteraction\", \"setMapObject\", \"setWorkingVectorLayer\"]),\n    mapInitilization() {\n      let osm = new TileLayer({\n        source: new OSM({attributions: [],}),\n        // visible:false\n      });\n      let view = new View({\n        center: [9388155.512006583, 3291367.8109067543],\n        zoom: 4,\n        extent: [8890696.26351159, 3015412.0211580014, 9868004.289064337, 3590809.349811837]\n      });\n      let ScaleControl = new ScaleLine({\n            units: 'metric'\n        });\n      var map = new Map({\n        layers: [],\n        // target: this.$refs['map-root'],\n        target: 'map-container2',\n        controls:defaults({\n           attribution: false\n        }).extend([ScaleControl]),\n        view: view,\n      });\n      map.addLayer(osm);\n      this.mapObject = map;\n      window.mapObject = map;\n      this.view = view;\n      this.mapObject.addControl(\n          new Control({\n            element: document.getElementById('layerSwitcherDiv')\n          })\n      );\n      map.getView().fit([8890696.26351159, 3015412.0211580014, 9868004.289064337, 3590809.349811837], map.getView());\n      this.setMapObject(this.mapObject);\n    },\n    changeInventory() {\n      this.addTimeDimensionLayer();\n    },\n    async addTimeDimensionLayer() {\n\n\n      // var mapObject = this.mapObject;\n      // var layerId = this.$store.state.inventory + '___' + this.$store.state.pollutants + '___' + this.$store.state.sectors + '___' + this.$store.state.year;\n      // var selectedLayr = this.TimeSeriesLayerCollection.filter(function (x) {\n      //   var checkLayer = x.getProperties().id === layerId;\n      //   if (!checkLayer) {\n      //     x.setVisibleDivBind(false);\n      //   }\n      //   return checkLayer;\n      // });\n      // if (selectedLayr.length) {\n      //   if (selectedLayr.length === 1) {\n      //     selectedLayr[0].setVisibleDivBind(true);\n      //   } else {\n      //     console.log(\"there are multiple layer added!!!!\");\n      //   }\n      // } else {\n      //   let ll = getLayerPropObj(this.$store.state.inventory, this.$store.state.pollutants, this.$store.state.sectors);\n      //   let title = [ll.title[0], ll.title[2], this.$store.state.year, ll.title[1]].join(' ') + ' (kt)';\n      //   ll.title = [ll.title[0], ll.title[2], this.$store.state.year].join(' ') + \"</br> \" + ll.title[1] + ' (kt)';\n      //   let EdalSldObj = new EDALSLD(ll);\n      //   let WMSList = `${ThreddsServer}/wms/HKHEmissions/${this.$store.state.inventory}/${this.$store.state.pollutants}/${this.$store.state.inventory}_${this.$store.state.pollutants}_${this.$store.state.year}.nc`;\n      //   let legendUrl = WMSList + `?SERVICE=WMS&VERSION=1.1.1&REQUEST=GetLegendGraphic&WIDTH=10&HEIGHT=230&LAYERS=${this.$store.state.sectors}&SLD_BODY=${encodeURIComponent(EdalSldObj.getEDALSLD())}`;\n      //\n      //   var mm = new TimeDimensionTile({\n      //     id: layerId,\n      //     title: title,\n      //     visible: true,\n      //     opacity: 1,\n      //     legendPath: legendUrl,\n      //     showlegend: true,\n      //     showControlPanel: false,\n      //     ThreddsDataServerVersion: \"5\",\n      //     timeSliderSize: \"small\",\n      //     alignTimeSlider: \"left\",\n      //     customLegendElement: EdalSldObj.getLegendHTMLElement(),\n      //     source: {\n      //       url: WMSList,\n      //       params: {\n      //         'VERSION': '1.1.1',\n      //         'LAYERS': ll.parameterName,\n      //         'SLD_BODY': EdalSldObj.getEDALSLD(),\n      //       }\n      //     }\n      //   });\n      //   await mm.init().then((val) => {\n      //         mapObject.addThreddsLayer(val);\n      //         let lk = new LayerSwitcher(\".layerCollection\", mm, true, true, 'withOpacSlider');\n      //         mm.setVisible(true);\n      //\n      //         this.appendTimeSeriesLayerCollection(lk);\n      //       },\n      //       (error) => {\n      //         console.error(error);\n      //       });\n      // }\n    },\n    addGeoCodingAndInteractionBar() {\n      var map = this.mapObject;\n\n// Set the control grid reference\n      var search = new SearchNominatim({\n        polygon: true,\n        reverse: false,\n        position: true,\t// Search, with priority to geo position,\n        // maxHistory: -1,\n        className: 'OSMBasedGeocodingEmissionPage',\n      });\n\n// search.set('copy', false)\n\n      var GeoCodingAndDrawLayer = new VectorLayer({\n        source: new VectorSource(),\n        zIndex: 999\n      });\n      this.setWorkingVectorLayer(GeoCodingAndDrawLayer);\n      map.addLayer(GeoCodingAndDrawLayer);\n\n      map.addControl(search);\n\n\n// Select feature when click on the reference index\n      search.on('select', function (e) {\n        // console.log(e);\n        // GeoCodingAndDrawLayer.getSource().clear();\n        removePreviousSearchFeature();\n        // Check if we get a geojson to describe the search\n        if (e.search.geojson) {\n          var format = new GeoJSON();\n          var f = format.readFeature(e.search.geojson, {\n            dataProjection: \"EPSG:4326\",\n            featureProjection: map.getView().getProjection()\n          });\n          delete e.search.geojson;\n          f.setProperties(e.search);\n          GeoCodingAndDrawLayer.getSource().addFeature(f);\n          var view = map.getView();\n          var resolution = view.getResolutionForExtent(f.getGeometry().getExtent(), map.getSize());\n          var zoom = view.getZoomForResolution(resolution);\n          var center = ol_extent_getCenter(f.getGeometry().getExtent());\n          // redraw before zoom\n          setTimeout(function () {\n            view.animate({\n              center: center,\n              zoom: Math.min(zoom, 16)\n            });\n          }, 100);\n        } else {\n          map.getView().animate({\n            center: e.coordinate,\n            zoom: Math.max(map.getView().getZoom(), 16)\n          });\n        }\n\n        UpDateVectorLayerStyle();\n      });\n\n\n// Main control bar\n      var mainbar = new Bar();\n      mainbar.setPosition('top-left');\n\n      map.addControl(mainbar);\n\n// Edit control bar\n      var editbar = new Bar({\n        toggleOne: true,\t// one control active at the same time\n        group: false\t\t\t// group controls together\n      });\n      mainbar.addControl(editbar);\n\n// Add selection tool:\n//  1- a toggle control with a select interaction\n//  2- an option bar to delete / get information on the selected feature\n      var sbar = new Bar();\n      sbar.addControl(new OlExtButton({\n        html: '<i class=\"fa fa-times\"></i>',\n        title: \"Delete\",\n        handleClick: function () {\n          var features = selectCtrl.getInteraction().getFeatures();\n          if (!features.getLength()) info(\"Select an object first...\");\n          else info(features.getLength() + \" object(s) deleted.\");\n\n          features.forEach(function (f) {\n            console.log(f);\n            GeoCodingAndDrawLayer.getSource().removeFeature(f);\n          });\n          selectCtrl.getInteraction().getFeatures().clear();\n          selectCtrl.getInteraction().dispatchEvent({type: 'select'});\n        }\n      }));\n\n\n      var selectCtrl = new OlExtToggle({\n        html: '<i class=\"fa fa-hand-pointer\"></i>',\n        title: \"Select\",\n        interaction: new OlSelect({\n          hitTolerance: 2,\n          style: new Style({\n            image: new CircleStyle({\n              radius: 5,\n              stroke: new Stroke({\n                color: [255, 0, 0, 1],\n                opacity: 1,\n                width: 2\n              }),\n              fill: new Fill({\n                color: '#e5e5ff50'\n              }),\n            }),\n            stroke: new Stroke({\n              color: [255, 0, 0, 1],\n              opacity: 1,\n              width: 2\n            }),\n            fill: new Fill({\n              color: '#e5e5ff50'\n            })\n            // Commented to only see the lines\n            //,fill: new ol.style.Stroke ({\n            //  color: [155, 155, 155, 0.4]\n            //})\n          }),\n          layers: [GeoCodingAndDrawLayer]\n        }),\n        bar: sbar,\n        autoActivate: true,\n        active: true\n      });\n      this.setSelectInteraction(selectCtrl.getInteraction());\n\n      editbar.addControl(selectCtrl);\n      this.setSelectedLayerObj(selectCtrl.getInteraction());\n// Add editing tools\n      var pedit = new OlExtToggle({\n        html: '<i class=\"fa fa-map-marker-alt\" ></i>',\n        title: 'Point',\n        interaction: new OlDraw({\n          type: 'Point',\n          source: GeoCodingAndDrawLayer.getSource()\n        })\n      });\n      editbar.addControl(pedit);\n\n\n      var fedit = new OlExtToggle({\n        html: '<i class=\"fa fa-draw-polygon\" ></i>',\n        title: 'Polygon',\n        interaction: new OlDraw({\n          type: 'Polygon',\n          source: GeoCodingAndDrawLayer.getSource(),\n          // Count inserted points\n          geometryFunction: function (coordinates, geometry) {\n            this.nbpts = coordinates[0].length;\n            if (geometry) geometry.setCoordinates([coordinates[0].concat([coordinates[0][0]])]);\n            else geometry = new OLPolygon(coordinates);\n            return geometry;\n          }\n        }),\n        // Options bar ssociated with the control\n        bar: new Bar({\n          controls: [new OlExtTextButton({\n            html: 'undo',//'<i class=\"fa fa-mail-reply\"></i>',\n            title: \"undo last point\",\n            handleClick: function () {\n              if (fedit.getInteraction().nbpts > 1) fedit.getInteraction().removeLastPoint();\n            }\n          }),\n            new OlExtTextButton({\n              html: 'finish',\n              title: \"finish\",\n              handleClick: function () {\n                // Prevent null objects on finishDrawing\n                if (fedit.getInteraction().nbpts > 3) fedit.getInteraction().finishDrawing();\n              }\n            })\n          ]\n        })\n      });\n      editbar.addControl(fedit);\n\n\n      // fedit.getInteraction().on('drawend', function (e) {\n      //\n      //   console.log(e.feature);\n      //   console.log(e.feature);\n      //\n      //   // GeoCodingAndDrawLayer.getSource().removeFeature(e.feature);\n      //\n      //\n      // });\n\n      fedit.getInteraction().on('drawstart', function () {\n        GeoCodingAndDrawLayer.getSource().once('addfeature', handleAddFeature);\n      });\n\n      function handleAddFeature(evt) {\n        let coordi = evt.feature.getGeometry().getCoordinates();\n\n        const area = getArea(evt.feature.getGeometry());\n        // Sq.Km\n        let outputArea = Math.round((area / 1000000) * 100) / 100;\n        console.log(outputArea);\n\n        let li = new LineString(coordi);\n        const length = getLength(li);\n        // In Km\n        let outputLength = Math.round((length / 1000) * 100) / 100;\n        console.log(outputLength);\n        // GeoCodingAndDrawLayer.getSource().removeFeature(evt.feature);\n      }\n\n// Show info\n      function info(i) {\n        console.log(i);\n        // document.querySelector(\"#info\").innerHTML(i || \"\");\n      }\n\n      function UpDateVectorLayerStyle() {\n        GeoCodingAndDrawLayer.getSource().forEachFeature(function (feature) {\n          let StyleObj = null;\n          if (feature.getProperties().osm_id) {\n            StyleObj = [\n              new Style({\n                stroke: new Stroke({\n                  color: [0, 0, 0, 0],\n                  opacity: 1,\n                  width: 3\n                }),\n                fill: new Fill({\n                  color: '#e5e5ff00'\n                })\n                // Commented to only see the lines\n                //,fill: new ol.style.Stroke ({\n                //  color: [155, 155, 155, 0.4]\n                //})\n              }),\n              // Dash white lines (second style, on the top)\n              new Style({\n                image: new Icon({\n                  anchor: [0.5, 46],\n                  anchorXUnits: 'fraction',\n                  anchorYUnits: 'pixels',\n                  src: ImageIcon,\n                  size: toSize([40, 45]),\n                  // offset:[20,20]\n                }),\n                stroke: new Stroke({\n                  color: [0, 0, 255, 1.0],\n                  opacity: 1,\n                  width: 3,\n                  lineDash: [4, 8, 4, 8]\n                }),\n                fill: new Fill({\n                  color: '#e5e5ff40'\n                })\n              })\n            ];\n\n          } else {\n            StyleObj = new Style({\n              image: new CircleStyle({\n                radius: 5,\n                stroke: new Stroke({\n                  color: [255, 0, 0, 1],\n                  opacity: 1,\n                  width: 2\n                }),\n                fill: new Fill({\n                  color: '#e5e5ff50'\n                }),\n              }),\n              stroke: new Stroke({\n                color: [255, 0, 0, 1],\n                opacity: 1,\n                width: 2\n              }),\n              fill: new Fill({\n                color: '#e5e5ff50'\n              })\n              // Commented to only see the lines\n              //,fill: new ol.style.Stroke ({\n              //  color: [155, 155, 155, 0.4]\n              //})\n            });\n\n          }\n          feature.setStyle(StyleObj);\n\n        });\n      }\n\n      function removePreviousSearchFeature() {\n        var features = GeoCodingAndDrawLayer.getSource().getFeatures();\n        features.forEach(function (f) {\n          if (f.getProperties().osm_id) {\n            GeoCodingAndDrawLayer.getSource().removeFeature(f);\n          }\n        });\n        // console.log(features);\n      }\n\n      console.log(\"second\");\n      eventHub.$emit('runFeatureInteractionCode');\n    },\n    addPrintMapFunctionality() {\n      // Add a custom push button with onToggle function\n      let that = this;\n      var PrintButton = new OlExtButton(\n          {\n            html: '<i class=\"fas fa-print\"></i>',\n            className: \"PrintMap\",\n            title: \"Print map\",\n            handleClick: () => {\n              that.PrintMapComponentData.PrintMapDialogVisible = true;\n              setTimeout(() => {\n                eventHub.$emit('OpenDialogOfPrintAndProxyfy');\n              }, 500);\n            }\n          });\n      this.mapObject.addControl(PrintButton);\n    },\n    LayerSwitcherClick() {\n      this.drawer = true;\n    },\n    handleClose(done, e) {\n      console.log(e);\n\n      // this.$confirm('You still have unsaved data, proceed?')\n      //     .then(()=> {\n      //       done();\n      //     })\n      //     .catch(()=> {\n      //     });\n    }\n  },\n  computed: {\n    ...mapState([\"TimeSeriesLayerCollection\", \"PrintMapComponentData\"]),\n    getInventory() {\n      return dataSelect.Inventory;\n    },\n  },\n  created() {\n    this.Inventory = this.$store.state.inventory;\n  },\n  beforeMount() {\n  },\n  mounted() {\n    this.mapInitilization();\n    // this.addGeoCoding();\n    this.addGeoCodingAndInteractionBar();\n    // this.addPrintMapFunctionality();\n    eventHub.$on('InventoryChange', () => {\n      this.changeInventory();\n    });\n    this.drawer = false;\n  },\n}\n</script>\n\n<style>\n#map-container2 {\n  height: 100%;\n  width: 100%;\n  border-radius: 5px;\n}\n\n#map-container2 .ol-viewport {\n  border-radius: 5px;\n}\n\n#layerSwitcherDiv {\n  right: 0.5em;\n  top: 0.5em;\n  position: absolute;\n}\n\n#layerSwitcherDiv button {\n  line-height: unset;\n  border-radius: 1px;\n}\n\n\n.drawerForLayersList {\n  position: initial !important;\n}\n\n/* OSM Based Geocoding*/\n.ol-search ul li {\n  border-bottom: 1px solid lightgray;\n\n  padding: 10px 5px 10px 5px !important;\n  flex: 1;\n  max-width: 608px;\n  white-space: normal !important;\n  overflow: unset;\n  flex-grow: 1;\n  text-overflow: ellipsis;\n}\n\n.ol-search ul li:last-child {\n  border-bottom: none;\n  border-radius: 0px;\n}\n\n.ol-search ul {\n  list-style: none;\n  cursor: pointer;\n  padding: 0px 5px 0px 5px !important;\n  margin: 0;\n  display: flex;\n  flex-direction: column;\n  clear: both;\n  cursor: pointer;\n  max-width: 618px;\n  overflow-x: hidden;\n  z-index: 1;\n  background: #fff;\n  font-size: 13px;\n}\n\n.ol-search {\n  z-index: 999;\n}\n\n.ol-search {\n  top: 4.1em;\n  left: 0.5em;\n  /*width: 500px;*/\n}\n\n.ol-search input {\n  width: 600px;\n}\n\n\n.ol-control.ol-bar {\n  left: 3.2em;\n  top: 6em;\n}\n\n.ol-control.ol-bar.ol-top.ol-left, .ol-control.ol-bar.ol-top.ol-right {\n  top: 6.5em;\n  transform: none;\n}\n\n.PrintMap.ol-button.ol-unselectable.ol-control {\n  top: 12em;\n  left: 0.5em;\n}\n\n.LayerDiv {\n  margin-top: 20px;\n}\n\n.withOpacityChange {\n  margin-bottom: 18px;\n}\n</style>","<template>\n  <div class=\"\">\n    <el-dialog\n        v-model=\"PrintMapComponentData.PrintMapDialogVisible\"\n        title=\"Print Map\"\n        width=\"95%\"\n        :before-close=\"handleClose\"\n        :append-to-body=\"true\"\n        :top=\"'3vh'\"\n    >\n      <el-row>\n        <el-col :span=\"8\" class=\"printing-control\">\n\n          <el-form\n              ref=\"MapPrintValidateForm\"\n              :model=\"MapPrintValidateForm\"\n              label-width=\"100px\"\n              class=\"demo-ruleForm\"\n              size=\"mini\"\n              label-position=\"top\"\n          >\n\n            <el-form-item\n                label=\"Map Title\"\n                prop=\"title\"\n                :rules=\"[\n        { required: true, message: 'Map title is required' },\n        { type: 'string', message: 'Map title must be string' },\n      ]\"\n            >\n              <el-input\n                  v-model.number=\"MapPrintValidateForm.title\"\n                  type=\"age\"\n                  autocomplete=\"off\"\n              ></el-input>\n            </el-form-item>\n\n            <el-form-item\n                label=\"Output File Name\"\n                prop=\"fileName\"\n                :rules=\"[\n        { required: true, message: 'Map title is required' },\n        { type: 'string', message: 'Output File Name must be string' },\n      ]\"\n            >\n              <el-input\n                  v-model.number=\"MapPrintValidateForm.fileName\"\n                  type=\"fileName\"\n                  autocomplete=\"off\"\n              ></el-input>\n            </el-form-item>\n\n            <el-form-item>\n              <el-collapse v-model=\"AccordionActiveName\" accordion>\n                <el-collapse-item name=\"1\">\n\n                  <template #title>\n                    <el-checkbox v-model=\"CheckSelectAll\" label=\"Select legend all items\"\n                                 class=\"selectAllLegend\"></el-checkbox>\n                  </template>\n                  <mapLagend\n                      v-for=\"item in legendInfos\"\n                      :key=\"item.id\"\n                      :item=\"item\"\n                  />\n\n                </el-collapse-item>\n              </el-collapse>\n            </el-form-item>\n            <el-form-item>\n\n              <el-button @click=\"Cancel\">Cancel</el-button>\n\n              <el-button type=\"primary\" @click=\"submitForm('MapPrintValidateForm')\"\n              >Submit\n              </el-button\n              >\n            </el-form-item>\n\n\n          </el-form>\n\n\n        </el-col>\n        <el-col :span=\"16\">\n          <div class=\"map-print-controls\">\n            <div class=\"muted-text\">Adjust the map extent as per your requirement.</div>\n            <div class=\"grid-content bg-purple-light\" id=\"map-control-printing\">\n            </div>\n\n          </div>\n        </el-col>\n      </el-row>\n\n    </el-dialog>\n  </div>\n\n</template>\n\n<script>\nimport {mapState} from \"vuex\";\nimport jsPDF from \"jspdf/dist/jspdf.min\";\n\nimport eventHub from \"../utils/utils\";\nimport mapLagend from \"./mapLagend\";\nimport {Action} from \"../store/actionType\";\nexport default {\n  name: \"PrintMap\",\n  data() {\n    return {\n      MapPrintValidateForm: {\n        title: '',\n        fileName: ''\n      },\n      AccordionActiveName: '',\n      CheckSelectAll: false,\n      PROXY_PREFIX: Action.Base+'/apps/airqualitynp/WMSProxy/',\n      legendInfos: [],\n      LegendUIList: []\n    };\n  },\n  components: {mapLagend},\n  watch: {\n    CheckSelectAll(newVal) {\n\n      this.legendInfos.forEach(function (obj1) {\n        obj1.visible = newVal\n      });\n\n\n    }\n  },\n  methods: {\n    submitForm(formName) {\n      this.$refs[formName].validate((valid) => {\n            if (valid) {\n              console.log(\"test\");\n\n              const layout = this.getMapPDFLayout();\n              const title = this.MapPrintValidateForm.title;\n              const outputfilename = this.MapPrintValidateForm.fileName;\n\n              const mapSize = this.mapObject.getSize();\n              const mapResolution = this.mapObject.getView().getResolution();\n              this.mapObject.once(\"rendercomplete\", () => {\n                // setting up the canvas\n                const canvas = document.createElement(\"canvas\");\n                canvas.width = layout.mapFrameSizePxl[0];\n                canvas.height = layout.mapFrameSizePxl[1];\n                const context = canvas.getContext(\"2d\");\n\n                // sort the legend by height\n                let legendInfos1 = this.legendInfos.filter(function (curObje) {\n                  return curObje.visible === true;\n                }).sort((item1, item2) => item1.imgHeight - item2.imgHeight);\n\n                this.copyOLMapTo(context);\n                console.log(legendInfos1)\n\n                legendInfos1.length && this.addLegendsTo(context, {\n                  legendInfos: legendInfos1,\n                  pos: layout.legendBoxPxl.pos,\n                  columnWidth: layout.legendBoxPxl.columnWidth,\n                  height: layout.legendBoxPxl.height\n                });\n\n                this.drawPolygon(context, \"black\", layout.northArrowCoordsPxl)\n                this.drawScaleBar(context, {x: canvas.width, y: canvas.height})\n                context.strokeStyle = \"black\";\n                context.strokeRect(0, 0, canvas.width, canvas.height) // map frame border\n\n                this.createMapPDF(title, outputfilename, canvas, layout)\n                // reset original map size\n                this.mapObject.setSize(mapSize);\n                this.mapObject.getView().setResolution(mapResolution);\n                }\n              );\n              // set map size to print frame size\n              const frameSize = layout.mapFrameSizePxl;\n              this.mapObject.setSize(frameSize);\n              const scaling = Math.min(frameSize[0] / mapSize[0], frameSize[1] / mapSize[1]);\n              this.mapObject.getView().setResolution(mapResolution / scaling);\n\n            } else {\n\n              console.log('error submit!!')\n\n              return false\n            }\n          }\n      )\n    },\n    resetForm(formName) {\n      this.$refs[formName].resetFields()\n    }\n    ,\n    Cancel() {\n      this.PrintMapComponentData.PrintMapDialogVisible = false;\n      this.backToNormal();\n    }\n    ,\n    handleClose(done) {\n      done();\n      this.backToNormal();\n    }\n    ,\n    backToNormal() {\n      let target = document.querySelector('#map-container2');\n      this.mapObject.setTarget(target);\n      this.deproxifyWMSLayers();\n\n    },\n    getMapPDFLayout() {\n      const DPI = 120; // pdf's dpi\n      const mmToPixel = dim_mm => dim_mm * DPI / 25.4; // 1 inch = 25.4 mm\n      // all measurements are in mm if not suffixed by pxl\n      const margin = 10;\n      const topMargin = 15;\n      const pageWidth = 297;\n      const pageHeight = 210;\n      const mapWidth = pageWidth - 2 * margin; // 272\n      const mapHeight = pageHeight - topMargin - margin; // 180\n      const mapHeightPxl = mmToPixel(mapHeight);\n      // legend positions are relative to mapframe\n      let legendHeightPercent = 0.42;\n      let legendHeightPxl = mapHeightPxl * legendHeightPercent;\n      let legendPosPxl = {\n        x: mmToPixel(2),\n        y: mapHeightPxl * (1 - legendHeightPercent) - mmToPixel(2)\n      }\n      // northArrow Coords: also relative to mapFrame\n      const arrowBaseWidth = 9;\n      const arrowHeight = 12;\n      const arrowTop = 6;\n      const arrowCenterX = mapWidth - (6 + arrowBaseWidth / 2);\n      const northArrowCoords = [\n        [arrowCenterX, arrowTop], // top coordinate\n        [arrowCenterX + arrowBaseWidth / 2, arrowTop + arrowHeight], // rightCoordinate\n        [arrowCenterX, arrowTop + 2 * arrowHeight / 3], // middleCoordinate\n        [arrowCenterX - arrowBaseWidth / 2, arrowTop + arrowHeight], // leftCoordinate\n      ];\n      return {\n        format: \"a4\",\n        pageDim: [pageWidth, pageHeight],\n        margin,\n        topMargin,\n        mapFrameSize: [mapWidth, mapHeight],\n        mapFrameSizePxl: [mmToPixel(mapWidth), mapHeightPxl],\n        northArrowCoordsPxl: northArrowCoords.map(pt => pt.map(mmToPixel)),\n        legendBoxPxl: {\n          pos: legendPosPxl,\n          height: legendHeightPxl,\n          columnWidth: 230\n        },\n      };\n    }\n    ,\n\n    copyOLMapTo(context) {\n      context.fillStyle = \"white\";\n      context.fillRect(0, 0, context.canvas.width, context.canvas.height);\n      document.querySelectorAll(\".ol-layer canvas\").forEach(mapCanvas => {\n        if (mapCanvas.width > 0) {\n          const opacity = mapCanvas.parentNode.style.opacity;\n          context.globalAlpha = opacity === \"\" ? 1 : Number(opacity);\n          // get the map's transform parameters from the style's transform matrix\n          const matrix = (mapCanvas.style.transform).match(/^matrix\\((.*)\\)$/)[1].split(\",\").map(Number);\n          // apply the transform to the exporting temp canvas's context\n          context.setTransform(...matrix);\n          context.drawImage(mapCanvas, 0, 0);\n        }\n      });\n      context.setTransform(1, 0, 0, 1, 0, 0);\n    }\n    ,\n\n    addLegendsTo(context, {legendInfos, pos, columnWidth, height: maxHeight}) {\n      // debugger;\n      const margin = 10;\n      let offsetX = margin;\n      let offsetY = margin;\n      const labelHeight = 22;\n      const [legendBoxWidth, legendBoxHeight] = this.getLegendBoxDimension(margin, labelHeight, columnWidth, legendInfos, maxHeight);\n      // re-adjust pos y according to legend Box Height\n      pos.y += maxHeight - legendBoxHeight;\n      // write legend title\n      context.textBaseline = \"bottom\";\n      context.fillStyle = \"black\";\n      context.font = \"bold 25px Times\"\n      context.fillText(\"Legends\", pos.x + margin, pos.y - margin);\n      // create white canvas on legendbox\n      context.fillStyle = \"white\";\n      context.fillRect(pos.x, pos.y, legendBoxWidth, legendBoxHeight);\n      // configure text style\n      context.fillStyle = \"black\";\n      context.font = \"100 18px Times\";\n      legendInfos.forEach(legend => {\n        const itemHeight = legend.imgHeight + labelHeight + margin;\n        if (offsetY + itemHeight > maxHeight) {\n          offsetX += margin + columnWidth;\n          offsetY = margin;\n        }\n        const left = pos.x + offsetX;\n        const top = pos.y + offsetY;\n        const img = document.createElement(\"img\");\n        // img.crossOrigin = \"anonymous\";\n        // img.setAttribute(\"src\", '/static/AFWatershed/images/Afghanistan_logo.png');\n        img.setAttribute(\"src\", legend.legendPath);\n        context.fillText(legend.title, left, top + labelHeight);\n        context.drawImage(img, left, top + labelHeight, legend.imgWidth, legend.imgHeight);\n        // update to offsetY\n        offsetY += itemHeight;\n      });\n      context.lineWidth = 1;\n      context.closePath();\n      context.strokeRect(pos.x, pos.y, legendBoxWidth, legendBoxHeight);\n    }\n    ,\n\n    getLegendBoxDimension(margin, labelHeight, columnWidth, legendInfos, maxBoxHeight) {\n      let bottomMostLegendItemY = 0;\n      const lastLegendItemPos = legendInfos.reduce((prevSize, legend) => {\n        const itemHeight = legend.imgHeight + labelHeight + margin;\n        if (prevSize.y + itemHeight > maxBoxHeight) {\n          prevSize.x += margin + columnWidth;\n          prevSize.y = margin;\n        }\n        prevSize.y += itemHeight;\n        if (bottomMostLegendItemY < prevSize.y) bottomMostLegendItemY = prevSize.y;\n        return prevSize;\n      }, {x: margin, y: margin});\n      const width = lastLegendItemPos.x + columnWidth + margin;\n      const height = bottomMostLegendItemY;\n      return [width, height];\n    }\n    ,\n\n    drawPolygon(context, color, coords) {\n      context.lineWidth = 2;\n      context.fillStyle = color;\n      context.beginPath();\n      context.moveTo(...coords[0]);\n      for (let i = 1; i < coords.length; i++) {\n        context.lineTo(...coords[i]);\n      }\n      context.closePath();\n      context.fill();\n    }\n    ,\n\n    drawScaleBar(context, rightBottomPos) {\n      const {width, text} = this.getScaleBarInfo();\n      const height = 30;\n      const margin = 8;\n      const rightOffset = 15;\n      const bottomOffset = 15;\n      const pos = {\n        x: rightBottomPos.x - (width + margin * 2) - rightOffset,\n        y: rightBottomPos.y - (height + margin * 2) - bottomOffset\n      };\n      // draw background\n      context.globalAlpha = 0.75;\n      context.fillStyle = \"grey\";\n      context.fillRect(pos.x, pos.y, width + margin * 2, height + margin * 2)\n      context.globalAlpha = 1;\n      context.lineWidth = 1.5;\n      context.closePath()\n      context.strokeStyle = \"white\";\n      // draw the scale line shape\n      const x = pos.x + margin;\n      const y = pos.y + margin;\n      context.beginPath()\n      context.moveTo(x, y);\n      context.lineTo(x, y + height)\n      context.lineTo(x + width, y + height)\n      context.lineTo(x + width, y);\n      context.stroke()\n      // write length text below the legend box\n      context.textBaseline = \"bottom\";\n      context.textAlign = \"center\"\n      context.fillStyle = \"white\";\n      context.font = \"15px Times\";\n      context.fillText(text, x + width / 2, y + height - margin);\n    }\n    ,\n\n    createMapPDF(title, filename, mapCanvas, {margin, topMargin, mapFrameSize, pageDim, format}) {\n      const pdf = new jsPDF(\"landscape\", undefined, format);\n      pdf.setFont(\"Times\").setFontType(\"bold\").setFontSize(15);\n      pdf.text(title, parseInt(pageDim[0] / 2), 9, null, null, \"center\");\n      try {\n        pdf.addImage(mapCanvas.toDataURL(\"image/png\"), \"JPEG\", margin, topMargin, mapFrameSize[0], mapFrameSize[1]);\n        pdf.save(`${filename}.pdf`);\n      } catch (error) {\n        // showErrorToast(\"Error Occurred! Please try it again.\");\n        console.log(error);\n      }\n    }\n    ,\n\n    getScaleBarInfo() {\n      const scaleLine = document.querySelector(\".ol-scale-line-inner\");\n\n      return {width: scaleLine.clientWidth, text: scaleLine.innerText};\n    }\n    ,\n\n    proxifyWMSLayers() {\n      this.TimeSeriesLayerCollection.forEach((layerobj) => {\n        let properties = layerobj.getProperties();\n        if (properties.changeWMSProxy) {\n          let layer = layerobj.getLayer();\n          if (properties.ThreddsDataServerVersion) {\n            layer.AllLayersList.forEach((timeDimensionLayer) => {\n              const source = timeDimensionLayer.getSource();\n              const currUrl = source.getUrls()[0];\n              currUrl.includes(this.PROXY_PREFIX) || source.setUrls([this.PROXY_PREFIX + currUrl]);\n            });\n          }\n        }\n      });\n    }\n    ,\n\n    deproxifyWMSLayers() {\n      console.log('--------deproxy');\n      this.TimeSeriesLayerCollection.forEach((layerobj) => {\n        let properties = layerobj.getProperties();\n        if (properties.changeWMSProxy) {\n          let layer = layerobj.getLayer();\n          if (properties.ThreddsDataServerVersion) {\n            layer.AllLayersList.forEach((timeDimensionLayer) => {\n              const source = timeDimensionLayer.getSource();\n              source.setUrls([source.getUrls()[0].replace(this.PROXY_PREFIX, \"\")]);\n            });\n          }\n        }\n      });\n    }\n    ,\n  },\n  computed: {\n    ...\n        mapState([\"PrintMapComponentData\", \"TimeSeriesLayerCollection\", \"mapObject\"]),\n  }\n  ,\n  mounted() {\n    console.log(\"---------------------------------mounted----------------------------------\");\n  }\n  ,\n  beforeCreate() {\n    eventHub.$on(\"OpenDialogOfPrintAndProxyfy\", () => {\n      let target = document.querySelector('#map-control-printing');\n      this.mapObject.setTarget(target);\n      console.log('this looks ok');\n      this.mapObject.updateSize();\n      this.CheckSelectAll = false;\n\n      this.legendInfos = [];\n      this.LegendUIList = [];\n      this.proxifyWMSLayers();\n      this.TimeSeriesLayerCollection.filter((obj) => {\n        let Properties = obj.getProperties();\n        if (Properties.visible === true) {\n          let prop = obj.getProperties();\n          let objj = {\n            id: prop.id,\n            visible: false,\n            title: prop.title,\n            legendPath: prop.legendPath\n          }\n          this.legendInfos.push(objj);\n        }\n        return true;\n      });\n\n    });\n  },\n  deactivated() {\n    console.log(\"---------------------------------deactivated----------------------------------\");\n  }\n}\n</script>\n\n\n<style scoped>\n\n#map-control-printing {\n  height: 700px;\n  width: 100%;\n  border: 1px solid grey;\n  border-radius: 4px;\n}\n\n.muted-text {\n  font-size: 80%;\n  font-weight: 400;\n  text-align: center;\n}\n\n.printing-control {\n  padding-right: 20px;\n}\n\n</style>","<template>\n  <div class=\"layer-legend-item\">\n    <el-checkbox v-model=\"itemVisible.visible\" :label=\"item.title\"></el-checkbox>\n    <br>\n    <img class=\"legend-image\"\n         :src=\"item.legendPath\">\n  </div>\n\n</template>\n<script>\n\n\nexport default {\n  name: \"mapLagend\",\n  data() {\n    return {\n      checked1: true,\n    };\n  },\n  props: {\n    item: {\n      type: Object,\n      required: true\n    },\n  },\n  methods: {\n    calculateHeightWidth() {\n      //    height calculation\n      const img = new Image();\n      img.src = this.item.legendPath;\n      let that = this.item\n      img.onload = function () {\n        that.imgWidth = this.width;\n        that.imgHeight = this.height;\n      }\n    }\n  },\n  computed: {\n    itemVisible() {\n      return this.item;\n    }\n\n  },\n  mounted() {\n    this.calculateHeightWidth();\n  },\n  beforeCreate() {\n\n  },\n\n}\n</script>\n\n\n<style scoped>\n.layer-legend-item {\n  border: 0.5px solid rgb(173, 173, 173);\n  box-shadow: 0 0 2px rgba(34, 34, 34, 0.397);\n  border-radius: 2px;\n  margin: 2px 8px;\n  padding: 2px 6px;\n  min-width: 240px;\n}\n\n</style>","import { render } from \"./mapLagend.vue?vue&type=template&id=625a8cfc&scoped=true\"\nimport script from \"./mapLagend.vue?vue&type=script&lang=js\"\nexport * from \"./mapLagend.vue?vue&type=script&lang=js\"\n\nimport \"./mapLagend.vue?vue&type=style&index=0&id=625a8cfc&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/suman/tethys3Apps/tethysapp-airqualitynp/tethysapp/airqualitynp/vairqualitynp/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-625a8cfc\"]])\n\nexport default __exports__","// import {TethysAppName} from \"../config\";\n\n\nlet BaseUrl = null;\n\nif (process.env.NODE_ENV === \"production\") {\n    // BaseUrl = \"http://localhost:8000\";\n\n    BaseUrl = 'http://smog.icimod.org';\n\n} else {\n\n    BaseUrl = \"http://localhost:8000\";\n}\n\nexport let Action = {\n    Base: BaseUrl,\n    // Base : 'http://110.44.114.244:8001/',\n    CityData: \"apps/airqualitynp/getCityData\",\n\n\n    Aeronet: 'apps/airqualitynp/aeronetaodpm',\n    USEmbassyAOD: 'apps/airqualitynp/usembassypm',\n    getGeoJSONofStations: 'apps/airqualitynp/getGeoJSONofStations',\n    getGeoJsonForOneSatation: 'apps/airqualitynp/getGeoJsonForOneSatation',\n    getAllStationsID: 'apps/airqualitynp/getAllStationsID',\n\n\n    commonAPI: 'apps/airqualitynp/getData/',\n    RegionGeojson: 'apps/airqualitynp/geojsonregion',\n    AOIPolygon: 'apps/airqualitynp/aoipolygon',\n    GetMapImage: 'apps/airqualitynp/getmapimage/',\n    GetImage: 'apps/airqualitynp/downloadImage',\n    SlicedFromCatalog: 'apps/airqualitynp/slicedfromcatalog/',\n    TimeSeriesRasterQuery: 'apps/airqualitynp/timeseriesmodeldata/',\n\n\n};","import { render } from \"./PrintMap.vue?vue&type=template&id=611c9b58&scoped=true\"\nimport script from \"./PrintMap.vue?vue&type=script&lang=js\"\nexport * from \"./PrintMap.vue?vue&type=script&lang=js\"\n\nimport \"./PrintMap.vue?vue&type=style&index=0&id=611c9b58&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/suman/tethys3Apps/tethysapp-airqualitynp/tethysapp/airqualitynp/vairqualitynp/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-611c9b58\"]])\n\nexport default __exports__","import { render } from \"./mapComponentEmission.vue?vue&type=template&id=adcdbffa\"\nimport script from \"./mapComponentEmission.vue?vue&type=script&lang=js\"\nexport * from \"./mapComponentEmission.vue?vue&type=script&lang=js\"\n\nimport \"./mapComponentEmission.vue?vue&type=style&index=0&id=adcdbffa&lang=css\"\n\nimport exportComponent from \"/home/suman/tethys3Apps/tethysapp-airqualitynp/tethysapp/airqualitynp/vairqualitynp/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./emissionTabBody.vue?vue&type=template&id=682f2a18&scoped=true\"\nimport script from \"./emissionTabBody.vue?vue&type=script&lang=js\"\nexport * from \"./emissionTabBody.vue?vue&type=script&lang=js\"\n\nimport \"./emissionTabBody.vue?vue&type=style&index=0&id=682f2a18&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/suman/tethys3Apps/tethysapp-airqualitynp/tethysapp/airqualitynp/vairqualitynp/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-682f2a18\"]])\n\nexport default __exports__","import { render } from \"./airquality.vue?vue&type=template&id=45a6895e\"\nimport script from \"./airquality.vue?vue&type=script&lang=js\"\nexport * from \"./airquality.vue?vue&type=script&lang=js\"\n\nimport \"./airquality.vue?vue&type=style&index=0&id=45a6895e&lang=scss\"\n\nimport exportComponent from \"/home/suman/tethys3Apps/tethysapp-airqualitynp/tethysapp/airqualitynp/vairqualitynp/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import axios from \"axios\";\nimport {Action} from \"../actionType\";\n// import eventHub from '../../utils/utils';\n// import helper from \"../../utils/helpers\";\n\n\nexport const actionBase = axios.create({\n    baseURL: Action.Base\n});\n\nexport async function postApiWithoutToken(action, param) {\n    // eventHub.$emit('before-request');\n    return await new Promise((resolve, reject) => {\n        // setXCSRFToken();\n        // param.csrfmiddlewaretoken=document.querySelector('[name=csrfmiddlewaretoken]').value;\n        actionBase.post(\"/\" + action, param).then(\n            res => {\n                // eventHub.$emit('after-response');\n                resolve(res.data);\n            },\n            err => {\n                console.log(\"error on postapi\");\n                console.log(err);\n                reject(err);\n            }\n        );\n    });\n};\n\nexport async function getApiWithoutToken(action) {\n    return await new Promise((resolve, reject) => {\n        actionBase.get(\"/\" + action).then(\n            res => {\n                resolve(res.data);\n            },\n            err => {\n                console.log(\"hello error getApiWithoutToken\");\n                console.log(err);\n                reject(err);\n            }\n        );\n    });\n};\n\n// function getCookie(name) {\n//     let cookieValue = null;\n//     if (document.cookie && document.cookie !== '') {\n//         const cookies = document.cookie.split(';');\n//         for (let i = 0; i < cookies.length; i++) {\n//             const cookie = cookies[i].trim();\n//             // Does this cookie string begin with the name we want?\n//             if (cookie.substring(0, name.length + 1) === (name + '=')) {\n//                 cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n//                 break;\n//             }\n//         }\n//     }\n//     return cookieValue;\n// }\n//\n// function setXCSRFToken() {\n//     let csrftokenCookie = getCookie('csrftoken');\n//     actionBase.defaults.headers.common[\"X-CSRFToken\"] = csrftokenCookie;\n// }\n\n//\n// function clearXCSRFToken() {\n//     delete actionBase.defaults.headers.common[\"X-CSRFToken\"];\n// }\n","import {getApiWithoutToken,postApiWithoutToken} from './api';\nimport {Action} from '../actionType';\n// import {ThreddsServer} from '../../config';\n\nexport async function getCityData(){\n        const action = Action.CityData\n        const response = await getApiWithoutToken(action);\n        return response;\n}\n\nexport async function getGeoJsonForOneSatation(stringParam){\n        const action = Action.getGeoJsonForOneSatation+stringParam\n        const response = await getApiWithoutToken(action);\n        return response;\n}\n\n\nexport async function PostSlicedFromCatalog(param){\n        const action = Action.SlicedFromCatalog\n        const response = await postApiWithoutToken(action,param);\n        return response;\n}\n\nexport async function PostGetStationData(param){\n        const action = Action.commonAPI\n        const response = await postApiWithoutToken(action,param);\n        return response;\n}\n\nexport async function PostGet2DImage(param){\n        const action = Action.GetMapImage\n        const response = await postApiWithoutToken(action,param);\n        response.image=Action.Base+'/'+Action.GetImage+ \"?ImageName=\" + response.image\n        return response;\n}\n\nexport async function TimeSeriesRasterQuery(param){\n        const action = Action.TimeSeriesRasterQuery\n        const response = await postApiWithoutToken(action,param);\n        return response;\n}\n","import {createStore} from \"vuex\";\nimport {\n    getCityData,\n    PostSlicedFromCatalog,\n    getGeoJsonForOneSatation,\n    PostGetStationData,\n    PostGet2DImage, TimeSeriesRasterQuery\n} from \"../api/airquality\";\n\nexport default createStore({\n    state() {\n        return {\n            CascaderInventriesComparison: [],\n            CascaderSectorContribution: [],\n            CascaderSectorShare: [],\n            CascaderTimeSeries: [],\n            SelectedLayerObj: null,\n\n            selectInteraction: null,\n            mapObject: null,\n            TimeSeriesLayerCollection: [],\n            WorkingVectorLayer: null,\n            mapControlVariable: {\n                data_period: 'Recent',\n                select_by: 'Parameter',\n\n                // Location parameter\n                location_by: 'default_locations',\n                default_location: '',\n                is_AOI_Feature_selected: false,\n                location_by_wktValue: '',\n                location_by_geometryType: '',\n\n                location_by_pollutant_value1: [],\n                location_by_pollutant_value2: [],\n                location_by_pollutant_value3: [],\n                location_by_pollutant_value4: [],\n\n                //parameter parameter\n                radioValue: 1,\n                parameter_by_pollutant_value: [],\n                is_parameter_by_pollutant_value_stationData: true,\n\n                parameter_by_pollutant_value_stationData_val1: '',\n                parameter_by_pollutant_value_stationData_val2: '',\n                parameter_by_pollutant_value_stationData_val3: '',\n                parameter_by_pollutant_value_stationData_val4: '',\n\n                parameter_by_location__1: {\n                    location_by: 'default_locations',\n                    default_location: '',\n                    is_AOI_Feature_selected: false,\n                    wktValue: '',\n                    geometryType: '',\n                    featureExtent: '',\n                },\n                parameter_by_location__2: {\n                    location_by: 'default_locations',\n                    default_location: '',\n                    is_AOI_Feature_selected: false,\n                    wktValue: '',\n                    geometryType: '',\n                    featureExtent: '',\n                },\n                parameter_by_location__3: {\n                    location_by: 'default_locations',\n                    default_location: '',\n                    is_AOI_Feature_selected: false,\n                    wktValue: '',\n                    geometryType: '',\n                    featureExtent: '',\n                },\n                parameter_by_location__4: {\n                    location_by: 'default_locations',\n                    default_location: '',\n                    is_AOI_Feature_selected: false,\n                    wktValue: '',\n                    geometryType: '',\n                    featureExtent: '',\n                },\n            },\n\n            PrintMapComponentData: {\n                PrintMapDialogVisible: false\n            }\n        };\n    },\n    mutations: {\n        setCascaderInventriesComparison(state, payload) {\n            state.CascaderInventriesComparison = payload;\n        }, setCascaderSectorContribution(state, payload) {\n            state.CascaderSectorContribution = payload;\n        }, setCascaderSectorShare(state, payload) {\n            state.CascaderSectorShare = payload;\n        }, setCascaderTimeSeries(state, payload) {\n            state.CascaderTimeSeries = payload;\n        }, setSelectedLayerObj(state, payload) {\n            state.SelectedLayerObj = payload;\n        }, setSelectInteraction(state, payload) {\n            state.selectInteraction = payload;\n        }, setMapObject(state, payload) {\n            state.mapObject = payload;\n        }, setWorkingVectorLayer(state, payload) {\n            state.WorkingVectorLayer = payload;\n        },\n        appendTimeSeriesLayerCollection(state, payload) {\n            state.TimeSeriesLayerCollection.push(payload);\n        }\n    },\n    actions: {\n        // async getCascaderOptions(context) {\n        //     let data = await getCascaderOptions();\n        //     context.commit(\"setCascaderInventriesComparison\", data.InventriesComparison)\n        //     context.commit(\"setCascaderSectorContribution\", data.SectorContribution)\n        //     context.commit(\"setCascaderSectorShare\", data.SectorShare)\n        //     context.commit(\"setCascaderTimeSeries\", data.TimeSeries)\n        //     return data\n        // },\n        // async PostChartDataProcess(context, param) {\n        //     let data = await PostChartDataProcess(param);\n        //     return data;\n        // },\n        // async GetLayerStatInfo(context, param) {\n        //     let data = await GETLayerInfoStat(param);\n        //     return data;\n        // },\n        async getCityData(context, param) {\n            let data = await getCityData(param);\n            return data;\n        },\n        async getGeoJsonForOneSatation(context, stringParam) {\n            let data = await getGeoJsonForOneSatation(stringParam);\n            return data;\n        },\n        async PostSlicedFromCatalog(context, param) {\n            let data = await PostSlicedFromCatalog(param);\n            return data;\n        },\n        async PostGetStationData(context, param) {\n            let data = await PostGetStationData(param);\n            return data;\n        },\n        async TimeSeriesRasterQuery(context, param) {\n            let data = await TimeSeriesRasterQuery(param);\n            return data;\n        },\n        async PostGet2DImage(context, param) {\n            let data = await PostGet2DImage(param);\n            return data;\n        },\n    },\n    getters: {\n        getLayer: (state) => (id) => {\n            var layer;\n            for (let i = 0; i < state.TimeSeriesLayerCollection.length; i++) {\n                // console.log(TimeSeriesLayerCollection[i].getProperties().id);\n                if (id == state.TimeSeriesLayerCollection[i].getProperties().id) { ///popDensityLayer.getProperties().id\n                    layer = state.TimeSeriesLayerCollection[i].getLayer();\n                    break;\n                }\n            }\n            return layer;\n        }, getBindedLayer: (state) => (id) => {\n            var layer;\n            for (let i = 0; i < state.TimeSeriesLayerCollection.length; i++) {\n                if (id == state.TimeSeriesLayerCollection[i].getProperties().id) { ///popDensityLayer.getProperties().id\n                    layer = state.TimeSeriesLayerCollection[i];\n                    break;\n                }\n            }\n            return layer;\n        }\n    },\n    modules: {},\n});","import { createApp } from \"vue\";\nimport emission from \"./views/airquality.vue\";\nimport store from \"./store/modules/airquality\";\nimport ElementPlus from 'element-plus';\nimport 'element-plus/theme-chalk/index.css';\n\nimport {library,dom} from \"@fortawesome/fontawesome-svg-core\";\nimport {faHandPointer,faTimes,faMapMarkerAlt,faDrawPolygon,faPrint} from \"@fortawesome/free-solid-svg-icons\";\n\n\nlibrary.add(faHandPointer);\nlibrary.add(faTimes);\nlibrary.add(faMapMarkerAlt);\nlibrary.add(faDrawPolygon);\nlibrary.add(faPrint);\ndom.watch();\n\n\nconst app = createApp(emission);\napp.use(store);\napp.use(ElementPlus);\napp.mount('#app');\n\n","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./NavBar.vue?vue&type=style&index=0&id=084f5e1e&scoped=true&lang=css\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./mapLagend.vue?vue&type=style&index=0&id=625a8cfc&scoped=true&lang=css\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./emissionTabBody.vue?vue&type=style&index=0&id=682f2a18&scoped=true&lang=css\"","module.exports = __webpack_public_path__ + \"static/airqualitynp/images/AODAeroNet.jpg\";","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./airquality.vue?vue&type=style&index=0&id=45a6895e&lang=scss\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./about.vue?vue&type=style&index=0&id=7af73aff&scoped=true&lang=css\"","module.exports = __webpack_public_path__ + \"static/airqualitynp/images/usembassyPm2p5.jpg\";","module.exports = __webpack_public_path__ + \"static/airqualitynp/images/rgblegend.jpg\";"],"sourceRoot":""}